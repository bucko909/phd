Index: 4thyeardraft.latex
===================================================================
--- 4thyeardraft.latex	(revision 61)
+++ 4thyeardraft.latex	(working copy)
@@ -1,6 +1,6 @@ # First few to change to double sided; reduce spacing.
-\documentclass[a4paper,12pt,oneside]{book}
+\documentclass[a4paper,12pt,duplex]{book}
 
 \usepackage{amsmath}
 \usepackage{amssymb}
 \usepackage{amsthm}
 \usepackage{color}
@@ -9,11 +9,11 @@
 \usepackage{cite}
 \usepackage{txfonts}
 \usepackage{enumerate}
 \usepackage{supertabular}
 \usepackage{epsf}
-\usepackage[left=4cm]{geometry}
+\usepackage[left=4cm,right=3cm]{geometry}
 
 \newtheorem{defn}{Definition}[section]
 \newtheorem{lemma}[defn]{Lemma}
 \newtheorem{proposition}[defn]{Proposition}
 \newtheorem{theorem}[defn]{Theorem}
@@ -50,10 +50,12 @@
 
 \usepackage{setspace}
 
 \begin{document}
 
+\setstretch{1.2}
+
 \frontmatter{}
 \thispagestyle{empty}
 
 %\input epsf
 \setlength{\unitlength}{1mm}
@@ -76,11 +78,10 @@
 \end{center}
 \setlength{\unitlength}{1pt}
 \newpage
 
 \pagestyle{plain}
-\doublespacing
 \setcounter{page}{1}
 
 \addcontentsline{toc}{section}{Contents}
 \tableofcontents
 
@@ -100,11 +101,11 @@ # Noticed this mistake on the acknowledgements
 
 Further, I would like to specifically thank my mother and sister, whose help in typing up my work has been a great help in allowing me to continue to use my hands.
 
 My Ph.D.~has been generously funded by the Engineering and Physical Sciences Research Council.
 
-This thesis has been created using entirely open-source software including Debian GNU/Linux, xfig, \LaTeX and vim.
+This thesis has been created using entirely open-source software including Debian GNU/Linux, xfig, \LaTeX{} and vim.
 
 \section*{Declaration}
 \addcontentsline{toc}{section}{Declaration}
 
 I declare that, to the best of my knowledge, the material contained in this thesis is original and my own work except where otherwise indicated, cited, or commonly known.
@@ -155,10 +156,11 @@ # In pen on the printed copy (table of symbols)
 $A$-FSA & A finite state automaton which recognises words in $A^*$. \\
 $A$-DFA & A deterministic $A$-FSA. \\
 $x =^y z$ & Shorthand for $|x - z| \le y$. \\
 $u =_G v$ & Words $u$ and $v$ represent the same group element. \\
 $u =_F v$ & Words $u$ and $v$ represent the same free group element. \\
+$\slex(w)$ & The short-lex reduction of a word $w$. \\
 \end{supertabular}
 
 
 \mainmatter{}
 
@@ -200,11 +202,11 @@ # Technical inaccuracy here, P3 new.
 
 A number of results in the thesis make reference to running times of algorithms. These are normally stated in terms of a number of ``fixed'' entities, for instance some word-hyperbolic group. Where a quantity is described as being in $O(n)$ for some $n$, any part of the runtime which depends on these fixed entities is ignored: we presume that there is some constant $K$ depending only on the fixed entities such that the runtime is $O(Kn)$.
 
 Unless noted otherwise, we will assume that the algorithms in question are to be run under a RAM model of computing; that is, one in which seeking to arbitrary locations of memory and basic arithmetic can be performed in constant time. This is a sensible model for any algorithm being implemented upon modern computers provided the input is small enough that processing it will not exhaust the system RAM.
 
-The run-time of the algorithms detailed here appears to be unchanged when they are run on a Turing machine, provided the machine is given a sufficiently large number of states, symbols, heads and tapes (the number of states, symbols, heads and tapes will be independent of input, however) and provided one is rather more careful in cases where it appears arithmetic is needed to be performed. For instance, finding the length of a word $w$ of arbitrary length would take time $O(|w| log |w|)$, but testing if one word is longer than another is simply a case of reading both words simultaneously and observing which ends first, which takes time $O(|w|)$. We use a RAM model to avoid having to repeatedly deal with these technicalities.
+The run-time of the algorithms detailed here appears to be unchanged when they are run on a Turing machine, provided the machine is given a sufficiently large number of states, symbols, heads and tapes (the number of states, symbols, heads and tapes will be dependent only on the ambient groups picked, however) and provided one is rather more careful in cases where it appears arithmetic is needed to be performed. We use a RAM model in the text to avoid having to repeatedly deal with these technicalities.
 
 \section{Metric Spaces and Paths}
 
 We assume the reader has at least a basic understanding of metric spaces.
 
@@ -302,11 +304,11 @@ # Corr P9 old
 
 Denote the \textbf{length}, $k$, of $w$ as $|w|$, and if $G$ is a group generated by $X$ then denote by $|w|_G$ the smallest length of an $X$-word equal in $G$ to $w$.
 
 Let $w(i) := a_1 a_2 \ldots a_i$ for $0 \le i \le |w|$. If $i < 0$ let $w(i)$ be the empty word and if $i > |w|$ let $w(i) := w$.
 
-This definition can instead extended to the integers by considering $w(i)$ to be a subword of $w^n$ or $w^{-n}$ for large enough $n$. In order to avoid confusion, we use $w^\infty$ to represent this extension in the following notation: if $i \in \mathbb{N}$ and $n = \floor{\frac{i}{|w|}}$ then $w^\infty(i) = w^nw(i - n|w|)$, and if $-i \in \mathbb{N}$, $w^\infty(i) = (w^{-1})^\infty(-i)$.
+This definition can be extended to the integers by considering $w(i)$ to be a subword of $w^n$ or $w^{-n}$ for large enough $n$. In order to avoid confusion, we use $w^\infty$ to represent this extension in the following notation: if $i \in \mathbb{N}$ and $n = \floor{\frac{i}{|w|}}$ then $w^\infty(i) = w^nw(i - n|w|)$, and if $-i \in \mathbb{N}$, $w^\infty(i) = (w^{-1})^\infty(-i)$.
 
 Where $\Gamma$ is an $X$-graph with base point $\vertex{a}$, define the two-way infinite path $\widetilde{w^\infty} : \mathbb{R} \to \Gamma$ by setting $\widetilde{w^\infty}(i) := \vertex{a} \cdot w^\infty(i)$ for any integer $i$ and extending to $\mathbb{R}$ in the obvious way.
 
 Next, for $0 \le i \le j \le k$ we let $w(i:j) := a_{i+1} \ldots a_j =_F w(i)^{-1}w(j)$. Let $w[i] := a_i$.
 
@@ -316,11 +318,11 @@ # Corr P10 old
 Note that if $w$ labels a geodesic path in $\Gamma$ then $w_L$ labels a path to a mid-vertex and $w = w_Lw_R$ always. As an example, let $w = abcde$. Then $w^\infty(11) = abcdeabcdea$, $w^\infty(-3) = w^{-1}(3) = e^{-1}d^{-1}c^{-1}$, $w_L = w(2) = ab$, $w_R = w(2:5) = cde$ and $w_C = cdeab$.
 
 We can now define a ``straight'' word.
 
 \begin{defn}
-Given an $X$-graph $\Gamma$ and with base vertex $\vertex{a}$, a word non-empty $w$ is \textbf{straight} if $\widetilde{w^\infty}$ is a geodesic.
+Given an $X$-graph $\Gamma$ and with base vertex $\vertex{a}$, a non-empty word $w$ is \textbf{straight} if $\widetilde{w^\infty}$ is a geodesic.
 
 By fixing some ordering on $X^{\pm 1}$ we can produce a lexicographic ordering on $X$-words. We say $w$ is a \textbf{short-lex least representative} if $w$ labels a geodesic at $\vertex{a}$ and no other geodesic connecting $\vertex{a}$ to $\vertex{a} \cdot w$ has a label lexicocgraphically less than $w$.
 
 A non-empty word is \textbf{short-lex straight} if $w^i$ is a short-lex least word for each $i > 0$.
 \end{defn}
@@ -474,11 +476,11 @@ # Corr P18 old
 \end{proposition}
 
 \begin{proof}
 For (\ref{item:reg_empty}) let $S = X = Y = \{1\}$ and $\tau$ be the empty set. For (\ref{item:reg_all}), let  $S = X = Y = \{1\}$ and let $\tau = S \times A' \times S$.
 
-For (\ref{item:reg_word}) and (\ref{item:reg_loop}), suppose $y = a_1 \cdots a_n$. For (\ref{item:reg_word}), let $S = \{ 0, \ldots, n \}$, $X = \{ 0 \}$ and $Y = \{ n \}$. Let $\tau = \{ (i - 1, a_i, i) : 1 \le i \le n \}$. For (\ref{item:reg_loop}), let $S = \{ 1, \ldots, n \}$, $X = \{ 0 \}$ and $Y = \{ 1 \}$. Let $\tau = \{ (i, a_i, i + 1) : 1 \le i \le n - 1 \} \cup \{ (n, a_n, 1) \}$.
+For (\ref{item:reg_word}) and (\ref{item:reg_loop}), suppose $y = a_1 \cdots a_n$. For (\ref{item:reg_word}), let $S = \{ 0, \ldots, n \}$, $X = \{ 0 \}$ and $Y = \{ n \}$. Let $\tau = \{ (i - 1, a_i, i) : 1 \le i \le n \}$. For (\ref{item:reg_loop}), let $S = \{ 1, \ldots, n \}$, $X = \{ 1 \}$ and $Y = \{ 1 \}$. Let $\tau = \{ (i, a_i, i + 1) : 1 \le i \le n - 1 \} \cup \{ (n, a_n, 1) \}$.
 
 For the remainder of the examples, assume the FSAs have state sets $S_i$, start states $X_i$, accept states $Y_i$ and transitions $\tau_i$. For convenience, assume that $S_1 \cap S_2 = \phi$.
 
 For (\ref{item:reg_proj}) let $S = S_1$, $X = X_1$, $Y = Y_1$ and $\tau = \{ (s, a_1, t) : (s, (a_1, \ldots, a_{n_1}), t) \in \tau_1 \}$, replacing any transitions labelled $\$$ with transitions labelled $\epsilon$.
 
@@ -557,17 +559,17 @@ # Corr, P24 old
 
 In fact, all of the methods we use above will produce a complete description of the set of \textit{all} conjugating elements as a regular set. Thus we have:
 
 \begin{theorem}
 \label{thm:linear_conj}
-Given integers $\delta \ge 1$ and $l$, there is an algorithm which, given a $\delta$-hyperbolic group $G=<X|R>$ with $|X| \le l$ and lists $A$ and $B$ of words in the generators of $G$ can find a (non-deterministic) $X^{\pm 1}$-FSA whose language $L$ satisfies:
+Given integers $\delta \ge 1$ and $l$, there is an algorithm which, given a $\delta$-hyperbolic group $G=<X|R>$ with $|X| \le l$, a number $m \ge 0$ and lists $A = (a_1, \cdots, a_m)$ and $B = (b_1, \cdots, b_m)$, each containing words in the generators of $G$, can find a (non-deterministic) $X^{\pm 1}$-FSA whose language $L$ satisfies:
 \begin{itemize}
 \item $A^w =_G B$ for any $w \in L$, and
 \item for any $g \in G$ such that $A^g =_G B$ there is an element $w \in L$ with $w =_G g$.
 \end{itemize}
 
-The algorithm will run in time $O(m\mu)$, where $\mu$ is an upper bound for the length of words in $A$ and $B$. It can be modified to return a single conjugating element $g \in G$ with $A^g = B$, if one exists, without affecting the running time.
+If $|a_i| \le \mu$ and $|b_i| \le \mu$ for each $1 \le i \le m$ then the algorithm will run in time $O(m\mu)$. It can be modified to return a single conjugating element $g \in G$ with $A^g = B$, if one exists, without affecting the running time.
 \end{theorem}
 
 Because the methods here express all conjugating elements, they additionally allow computation of the centraliser of a list of elements.
 
 \section{Notation}
@@ -575,11 +577,11 @@ # Corr, P25b old
 
 In this section, we provide some notation which is used during the remainder of the chapter. We start by suggesting that the reader familiarise themselves with the definitions in Section \ref{section:xwords}.
 
 Next, recall Lemma \ref{lemma:short_lex}, that we have a function $\slex$ which returns the short-lex least representative in $G$ of any word and can be computed in time linear in input word length. We extend $\slex$ to operate on lists and sets in the obvious way.
 
-There are a number of constants which will be used throughout this chapter. These are:
+There are a number of constants which will be used throughout this chapter (as well as some points in later chapters where this chapter's results are used). These are:
 
 \begin{itemize}
 \item $L := 34\delta + 2$
 \item $V$, the number of vertices in $B_{2\delta}(\vertex{e})$
 \item $Q$, the number of vertices in $B_{4\delta}(\vertex{e})$
@@ -588,11 +590,11 @@ # Corr, P25a old
 
 \section{The Infinite Order Case}
 
 \label{section:inf_order}
 
-In this section, we will assume that we are given two equal length lists $A$ and $B$ whose elements $X$-words, and that all elements of $A$ and $B$ have length at most $\mu$. We will also assume that the first element of $A$ is of infinite order.
+In this section, we will assume that we are given two equal length lists $A$ and $B$ whose elements are $X$-words, and that all elements of $A$ and $B$ have length at most $\mu$. We will also assume that the first element of $A$ is of infinite order.
 
 The aim of the section is to test which elements $g \in G$ have $A^g =_G B$. The method is something of a combination of those methods outlined in \cite{epstein2006linearity} and \cite{bridson2005conjugacy}.
 
 We begin with several sections which bring together results from other sources and then put those results together to give an algorithm which finds elements which conjugate $A$ to $B$.
 
@@ -691,11 +693,11 @@ # Added reference as this was bugging me for a while -> P22 new
 \begin{proposition}
 \label{prop:test_conj_sls}
 If $u$ is short-lex straight and $v$ is a word such that $\widetilde{v^\infty}$ is a $(1, 2\delta)$ $L$-local quasigeodesic with $|v|_G > L$, and $g^{-1}vg =_Gu$ for some $g$, then there exists a word $h$ with $|h| \le 6\delta$ such that $\slex(h^{-1}vh)$ is a cyclic conjugate of $u$. 
 \end{proposition}
 
-One can test if a word $u$ is a cyclic conjugate of another word $v$ by testing if $v$ appears as a substring of $u^2$, which can be done for instance using the Knuth-Morris-Pratt algorithm which runs in time $O(|u| + |v|)$. We denote the use of this algorithm by \textsc{FindSubstring} and later, \textsc{FindSecondSubstring}.
+One can test if a word $u$ is a cyclic conjugate of another word $v$ by testing if $v$ appears as a substring of $u^2$, which can be done for instance using the Knuth-Morris-Pratt algorithm which runs in time\footnote{Strictly speaking, the standard KMP algorithm will run in worse than linear time on a Turing machine, due to construction of a table whose length depends on the input. However, the algorithm can be modified to generate the table in a more tape-friendly way; \cite{galil1976real} offers an implementation which will test for substrings in linear time (actually, that paper's method runs in real-time given a suitably arranged input).} $O(|u| + |v|)$. We denote the use of this algorithm by \textsc{FindSubstring} and later, \textsc{FindSecondSubstring}.
 
 The following pseudocode will test conjugacy of such words $u$, $v$:
 
 \begin{algorithm}
 \label{algorithm:testconjugacyslslong}
@@ -778,11 +780,11 @@ # Corr, P32 old
 
 It is at this point that we break from the method in \cite{epstein2006linearity}.
 
 \subsection{Finding Long Powers of Infinite Order Elements}
 
-In this section, we will show that given an $X$-word $w$ which represents an infinite order element of $G$, we can find a conjugate $w'$ of a power of $w$, for which $\slex(w'_C)$ is longer than $2L$. Thus given two infinite order words $u$ and $v$ we may find conjugates of powers of $u$ and $v$ to which we may apply \textsc{GetConjugationCandidatesEH}.
+In this section, we will show that given an $X$-word $w$ which represents an infinite order element of $G$, we can find a short-lex reduced word $w'$ which is conjugate in $G$ to a power of $w$ and for which $\slex(w'_C)$ is longer than $2L$. Thus given two infinite order words $u$ and $v$ we may find conjugates of powers of $u$ and $v$ to which we may apply \textsc{GetConjugationCandidatesEH}.
 
 We begin by recalling some well-known properties of word-hyperbolic groups and hyperbolic spaces; these results are taken from \cite{alonso1990notes} although similar results appear in many other expositions of the subject area. The exact values in the statements are taken from the proofs in \cite{alonso1990notes} (the statements generally simply state that the constants in question exist). The first is Proposition 3.2 of \cite{alonso1990notes}. 
 
 \begin{proposition}
 \label{prop:inf_order_qgeo}
@@ -869,11 +871,11 @@ # The -> the
 &  >  & 2L
 \end{eqnarray*} as required.
 \end{proof}
 
 \begin{remark}
-The value of $M$ used above is of course by no means optimal. If nothing else, The powers of $L$, $V$ and $\delta$ used in $D$ can be reduced at the cost of a potentially larger constant by increasing the degree in the polynomial bound for $e^n$, and in any case for a particular group and presentation, it is likely that a much lower bound can be obtained by solving the problem algorithmically. However, the above bound illustrates that there is a definite computable value.
+The value of $M$ used above is of course by no means optimal. If nothing else, the powers of $L$, $V$ and $\delta$ used in $D$ can be reduced at the cost of a potentially larger constant by increasing the degree in the polynomial bound for $e^n$, and in any case for a particular group and presentation, it is likely that a much lower bound can be obtained by solving the problem algorithmically. However, the above bound illustrates that there is a definite computable value.
 \end{remark}
 
 By Proposition \ref{prop:inf_order_qgeo}, short infinite order words can be raised to large powers to get an appropriate input for \textsc{GetConjugationCandidatesEH}. We also wish to confirm that words which are already appropriate inputs stay appropriate when raised to the power of $M$.
 
 \begin{proposition}
@@ -895,10 +897,11 @@ # Clarification, P29 new
 But then \begin{eqnarray*}
         |(\slex((w_C)^n))_C|
 &  =  & |u_C| \\
 &  =  & d(\vertex{p}, \vertex{q}) \\
 & \ge & \frac{14}{17}Ln - 8\delta \\
+& \ge & \frac{14}{17}L \times 34\delta - 8\delta \\
 & \ge & 2L
 \end{eqnarray*} as required.
 \end{proof}
 
 By the above two results $|(\slex((u_C)^M))_C|_G > 2L$ for any infinite order word $u$ which labels a geodesic in $\Gamma$. In particular, if $u$ and $v$ label geodesics in $\Gamma$ and are of infinite order in $G$ then \textsc{GetConjugationCandidatesEH} can be applied to $\slex((u_C)^M)$ and $\slex((v_C)^M)$ by executing \textsc{GetConjugationCandidates}$(u, v)$ as defined in the following pseudocode:
@@ -934,15 +937,24 @@ # This proof had many duplicate symbols and some stuff in the wrong order. Fixed and clarified. P30 new.
 \end{corollary}
 
 \begin{proof}
 Let $u_1 := \slex(u)$, let $u_2 := \slex(((u_1)_C)^M)$ and let $u_3 := \slex((u_2)_C)$. By Proposition \ref{prop:make_long} or Proposition \ref{prop:long_stays_long} we know that $|u_3| > 2L$.
 
-By Proposition \ref{prop:short_conj}, all positive powers of $u_3$ label $L$-local $(1, 2\delta)$-quasigeodesics and then by Proposition \ref{prop:long_conj_slex} we know that $u_4 := \slex(k^{-1}u_3^lk)$ is short-lex straight for some $l \le Q^2$ and some $X$-word $k$ of length at most $4\delta$. Notice that $u_4 =_G (u^{lM})^{w_u}$ where $w_u := k(u_2)_L(u_1)_L$ so that $|w_u| \le \frac{(M+1)|u|}{2}+4\delta$. This proves the first part.
+By Proposition \ref{prop:short_conj}, all positive powers of $u_3$ label $L$-local $(1, 2\delta)$-quasigeodesics and then by Proposition \ref{prop:long_conj_slex} we know that $u_4 := \slex(k^{-1}u_3^lk)$ is short-lex straight for some $l \le Q^2$ and some $X$-word $k$ of length at most $4\delta$. Notice that $u_4 =_G (u^{lM})^{w_u}$ where $w_u := (u_1)_L(u_2)_Lk$ so that $|w_u| \le \frac{(M+1)|u|}{2}+4\delta$. This proves the first part.
+
+We now need to prove the second part, so suppose some such $g$ has been picked.
+
+Suppose $u_4 = u_5^c$ for some integer $c$ (which we assume is maximal for this property). By Proposition \ref{prop:find_centraliser_sls} there is a set $S$ containing elements of the form $yp$, where $p$ is an $X$-word of length at most $2\delta$ and $y$ is a prefix of $u_5$ which depends only on $p$, such that every element of the centraliser of $u_4$ is of the form $u_5^nyp$ for some $yp \in S$. This is equal to $u_4^au_5^byp$ for some integers $a$ and $b$ with $0 \le b < c$. Notice that $|u_5^byp| \le |u_4| + 2\delta$.
 
-Suppose $u_4 = u_5^l$ for some integer $l$ (which we assume is maximal for this property). By Proposition \ref{prop:find_centraliser_sls} there is a set $S$ containing elements of the form $yp$, where $p$ is an $X$-word of length at most $2\delta$ and $y$ is a prefix of $u_5$ which depends only on $p$, such that every element of the centraliser of $u_4$ is of the form $u_5^nyp$. This is equal to $u_4^iu_5^jyp$ for some integers $i$ and $j$ with $0 \le j < l$ and some $yp \in S$. Notice that $|u_5^jyp| \le |u_4| + 2\delta \le MQ^2|u| + 2\delta$.
+Construct $v_1$, $v_2$ and $v_3$ in the same way as $u_1$ through $u_3$, setting $w_v := (v_1)_L(v_2)_L$. Since $u$ and $v$ are conjugate, so are $u_4$ and $v_3^l$, so by Proposition \ref{prop:test_conj_sls} there is an $X$-word $q$ with $|q| \le 6\delta$ such that $(v_3^l)^q$ is a cyclic conjugate of $u_4$. Now any element $G$ conjugating $u_4$ to $v_3^l$ is of the form $u_4^ar$ where $r =_G u_5^bypu_4(m)q^{-1}$ for some $yp \in S$ and some integers $a$, $b$ and $m$ with $b < c$. Note that $|r|_G \le 2|u_4| + 8\delta$.
 
-Construct $v_1$, $v_2$ and $v_3$ in the same way as $u_1$ through $u_3$, setting $w_v := (v_2)_L(u_1)_L$. Since $u$ and $v$ are conjugate, so are $u_4$ and $v_3^l$, so by Proposition \ref{prop:test_conj_sls} there is an $X$-word $h$ with $|h| \le 6\delta$ such that $(v_3^l)^h$ is a cyclic conjugate of $u_4$. Now any element of $G$ conjugating $u_4$ to $v_3^l$ is of the form $u_4^iu_5^jypu_4(k)h^{-1}$ for integers $i$, $j$ and $k$ and some $yp \in S$. Then $g$ must be equal to $w_uu_4^iu_5^jyphw_v^{-1} =_G u^{lMi}w_uu_5^jypu_4(k)h^{-1}w_v^{-1}$ and $|w_uu_5^jypu_4(k)h^{-1}w_v^{-1}| \le \frac{(M+1)((2Q^2+1)|u| + |v|)}{2} + MQ^2|u| + 16\delta \le 4MQ^2(|u|+|v|)+16\delta$.
+Now, $g$ must be equal to $w_uu_4^arw_v^{-1}$ where $r$ is some element as described in the previous paragraph. Using $u_4 =_G (u^{lM})^{w_u}$, we see that $g =_G u^ih$ where $i = lMa$ and $h =_G w_urw_v^{-1}$ is a short-lex reduced word. Using the bounds above, \begin{eqnarray*}
+        |h|
+& \le & |w_u|_G + |r|_G + |w_v^{-1}|_G \\
+& \le & \frac{(M+1)|u|}{2} + 4\delta + 2MQ^2|u| + 8\delta + \frac{(M+1)|v|}{2} + 4\delta \\
+& \le & 4MQ^2(|u|+|v|)+16\delta.
+\end{eqnarray*}
 \end{proof}
 
 We also have a method of checking whether an element is of finite order.
 
 \begin{corollary}
@@ -988,11 +1000,11 @@ # Corr, P41 old
 \end{center}
 \end{figure}
 
 \begin{lemma}
 \label{lemma:trapezium}
-Let $\vertex{a}$, $\vertex{b}$, $\vertex{c}$ and $\vertex{d}$ be vertices in $\Gamma$ such that $l:= d(\vertex{a}, \vertex{b}) = d(\vertex{c}, \vertex{d})$. Let $\alpha_1 : [0, l] \to \Gamma$ be a geodesic path from $\vertex{a}$ to $\vertex{b}$ and let $\alpha_2 : [0, l] \to \Gamma$ be a geodesic path from $\vertex{d}$ to $\vertex{c}$ as in Firgure \ref{figure:thin_quad}.
+Let $\vertex{a}$, $\vertex{b}$, $\vertex{c}$ and $\vertex{d}$ be vertices in $\Gamma$ such that $l:= d(\vertex{a}, \vertex{b}) = d(\vertex{c}, \vertex{d})$. Let $\alpha_1 : [0, l] \to \Gamma$ be a geodesic path from $\vertex{a}$ to $\vertex{b}$ and let $\alpha_2 : [0, l] \to \Gamma$ be a geodesic path from $\vertex{d}$ to $\vertex{c}$ as in Figure \ref{figure:thin_quad}.
 
 Define the constants \begin{eqnarray*}
 K & := & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{d})  \\
 N_1 & := & (\vertex{a}, \vertex{b})_{\vertex{d}} \\ 
 N_2 & := & (\vertex{b}, \vertex{c})_{\vertex{d}}.
@@ -1080,11 +1092,11 @@ # Minor correction, P36 new
 \label{lemma:thinness_extends}
 Suppose that $y$ is a straight word, that $g$ labels a geodesic in $\Gamma$, and that $N \in \mathbb{Z}$. If $N - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}} > V$ then there exist constants $d, e$ with $|g| - 2\delta \le d \le |g|$ and $1 \le e \le V$ such that \[ |g^{y^i}|_G =^{2\delta} d \] for all $i \in \mathbb{Z}$, and \[ y^e \in C_G(g). \]
 \end{lemma}
 
 \begin{proof}
-The number of conjugates $g^{y^j}$ in the first case of Lemma \ref{lemma:long_rectangle} is \begin{eqnarray*}
+The number of conjugates $g^{y^j}$ in the first case of Lemma \ref{lemma:long_rectangle} is at least \begin{eqnarray*}
 &   & \ceil{\frac{\canc{gy^N}{y^N} - \canc{g}{gy^N}}{|y|}} \\
 & = & \ceil{\frac{|gy^N|_G + |y|N - |g^{y^N}|_G}{2|y|} - \frac{|g| + |gy^N|_G - |y|N}{2|y|}} \\
 & = & \ceil{\frac{2|y|N - |g^{y^N}|_G - |g|}{2|y|}} \\
 & = &  N - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}}.
 \end{eqnarray*}
@@ -1117,11 +1129,11 @@ # Typo centralises $u$->centralises $g$, P37 new
 & \ge & nV + |g|n + n - |g| \\
 &  >  & V,
 \end{eqnarray*} so by Lemma \ref{lemma:thinness_extends} we have $|g^{y^N}|_G \le |g| + 2\delta$ as required.
 \end{proof}
 
-Since we can now detect when some power of $y$ centralises $g$, and since we know the behaviour of conjugates $g^{y^k}$ in this case, it remains to analyse the behaviour of the conjugates when no power of $y$ centralises $g$. We now show that if no power of $y$ centralises $u$ then the length of conjugates $u^{y^n}$ for large $n$ is very predictable.
+Since we can now detect when some power of $y$ centralises $g$, and since we know the behaviour of conjugates $g^{y^k}$ in this case, it remains to analyse the behaviour of the conjugates when no power of $y$ centralises $g$. We now show that if no power of $y$ centralises $g$ then the length of conjugates $g^{y^n}$ for large $n$ is very predictable.
 
 \begin{lemma}
 \label{lemma:unbd_conj_long}
 Suppose that $y$ is a straight word and that $g$ labels a geodesic in $\Gamma$. If $N > \frac{|g|}{|y|}$ and $|g^{y^N}|_G > |g| + 2\delta$ then $|g^{y^n}|_G =^{3\delta} |g^{y^N}|_G + 2|y|(n - N)$ for $n \in \mathbb{N}$ satisfying $n \ge N$.
 \end{lemma}
@@ -1171,11 +1183,11 @@ # Since it's 3\delta on each side, the total is 6\delta + 1 including 0! P39 new.
 Finally, suppose that $l_u > |u|_G + 2\delta$. Proposition \ref{proposition:large_power_conjugate} implies that $|u^{y^n}|_G =^{3\delta} l_u + 2|y|(n-N)$ for large $n$, so Case \ref{case:pl:central} cannot apply and no power of $y$ is in the centraliser of $u$. In fact, by Proposition  \ref{proposition:large_power_conjugate}, if $u^{y^r} =_G v$ then \begin{eqnarray*}
 l_u +2|y|(n+r-N) 
 & =^{3\delta} & |u^{y^{n+r}}|_G \\
 & = & |v^{y^n}|_G \\
 & =^{3\delta} & l_v + 2|y|(n-N)
-\end{eqnarray*} for all large $n$. Rearranging, $l_v-l_u=^{6\delta}2|y|r$, so $\frac{l_v-l_u-6\delta}{2|y|} \le r \le \frac{l_v-l_u+6\delta}{2|y|}$. Because no power of $y$ centralises $u$, there can only be one $n$ such that $u^{y^n} =_G v$ and to find it, we must simply check each $r$ in this range. If some $y^r$ conjugates $u$ to $v$ then Case 2 holds so set $t=\infty$ and stop, otherwise Case 3 holds so set $r=t=\infty$. At most $6\delta$ checks of conjugates $u^{y^n}$ need to made to distinguish between these two cases, and each check takes time $O(|u|+|v|+|y|)$ as required. 
+\end{eqnarray*} for all large $n$. Rearranging, $l_v-l_u=^{6\delta}2|y|r$, so $\frac{l_v-l_u-6\delta}{2|y|} \le r \le \frac{l_v-l_u+6\delta}{2|y|}$. Because no power of $y$ centralises $u$, there can only be one $n$ such that $u^{y^n} =_G v$ and to find it, we must simply check each $r$ in this range. If some $y^r$ conjugates $u$ to $v$ then Case 2 holds so set $t=\infty$ and stop, otherwise Case 3 holds so set $r=t=\infty$. At most $6\delta+1$ checks of conjugates $u^{y^n}$ need to made to distinguish between these two cases, and each check takes time $O(|u|+|v|+|y|)$ as required. 
 \end{proof}
 
 We summarise this information in the following algorithm.
 
 \begin{algorithm}
@@ -1244,25 +1256,25 @@ # iff -> only if; the ^{s^{-1}} had somehow been missed out on the b_i and ^p on the a_i. P41 new.
 
 We are now in a position to test if there is an element of $G$ which conjugates the entire list $A = (a_1, \ldots, a_m)$ to $B = (b_1, \ldots, b_m)$. Recall that $a_1$ is assumed to be of infinite order. Let $\mu$ be an upper bound on the length of elements in either list.
 
 Use Corollary \ref{corollary:test_fin_ord} (\textsc{TestInfOrder}) to test in time $O(|b_1|)$ if $b_1$ is of infinite order. If it is not, $a_1$ and $b_1$ are not conjugate, so neither are $A$ and $B$ and we may stop.
 
-Next, apply Algorithm \ref{algorithm:getconjugationcandidates} (\textsc{GetConjugationCandidates}) on $a_1$ and $b_1$ to obtain an $X$-word $p$, a short-lex straight word $y$ and a set $S$ of $X$-words with at most $V$ elements such that $a_1^g =_G b_1$ if and only if $g =_G py^ns$ for some $n \in \mathbb{Z}$ and $s \in S$. All returned $X$-words have length $O(|a_1| + |b_1|)$ and this step takes time $O(|a_1| + |b_1|)$ and in particular $O(\mu)$.
+Next, apply Algorithm \ref{algorithm:getconjugationcandidates} (\textsc{GetConjugationCandidates}) on $a_1$ and $b_1$ to obtain an $X$-word $p$, a short-lex straight word $y$ and a set $S$ of $X$-words with at most $V$ elements such that $a_1^g =_G b_1$ only if $g =_G py^ns$ for some $n \in \mathbb{Z}$ and $s \in S$. All returned $X$-words have length $O(|a_1| + |b_1|)$ and this step takes time $O(|a_1| + |b_1|)$ and in particular $O(\mu)$.
 
 We repeat the remaining steps for each element $s \in S$. Since there are at most $V$ elements in $S$, we can do this without affecting the overall runtime of the algorithm.
 
 For each $i \in \{1, \cdots, m\}$, apply Algorithm \ref{algorithm:testconjugacybysls} (\textsc{TestConjugacyBySLS}) to $a_i^p$, $b_i^{s^{-1}}$ and $y$ to obtain values $r_i$ and $t_i$. This takes time $O(m\mu)$.\footnote{As $y$ was originally found as an element of the centraliser of a power of $a_1$, it might seem superfluous to test $i=1$ here, but we only know at this point that a power of $y$ centralises a \textit{power} of $a_1$, and in any case it is not clear what power of $y$ this is the case for.}
 
-If $r_i = \infty$ for some $i$ then $a_i$ can't be conjugated to $b_i$ for any power of $y$, so the same is true of $A$ and $B$ and we can move to the next element of $S$.
+If $r_i = \infty$ for some $i$ then $a_i^p$ can't be conjugated to $b_i^{s^{-1}}$ for any power of $y$, so the same is true of $A^p$ and $B^{s^{-1}}$ and we can move to the next element of $S$.
 
-Otherwise, a set of $m$ (possibly modular) equations must be solved simultaneously. If $t_i = \infty$ for some $i$, this is simple; it suffices to check that $r_i = r_j$ for each $j \ne i$ where $t_j = \infty$, and that $r_i \equiv r_j \mod t_j$ for each $j \ne i$ where $t_j \ne \infty$. If all of the equations are satisfied then $A^{y^{r_i}} =_G B$ and $r_i$ is the unique power of $y$ with this property; otherwise there is no power of $y$ which conjugates $A$ to $B$. Either way we may move onto the next $s$ and these checks take time $O(m)$.
+Otherwise, a set of $m$ (possibly modular) equations must be solved simultaneously. If $t_i = \infty$ for some $i$, this is simple; it suffices to check that $r_i = r_j$ for each $j \ne i$ where $t_j = \infty$, and that $r_i \equiv r_j \mod t_j$ for each $j \ne i$ where $t_j \ne \infty$. If all of the equations are satisfied then $A^{py^{r_i}s} =_G B$ and $r_i$ is the unique power of $y$ with this property; otherwise there is no power of $y$ which conjugates $A^p$ to $B^{s^{-1}}$. Either way we may move onto the next $s$ and these checks take time $O(m \mu)$ for each $s$.
 
 The remaining case is where all $t_i$ and $r_i$ are finite, in which case the set of equations $j \equiv r_i \mod t_i$ must be solved simultaneously. First, note that if $d$ and $e$ are coprime natural numbers then $j \equiv c \mod de$ if and only if $j \equiv c \mod d$ and $j \equiv c \mod e$ both hold, so each congruence $j \equiv r_i \mod t_i$ can be split into a number of congruences modulo prime powers. As $t_i \le V$ for each $i$, the time taken by this operation is independent of input for each $i$, so in $O(m)$ overall.
 
-For integers $c, d$, a prime number $p$ and natural numbers $e,f$ the two equations $a \equiv c \mod p^e$ and $a \equiv d \mod p^ep^f$ are equivalent to the second if $c \equiv d \mod p^e$ and have no solution if not. Thus the equations can be either shown to be inconsistent, or reduced to a set of at most $V$ equations modulo prime powers where each prime is distinct and each prime power is at most $V$. By allocating an array with an element corresponding to each prime below $V$, this will take constant time per starting prime power equation, so again time $O(m)$ overall.
+For integers $c$ and $d$, a prime number $p$ and natural numbers $e,f$ the two equations $a \equiv c \mod p^e$ and $a \equiv d \mod p^ep^f$ are equivalent to the second if $c \equiv d \mod p^e$ and have no solution if not. Thus the equations can be either shown to be inconsistent, or reduced to a set of at most $V$ equations modulo prime powers where each prime is distinct and each prime power is at most $V$. By allocating an array with an element corresponding to each prime below $V$, this will take constant time per starting prime power equation, so again time $O(m)$ overall.
 
-Finally, the well-known Chinese Remainder Theorem yields $r'$ and $t'$ such that $j \equiv r' \mod t'$ if and only if $A^{y^j} =_G B$. Since at this point there are at most $V$ congruences modulo pairwise coprime numbers less than or equal to $V$, the running time of this final step is independent of input length.
+Finally, the well-known Chinese Remainder Theorem yields $r'$ and $t'$ such that $j \equiv r' \mod t'$ if and only if $A^{py^js} =_G B$. Since at this point there are at most $V$ congruences modulo pairwise coprime numbers less than or equal to $V$, the running time of this final step is independent of input length.
 
 Thus we have an algorithm \textsc{SolveSimultaneousModularEquations} which takes as input a list of integer pairs $(r_i, s_i)$ and solves the set of modular equations $u \equiv r_i \mod s_i$ simultaneously. We will suppose that it returns integers $r$ and $s$ such that $u \equiv r \mod s$ if and only if $u$ was a solution to the original set of equations, and returns $\infty, \infty$ if there is no solution.
 
 To summarise, here is the full algorithm in pseudocode.
 
@@ -1326,17 +1338,17 @@ # relates back to Corr, P24 old.
 
 To summarise:
 
 \begin{theorem}
 \label{thm:linear_conj_inf}
-Given integers $\delta \ge 1$ and $l$, there is an algorithm which, given a $\delta$-hyperbolic group $G=<X|R>$ with $|X| \le l$ and lists $A$ and $B$ of words in the generators of $G$ where the first element of $A$ is of infinite order, can find a (non-deterministic) $X^{\pm 1}$-FSA whose language $L$ satisfies:
+Given integers $\delta \ge 1$ and $l$, there is an algorithm which, given a $\delta$-hyperbolic group $G=<X|R>$ with $|X| \le l$, a number $m \ge 0$ and lists $A = (a_1, \cdots, a_m)$ and $B = (b_1, \cdots, b_m)$, each containing words in the generators of $G$ with $a_1$ representing an infinite order element of $G$, can find a (non-deterministic) $X^{\pm 1}$-FSA whose language $L$ satisfies:
 \begin{itemize}
 \item $A^w =_G B$ for any $w \in L$, and
 \item for any $g \in G$ such that $A^g =_G B$ there is an element $w \in L$ with $w =_G g$.
 \end{itemize}
 
-The algorithm will run in time $O(m\mu)$, where $\mu$ is an upper bound for the length of words in $A$ and $B$. It can be modified to return a single conjugating element $g \in G$ with $A^g = B$, if one exists, without affecting the running time.
+If $|a_i| \le \mu$ and $|b_i| \le \mu$ for each $1 \le i \le m$ then the algorithm will run in time $O(m\mu)$. It can be modified to return a single conjugating element $g \in G$ with $A^g = B$, if one exists, without affecting the running time.
 \end{theorem}
 
 Note that \textsc{FindConjugatingElementsInf}$(A, A)$ returns the centraliser of $A$ in time $O(m\mu)$.
 
 \section{Conjugacy of General Lists}
@@ -1437,11 +1449,11 @@ # Corr, P63 old.
 
 We may therefore assume that the assertion on line \ref{line:conj_finite_check} always fails. It remains to show that after the outer loop has run $k$ times, the length of $c_k^{-1}a_i\cdots a_kc_k$ is less than or equal to $(7L+\delta+\frac{1}{2})3^{k-i}$ and that the algorithm has taken time $O(k^3 \mu)$.
 
 In order to show these facts, it is useful to show that $|c_k| \le k(\frac{\mu}{2}+\delta+1)$. We do this now. Consider a geodesic triangle with corners $\vertex{e}$, $\vertex{b}:=\vertex{e} \cdot c_{k-1}$ and $\vertex{c}:=\vertex{e} \cdot a_kc_{k-1}$. Label the sides with the short lex geodesics $\path{\vertex{e}}{\vertex{b}}$, $\path{\vertex{b}}{\vertex{c}}$ and $\path{\vertex{e}}{\vertex{c}}$. Let $\vertex{p}:=\vertex{b} \cdot (\slex(c_{k-1}^{-1}a_kc_{k-1}))_L$, which is a mid-vertex of $\path{\vertex{b}}{\vertex{c}}$ as illustrated in Figure \ref{figure:extend_c}. Since $c_k$ labels a geodesic from $\vertex{e}$ to $\vertex{p}$, by Lemma \ref{lemma:triangle} we have \begin{eqnarray*}
         |c_k|
-& \le & \frac{2\max\{d(\vertex{e}, \vertex{c}), d(\vertex{e}, \vertex{c})\} - d(\vertex{b}, \vertex{c}) + 1}{2}+\delta \\
+& \le & \frac{2\max\{d(\vertex{e}, \vertex{b}), d(\vertex{e}, \vertex{c})\} - d(\vertex{b}, \vertex{c}) + 1}{2}+\delta \\
 & \le & \frac{2\max\{|c_{k-1}|,|a_kc_{k-1}|_G\}-|c_{k-1}^{-1}a_kc_{k-1}|_G+1}{2}+\delta.
 \end{eqnarray*}
 
 \begin{figure}
 \begin{center}
@@ -1473,11 +1485,11 @@ # Minor reword (deleted also), P49 new.
 
 It remains to show that the bound on the length of the elements $(a_i\cdots a_m)^{c_m}$ is satisfied. This can be shown by induction on $m$. Let us first, for each $k\in\{1,\ldots,m\}$, define $K_{k,k}:=2L$. Now let $K_{i, k+1}: = 3K_{i,k} + 10L + 2\delta + 1$ for any $1 < i\le k$. The aim is to use induction on $k$ to show that $|c_k^{-1}a_i \cdots a_k c_k|_G \le K_{i, k}$ for any $1 \le i \le k$ and then show that $K_{i,m}$ is within the required bound.
 
 In the $k = i$ case, $a_k^{c_k} =_G d^{d_L} =_F d_C$ where $d = \slex(a_k^{c_{k-1}})$. Since we ensure that $|d_C|_G \le 2L$ on line \ref{line:conj_finite_check} we must have $|a_k^{c_k}|_G \le K_{k,k} = 2L$.
 
-Now suppose that the inequality $|c_k^{-1}a_i\cdots a_k c_k|_G\le K_{i,k}$ is also satisfied for all $1 \le i \le k$. We must show that $|c_{k+1}^{-1} a_i \ldots a_{k+1}c_{k+1}|_G \le K_{i,k+1}$ for each $i$.
+Now suppose that the inequality $|c_k^{-1}a_i\cdots a_k c_k|_G\le K_{i,k}$ is satisfied for all $1 \le i \le k$. We must show that $|c_{k+1}^{-1} a_i \ldots a_{k+1}c_{k+1}|_G \le K_{i,k+1}$ for each $i$.
 
 Pick some specific $i$, and let $e := \slex(c_k^{-1}a_i \ldots a_{k+1} c_k)$ and $g := \slex(c_k^{-1}a_{k+1}c_k)$. Notice that $c_{k+1} =_G c_kg_L$ and so \begin{eqnarray*}
         (a_i \ldots a_{k+1})^{c_{k+1}}
 & =_G & e^{c_k^{-1}c_{k+1}} \\
 & =_G & e^{g_L} \\
@@ -1553,11 +1565,11 @@ # Corr, P69 old
 
 We can now prove the following corollary:
 
 \begin{corollary}
 \label{cor:short_cent}
-There is constant $R$ and an algorithm \textsc{FindCentraliserExp} which takes as input a list $A$ consisting of $n > Q^2$ words, all of which represent pairwise distinct finite order elements of $G$, returns the centraliser $C$ of $A$ and runs in time $O(n\mu R^\mu)$ where $\mu$ is an upper bound on the length of words in $A$. All elements of $C$ have length in $O(\mu)$ and the number of elements in $C$ is independent of $A$.
+There is a constant $R$ and an algorithm \textsc{FindCentraliserExp} which takes as input a list $A$ consisting of $n > Q^2$ words, all of which represent pairwise distinct finite order elements of $G$, returns the centraliser $C$ of $A$ and runs in time $O(n\mu R^\mu)$ where $\mu$ is an upper bound on the length of words in $A$. All elements of $C$ have length in $O(\mu)$ and the number of elements in $C$ is in $O(1)$.
 \end{corollary}
 
 \begin{proof}
 Suppose that $A = (a_1, \ldots, a_n)$ is such a list. If $x$ is in the centraliser of $A$ then $a_i^x = a_i$ for all $1 \le i \le n$, so in Proposition \ref{proposition:small_cent} we have that $l = \mu$. Since $n > Q^2$, we have $|x|_G < R(\mu + 2\delta)$, where $R := (2k + 5)^{4\delta+2}$.
 
@@ -1585,11 +1597,11 @@ # Minor reword, P54 new.
 Notice that $(u_1, u_2, u_2, u_3, u_3, \cdots, u_n, u_n, u_{n+1}) \in L(w)$ for some set of words $u_i$ if and only if $u_i^{x_i} = u_{i+1}$ for each $1 \le i \le n$, and so $u_1^w = u_{n+1} = u_1$. Thus the centraliser of $C(w)$ is just the projection of $L(w)$ to its first factor and is accepted by a $k^{2n}$-state FSA by Proposition \ref{prop:regular}.
 
 The centraliser of $A$ is the intersection of the centralisers $C(a_i)$ of its elements $a_i$, which by Proposition \ref{prop:regular} is accepted by a $k^{2m\mu}$-state FSA. Computation of this FSA takes time $O(k^{2m\mu})$ so it sufficies to let $R=k^2$.
 \end{proof}
 
-The reader may notice that it would be possible to instead use this method in place of \textsc{FindCentraliserExp} and the running time would not be dissimilar. We choose not to in order to give better emphasis to the fact that the centraliser in that case is finite and avoid the complications of finding the language of the FSA so-returned.
+The reader may notice that it would be possible to use this method instead of \textsc{FindCentraliserExp} and the running time would not be dissimilar. We choose not to in order to give better emphasis to the fact that the centraliser in that case is finite and avoid the complications of finding the language of the FSA so-returned.
 
 We now have enough information to compute centralisers of lists of short elements. To complete this section, we give a method of testing conjugacy between lists of short elements. The main theorem regarding lists of finite order elements in \cite{bridson2005conjugacy}, Theorem 3.3, is restated below.
 
 \begin{proposition}
 Let $A = (a_1, \ldots, a_m)$ and $B = (b_1, \ldots, b_m)$ be sets of torsion elements in $G$. If $A$ and $B$ are conjugate then there exists a word $x$ with \[ |x|_G \le (2k+5)^{4\delta+2}(\mu+2\delta) + Q^{2Q^2} \] where $\mu$ is the maximum length of an element in either list and $k$ is the number of generators of $G$.
@@ -1639,23 +1651,23 @@ # Corrs, P75 old. Minor reword for the last one.
 
 \label{section:solve_conj}
 
 We are now ready to solve the conjugacy problem in the general case.
 
-Suppose $A = (a_1, \ldots, a_m)$ and $B = (b_1, \ldots, b_m)$ are lists of $X$-words. We wish to test if one list is a conjugate of the other and return a regular language which is exactly the set of conjugating elements. Let $\mu$ be the maximum length of all elements in $A$ and $B$.
+Suppose $A = (a_1, \ldots, a_m)$ and $B = (b_1, \ldots, b_m)$ are lists of $X$-words. We wish to test if one list is a conjugate of the other and return a regular language of words which conjugate $A$ to $B$ in $G$, and contains a representative word for each element with this property. Let $\mu$ be the maximum length of all elements in $A$ and $B$.
 
 First, execute \textsc{EnsureUniqueness}$(\slex(A), \slex(B))$. If the algorithm returns $null$ then stop and declare the lists not conjugate. If not, replace $A$ and $B$ with the lists returned by this algorithm. This step takes time $O(m\mu)$.
 
 We now have two lists $A$ and $B$, each of short-lex least words all of length at least $1$, and such that for $n := \min\{Q^2+1, m\}$ the group elements represented by $a_i \cdots a_n$ are distinct for all $i < n$.
 
 Let $A'$ and $B'$ be the sublists of $A$ and $B$ respectively containing the first $n$ elements.
 
-Apply \textsc{ShortenList} to $A'$ and $B'$; this takes time $O(n^2\mu) = O(\mu)$.
+Apply \textsc{ShortenList} to $A'$ and $B'$; this takes time $O(n^3\mu) = O(\mu)$.
 
 If the algorithm returns an infinite order element $a_i \cdots a_j$ or $b_i \cdots b_j$ for some $i \le j$ then add $a_i \cdots a_j$ to the start of $A$ and add $b_i \cdots b_j$ to the start of $B$ (notice that the set of conjugating elements is unchanged by this action). Now apply \textsc{FindConjugatingElementsInf}, noting that the return value is already a regular language, so we are done. The maximum length of an element in the lists is now $(j-i+1)\mu \le n\mu$, so this takes time $O(mn\mu) = O(m\mu)$.
 
-Check, for each $i \le n$ if \textsc{CheckInfOrder}($a_i$) returns true. If so, let $j = n$ and continue as if \textsc{ShortenList} had declared $a_i \cdots a_j$ to be of infinite order. Again, this step takes time $O(m\mu)$.
+If not, check, for each $i \le n$ if \textsc{CheckInfOrder}($a_i$) returns true. If so, let $j = n$ and continue as if \textsc{ShortenList} had declared $a_i \cdots a_j$ to be of infinite order. Again, this step takes time $O(m\mu)$.
 
 If we have not yet stopped, we have conjugating elements $c_A$ and $c_B$ which were returned by \textsc{ShortenList}. Let $A' := (a_1', \ldots, a_n')$ where $a_i' = \slex((a_i \cdots a_n)^{c_A})$ and define $B'$ in the same way using $c_B$. Computing these lists takes time $O(n^2\mu) = O(\mu)$.
 
 Use \textsc{TestConjugacyExp} to find an $X$-word $u$ with $A'^u =_G B'$. If no $u$ is found, $A$ and $B$ were not conjugate, so we may stop. The time taken for this step is independent of input.
 
@@ -1787,29 +1799,29 @@ # Corr, P85 old. (The first bit is simply me re-arranging because LaTeX was misformatting somehow.)
 
 \subsection{Extending Geodesics}
 
 Recall that $\canc{u}{v} = (\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}}$ for $X$-words $u$ and $v$, and is independent of $\vertex{a}$.
 
-A useful tool used throughout this chapter is the following one, which says that if $w$ is a long enough word which labels a geodesic in $\Gamma'$ at $H$ and $u$ is a label of a geodesic in $\Gamma$ with $\canc{w^{-1}}{u}$ small, then $wu$ labels something close to a geodeisc in $\Gamma'$ when started at $H$. The bounds can be slightly improved in the case where $\canc{w^{-1}}{u} = 0$ (that is, $wu$ labels a geodesic in $\Gamma$), but the factor of $\epsilon$ is unchanged so we will simply prove the more general statement.
-
-\begin{lemma}
-\label{lemma:extend_long_coset}
-Suppose that $w_1$ and $w_2$ label geodesics in $\Gamma$. Let $k := \canc{w_1^{-1}}{w_2}$, and let $w_1'$ and $w_2'$ label geodesics in $\Gamma'$ connecting $H$ to $Hw_1$ and $H$ to $Hw_1w_2$ respectively. If $|w_1'| \ge 3\delta + \epsilon + k + 1$ then $|w_2'| \ge |w_1'| + |w_2| - 2k - 3\delta - \epsilon$.
-\end{lemma}
+A useful tool used throughout this chapter is the following one, which says that if $w$ is a long enough word which labels a geodesic in $\Gamma'$ at $H$ and $u$ is a label of a geodesic in $\Gamma$ with $\canc{w^{-1}}{u}$ small, then $wu$ labels something close to a geodesic in $\Gamma'$ when started at $H$. The bounds can be slightly improved in the case where $\canc{w^{-1}}{u} = 0$ (that is, $wu$ labels a geodesic in $\Gamma$), but the factor of $\epsilon$ is unchanged so we will simply prove the more general statement.
 
 \begin{figure}
 \begin{center}
 \input extend_word.pstex_t
 \caption{Extending a long minimal coset representative}
 \label{figure:extend_word}
 \end{center}
 \end{figure}
 
+\begin{lemma}
+\label{lemma:extend_long_coset}
+Suppose that $w_1$ and $w_2$ label geodesics in $\Gamma$. Let $k := \canc{w_1^{-1}}{w_2}$, and let $w_1'$ and $w_2'$ label geodesics in $\Gamma'$ connecting $H$ to $Hw_1$ and $H$ to $Hw_1w_2$ respectively. If $|w_1'| \ge 3\delta + \epsilon + k + 1$ then $|w_2'| \ge |w_1'| + |w_2| - 2k - 3\delta - \epsilon$.
+\end{lemma}
+
 \begin{proof}
 Pick $X$-words $h_1$ and $h_2$ to label geodesics in $\Gamma$ connecting $\vertex{a}$ to $\vertex{a} \cdot w_1w_1'^{-1}$ and $\vertex{a}$ to $\vertex{a} \cdot w_1w_2w_2'^{-1}$ respectively. Let $\vertex{b} := \vertex{a} \cdot w_1$, $\vertex{c} := \vertex{a} \cdot w_1w_2$, $\vertex{d} := \vertex{a} \cdot h_1$ and $\vertex{e} := \vertex{a} \cdot h_2$. Then we have a geodesic pentagon as illustrated in Figure \ref{figure:extend_word}. We let $d_1 := (\vertex{b}, \vertex{a})_{\vertex{d}}$ and $d_2 := (\vertex{c}, \vertex{a})_{\vertex{e}}$, and let $s_i := |h_i| - d_i$ for $i$ equal to $1$ or $2$. These numbers measure in some sense the length of various words which $H$ ``cancels.''
 
-Let $i := \floor{d_1}$. Let $\vertex{x} := \vertex{d} \cdot w_1'(i)$ so that $\vertex{x}$ corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$. Since $H$ is $\epsilon$-quasiconvex, there is a vertex $\vertex{y}$ representing an element of $H$ such that $d(\vertex{x}, \vertex{y}) \le \delta + \epsilon$. Let $u$ be the label of a geodesic in $\Gamma$ connecting $\vertex{y}$ to $\vertex{b}$, then since $Hu = Hw_1'$ we have \begin{eqnarray*}
+Let $i := \floor{d_1}$. Let $\vertex{x} := \vertex{d} \cdot w_1'(i) \in \path{\vertex{d}}{\vertex{b}}$ so that $\vertex{x}$ corresponds to a vertex $\vertex{x'}$ on $\path{\vertex{a}}{\vertex{d}}$. Since $H$ is $\epsilon$-quasiconvex, there is a vertex $\vertex{y}$ within $\epsilon$ of $\vertex{x'}$ representing an element of $H$ such that $d(\vertex{x}, \vertex{y}) \le d(\vertex{x}, \vertex{x'}) + d(\vertex{x'}, \vertex{y}) \le \delta + \epsilon$. Let $u$ be the label of a geodesic in $\Gamma$ connecting $\vertex{y}$ to $\vertex{b}$, then since $Hu = Hw_1'$ we have \begin{eqnarray*}
         |w_1'|
 &  =  & d(H, Hu) \\
 & \le & d(\vertex{y}, \vertex{b}) \\
 & \le & |w_1'| - i + \delta + \epsilon,
 \end{eqnarray*} so $i \le \delta + \epsilon$ and \begin{equation} \label{eqn:d1_short}
@@ -1821,11 +1833,11 @@ # Corr, P86 old.
 Notice that \begin{align}
       |w_2'|
   = & |w_1w_2|_G + d_2 - s_2 \notag\\
   = & |w_1| + |w_2| - 2k + d_2 - s_2 \notag\\
   = & |w_1'| + s_1 - d_1 + |w_2| - 2k + d_2 - s_2 \label{eqn:s1_bound}
-\end{align} so recalling that $d_2$ is bounded, we need only show that $s_2$ is not much larger than $s_1$ to find a lower bound on $|w_2'|$.
+\end{align} so recalling that $d_1$ is bounded, we need only show that $s_2$ is not much larger than $s_1$ to find a lower bound on $|w_2'|$.
 
 By definition, $(\vertex{b}, \vertex{c})_{\vertex{a}} = |w_1| - (\vertex{a}, \vertex{c})_{\vertex{b}} = |w_1| - k$. Since $|w_1| = |w_1'| - d_1 + s_1$, using $|w_1'| \ge 3\delta + \epsilon + k + 1$ from the hypothesis, we see that \begin{equation} \label{eqn:canc_far}
 (\vertex{b}, \vertex{c})_{\vertex{a}} \ge s_1 + 3\delta + \epsilon - d_1 + 1.
 \end{equation}
 
@@ -1902,11 +1914,11 @@ # Corr, P89 old.
 \end{enumerate}
 \end{lemma}
 
 \section{An Upper Bound on Minimal Powers}
 
-In this section, we demonstrate that there is an upper bound depending only on $G$ on the numbers $n$ such that there exists $h \in H$ with $h = g^n$. Recall $M$ and $Q$ from Section \ref{section:conj_const}.
+In this section, we demonstrate that there if an element of $H$ is a large power of an element of $G$ then it is a proper power of an element of $H$. Recall $M$ and $Q$ from Section \ref{section:conj_const}.
 
 \begin{theorem}
 \label{theorem:max_power}
 Suppose that $g \in G$ with $g^n \in H$ for some $n \in \mathbb{N}$. Then $g^l \in H$ for some $l \le MQ^2R$ where $R$ is the number of vertices in $B^{\Gamma'}_{6\delta + \epsilon + 1}(H)$.
 \end{theorem}
@@ -2042,11 +2054,11 @@ # This inequality was reversed! (\le -> \ge). P74 new, line 21.
 
 Let $v := v'^{-1}$ and we find that $d(K, Kv^{-1}) \ge |v| - 3\delta - \zeta$ and $|v| \le |w|$ as required, so it remains to show that $d(H, Hv)$ is sufficiently large.
 
 If $|v| \le 8\delta + 2\epsilon + \zeta$ then we are done, so suppose that $|v| \ge 8\delta + 2\epsilon + \zeta + 1$. Since $|v| \le |u|$, we have $|u| \ge 8\delta + 2\epsilon + \zeta + 1$ as well.
 
-Let $t$ label a geodesic in $\Gamma'$ connecting $H$ to $Hv$. If $|v| - |t| \le 5\delta + 2\epsilon$ then $d(H, Hv) \le |v| - 5\delta - 2\epsilon$ so we are done. Thus assume that $|v| - |t| \ge 5\delta + 2\epsilon + 1$. Let $j := 5\delta + 2\epsilon + 1$.
+Let $t$ label a geodesic in $\Gamma'$ connecting $H$ to $Hv$. If $|v| - |t| \le 5\delta + 2\epsilon$ then $d(H, Hv) \ge |v| - 5\delta - 2\epsilon$ so we are done. Thus assume that $|v| - |t| \ge 5\delta + 2\epsilon + 1$. Let $j := 5\delta + 2\epsilon + 1$.
 
 \begin{figure}
 \begin{center}
 \input short_coset_rep.pstex_t
 \caption{The double coset representatives}
@@ -2074,49 +2086,47 @@ # This is the extra lemma, starting P76 new. Corr, P100 old is also here.
 & \ge & |u| - 3\delta - \epsilon - |u| + j \\
 &  =  & 2\delta + \epsilon + 1
 \end{eqnarray*} and we have a contradiction. Thus the proposition is proved.
 \end{proof}
 
+We now prove a brief lemma which essentially says that whenever $g$ is close to being a minimal representative for a coset $Kg$ of a quasiconvex subgroup $K$, the cancellation $\canc{k}{g}$ is small for any $k \in K$.
+
+\begin{lemma}
+\label{lemma:coset_corners}
+Suppose that $A$ is a $\sigma$-quasiconvex subgroup of $G$, that $a \in A$ and $g \in G$ with $|g| \le d(A, Ag) + C$ are words labelling geodesics $\alpha$ and $\beta$ respectively which start from the same vertex $\vertex{z}$ in $\Gamma$. If these geodesics are adjacent sides of some geodesic polygon in $\Gamma$ and, after subdivision into triangles, there exist vertices $\vertex{x} \in \alpha$ and $\vertex{y} \in \beta$ such that $\vertex{x}$ $n$-corresponds to $\vertex{y}$ then $d(\vertex{y}, \vertex{z}) \le C + \sigma + n\delta$.
+\end{lemma}
+
+\begin{proof}
+Notice that there is a vertex $\vertex{a}$ which represents an element of $A$ with $d(\vertex{a}, \vertex{x}) \le \sigma$. But then \begin{eqnarray*}
+        d(A, Ag)
+& \le & d(\vertex{a}, \vertex{z} \cdot g) \\
+& \le & d(\vertex{a}, \vertex{x}) + d(\vertex{x}, \vertex{y}) + d(\vertex{y}, \vertex{z} \cdot g) \\
+& \le & \sigma + n\delta + |g| - d(\vertex{y}, \vertex{z}) \\
+& \le & \sigma + n\delta + d(A, Ag) + C - d(\vertex{y}, \vertex{z}),
+\end{eqnarray*} and a quick cancellation and re-arrangement shows that $d(\vertex{y}, \vertex{z}) \le C + \sigma + n\delta$ as required.
+\end{proof}
+
 Armed with this tool we can now test equality of double coset representatives.
 
 \begin{theorem}
 Suppose $K$ is a fixed $\zeta$-quasconvex subgroup. If $u$ and $v$ are $X$-words then it is possible to test whether $HuK = HvK$ in time $O(|u| + |v|)$.
 \end{theorem}
 
 \begin{proof}
-Let $u_1$ and $v_1$ be the words obtained by applying the second part of Proposition \ref{prop:shorten_coset_rep} on $K$ with the words $u$ and $v$ respectively. Since these words are obtained in time $O(|u| + |v|)$ and satisfy $Hu_1K = HuK$ and $Hv_1K = HvK$, we replace $u$ with $u_1$ and $v$ with $v_1$.
+Let $u_1$ and $v_1$ be the words obtained by applying the second part of Proposition \ref{prop:shorten_coset_rep} on $K$ with the words $u$ and $v$ respectively. Since these words are obtained in time $O(|u| + |v|)$ and satisfy $Hu_1K = HuK$ and $Hv_1K = HvK$, we replace $u$ with $\slex(u_1)$ and $v$ with $\slex(v_1)$.
 
-If $HuK = HvK$ then there exist elements $h \in H$ and $k \in K$ with $uk =_G hv$. We may assume that $h$ and $k$ are picked to minimize $|h| + |k|$ and therefore label geodesics in $\Gamma$. Let $\vertex{b} := \vertex{a} \cdot h$, $\vertex{c} := \vertex{b} \cdot v$ and $\vertex{d} := \vertex{a} \cdot u$. Then we have a geodesic quadrilateral in $\Gamma$ with side labels $h$, $v$, $k$ and $u$. Pick some geodesic connecting $\vertex{a}$ to $\vertex{c}$ to split this quadrilateral into two geodesic triangles. This quadrilateral is illustrated in Figure \ref{figure:double_coset_reps}.
-
-The next part of the proof is to demonstrate that each corner has a meeting point close to it. This will either give a bound on the lengths of $h$ and $k$, or a bound on the lengths of $u$ and $v$. In the latter case, we will prove that the number of vertices on $\path{\vertex{d}}{\vertex{c}}$ which $2$-correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ is also bounded to give a bound once again on the lengths of $h$ and $k$.
+If $HuK = HvK$ then there exist $X$-words $h \in H$ and $k \in K$ with $uk =_G hv$. We will assume that $h$ and $k$ are picked to be geodesics, and such that $|h| + |k|$ is minimised. Let $\vertex{b} := \vertex{a} \cdot h$, $\vertex{c} := \vertex{b} \cdot v$ and $\vertex{d} := \vertex{a} \cdot u$. Then we have a geodesic quadrilateral in $\Gamma$ with side labels $h$, $v$, $k$ and $u$. Pick some geodesic connecting $\vertex{a}$ to $\vertex{c}$ to split this quadrilateral into two geodesic triangles. This quadrilateral is illustrated in Figure \ref{figure:double_coset_reps}.
 
 \begin{figure}
 \begin{center}
 \input double_coset_reps.pstex_t
 \caption{The double coset representatives}
 \label{figure:double_coset_reps}
 \end{center}
 \end{figure}
 
-Suppose that some vertex $\vertex{p}$ on $\path{\vertex{b}}{\vertex{c}}$ $2$-corresponds to a vertex on $\path{\vertex{c}}{\vertex{d}}$. Then since $K$ is $\zeta$-quasiconvex and $k$ labels a geodesic in $\Gamma$, we have some vertex $\vertex{q}$ in $\Gamma$ which represents an element of $K$ with $d(\vertex{p}, \vertex{q}) \le 2\delta + \zeta$. In particular, \begin{eqnarray*}
-        d(K, Kv^{-1})
-& \le & d(\vertex{q}, \vertex{p}) + d(\vertex{p}, \vertex{b}) \\
-& \le & 2\delta + \zeta + |v| - d(\vertex{p}, \vertex{c}) \\
-& \le & d(K, Kv^{-1}) + 3\delta + \zeta + 2\delta + \zeta - d(\vertex{p}, \vertex{c}),
-\end{eqnarray*} so $d(\vertex{p}, \vertex{c}) \le 5\delta + 2\zeta$. This implies no vertex $\vertex{p}$ on $\path{\vertex{b}}{\vertex{c}}$ which $2$-corresponds to a vertex on $\path{\vertex{c}}{\vertex{d}}$ can have $d(\vertex{p}, \vertex{c}) > 5\delta + 2\zeta$. This can only be the case if either $\floor{(\vertex{a}, \vertex{d})_{\vertex{c}}} \le 5\delta + 2\zeta$ or $\floor{(\vertex{a}, \vertex{b})_{\vertex{c}}} \le 5\delta + 2\zeta$.
-
-A similar argument with vertices on $\path{\vertex{b}}{\vertex{c}}$ tells us that $\floor{(\vertex{a}, \vertex{c})_{\vertex{d}}} \le 4\delta + 2\zeta$.
-
-Repeating this argument again on the remaining two corners gives $\floor{(\vertex{a}, \vertex{c})_{\vertex{b}}} \le 9\delta + 3\epsilon + \zeta$ and either $\floor{(\vertex{b}, \vertex{c})_{\vertex{a}}} \le 10\delta + 3\epsilon + \zeta$ or $\floor{(\vertex{c}, \vertex{d})_{\vertex{a}}} \le 10\delta + 3\epsilon + \zeta$.
-
-We will now prove that $|h| + |k| \le B := 28\delta + 2P(\epsilon+\zeta) + 6\epsilon + 4\zeta + 2$ where $P$ is the number of vertices in $B^\Gamma_{2\delta + \epsilon + \zeta}(\vertex{a})$.
-
-Suppose that $(\vertex{b}, \vertex{c})_{\vertex{a}} \le (\vertex{c}, \vertex{d})_{\vertex{a}}$. Then $|h| = (\vertex{b}, \vertex{c})_{\vertex{a}} + (\vertex{a}, \vertex{c})_{\vertex{b}} \le 10\delta + 3\epsilon + \zeta + 9\delta + 3\epsilon + \zeta + 1 \le 19\delta + 6\epsilon + 2\zeta + 1$ and similarly $|k| \le 9\delta + 2\zeta + 1$. Thus $|h| + |k| \le 28\delta + 6\epsilon + 4\zeta + 2 \le B$.
-
-It remains to consider the case where $(\vertex{b}, \vertex{c})_{\vertex{a}} \ge (\vertex{c}, \vertex{d})_{\vertex{a}}$.
-
-Suppose that $i$ is an integer and the vertex $\vertex{p_i} := \vertex{d} \cdot k(i)$ $2$-corresponds to a vertex $\vertex{q_i} := \vertex{a} \cdot h(i')$. Notice that $i' := (\vertex{c}, \vertex{d})_{\vertex{a}} - (\vertex{a}, \vertex{c})_{\vertex{d}} + i$.
+We now aim to bound the lengths of $h$ and $k$ by a value which does not depend on $u$ and $v$. Suppose that $i$ is an integer and the vertex $\vertex{p_i} := \vertex{d} \cdot k(i)$ $2$-corresponds to a vertex $\vertex{q_i} := \vertex{a} \cdot h(i')$. Notice that $i' := (\vertex{c}, \vertex{d})_{\vertex{a}} - (\vertex{a}, \vertex{c})_{\vertex{d}} + i$.
 
 There is a vertex $\vertex{r_i} \in \Gamma$ representing an element of $K$ such that $d(\vertex{p_i}, \vertex{r_i}) \le \zeta$ and similarly there is a vertex $\vertex{s_i} \in \Gamma$ representing an element of $H$ such that $d(\vertex{q_i}, \vertex{s_i}) \le \epsilon$. Let $w_i$ label a geodesic in $\Gamma$ connecting $\vertex{s_i}$ to $\vertex{r_i}$ and observe that $|w_i| = d(\vertex{s_i}, \vertex{r_i}) \le 2\delta + \epsilon + \zeta$. See Figure \ref{figure:double_coset_h_k_long} for a complete picture.
 
 \begin{figure}
 \begin{center}
@@ -2124,22 +2134,26 @@ # and more...
 \caption{Finding a shorter $h$ and $k$}
 \label{figure:double_coset_h_k_long}
 \end{center}
 \end{figure}
 
-Suppose that more than $P(\epsilon + \zeta)$ vertices on $\path{\vertex{d}}{\vertex{c}}$ $2$-correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ so that there exist integers $i < j - \epsilon - \zeta$ with $w_i = w_j$. Let $k_1$, $k_2$ and $k_3$ label geodesics in $\Gamma$ connecting $\vertex{a}$ to $\vertex{r_i}$, $\vertex{r_i}$ to $\vertex{r_j}$ and $\vertex{r_j}$ to $\vertex{c}$ respectively. Define $h_1$, $h_2$ and $h_3$ to label geodesics connecting $\vertex{a}$, $\vertex{s_i}$, $\vertex{s_j}$ and $\vertex{b}$ similarly.
+Let $P$ be the number of vertices in $B^\Gamma_{2\delta + \epsilon + \zeta}(\vertex{a})$. Suppose that more than $P(\epsilon + \zeta)$ vertices on $\path{\vertex{d}}{\vertex{c}}$ $2$-correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ so that there exist integers $i < j - \epsilon - \zeta$ with $w_i = w_j$. Let $k_1$, $k_2$ and $k_3$ label geodesics in $\Gamma$ connecting $\vertex{a}$ to $\vertex{r_i}$, $\vertex{r_i}$ to $\vertex{r_j}$ and $\vertex{r_j}$ to $\vertex{c}$ respectively. Define $h_1$, $h_2$ and $h_3$ to label geodesics connecting $\vertex{a}$, $\vertex{s_i}$, $\vertex{s_j}$ and $\vertex{b}$ similarly.
 
 Then $w_i =_G h_2w_jk_2^{-1} = h_2w_ik_2^{-1}$ and $w_i =_G h_3vk_3^{-1}$ so that \begin{eqnarray*}
         u
 & =_G & hvk^{-1} \\
 & =_G & h_1h_2h_3vk_3^{-1}k_2^{-1}k_1^{-1} \\
 & =_G & h_1h_2w_ik_2^{-1}k_1^{-1} \\
 & =_G & h_1w_ik_1^{-1} \\
 & =_G & h_1h_3vk_3^{-1}k_1^{-1},
-\end{eqnarray*} but then $|h_1h_3| + |k_1k_3| \le |h| + 2\epsilon + |k| + 2\zeta - 2(j-i) < |h| + |k|$ and $h_1h_3v =_G uk_1k_3$ which contradicts minimality of $|h| + |k|$. Thus at most $P(\epsilon + \zeta)$ vertices on $\path{\vertex{d}}{\vertex{c}}$ can correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ and by counting corresponding vertices we have $|h| \le 19\delta + 6\epsilon + 2\zeta + P(\epsilon + \zeta) + 1$ and $|k| \le 9\delta + 2\zeta + P(\epsilon + \zeta) + 1$. But then $|h| + |k| \le 28\delta + 6\epsilon + 4\zeta + 2P(\epsilon + \zeta) + 2 = B$ as required and the claim is proved.
+\end{eqnarray*} but then $|h_1h_3| + |k_1k_3| \le |h| + 2\epsilon + |k| + 2\zeta - 2(j-i) < |h| + |k|$ and $h_1h_3v =_G uk_1k_3$ which contradicts minimality of $|h| + |k|$. Thus at most $P(\epsilon + \zeta)$ vertices on $\path{\vertex{d}}{\vertex{c}}$ can correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$.
 
-We thus test, for each pair of $X$-words $h$ and $k$ with $|h| + |k| \le B$ whether $h \in H$, $k \in K$ and $uk =_G hv$. If for some pair of words all three of these checks succeed, the double cosets are equal. If this does not happen then $HuK \ne HvK$. These checks can be performed in time $O(|u| + |v|)$, and the number of them is independent of $u$ and $v$, so the whole operation takes time $O(|u| + |v|)$. The theorem is proved.
+Applying Lemma \ref{lemma:coset_corners} with $\sigma = \epsilon + \zeta$ and $C = 8\delta + 2\epsilon + \zeta$, and using setting the triple $(A, g, a)$ to each of $(H, u, h)$, $(H, v, h^{-1})$, $(K, u^{-1}, k)$ and $(K, v^{-1}, k^{-1})$ we see that vertices on the sides of the quadrilateral which chain-correspond to vertices on adjacent sides must be at worst $10\delta + 3\epsilon + 2\zeta$ from the common corner of those two sides. For instance, any vertex on $\path{\vertex{d}}{\vertex{c}}$ which $2$-corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$ must be withing $10\delta + 3\epsilon + 2\zeta$ of $\vertex{d}$.
+
+Now, all vertices on $\path{\vertex{d}}{\vertex{c}}$ are either within $10\delta + 3\epsilon + 2\zeta$ of $\vertex{c}$ or $\vertex{d}$, or $2$-correspond to a vertex on $\path{\vertex{a}}{\vertex{b}}$. By counting vertices, we find that $|k| = d(\vertex{d}, \vertex{c}) \le 10\delta + 3\epsilon + 2\zeta + P(\epsilon + \zeta) + 10\delta + 3\epsilon + 2\zeta + 1 = 20\delta + 6\epsilon + 4\zeta + P(\epsilon + \zeta) + 1$. Similarly, all vertices on $\path{\vertex{a}}{\vertex{b}}$ are either within $10\delta + 3\epsilon + 2\zeta$ of $\vertex{c}$ or $\vertex{d}$, or are $2$-corresponded to by a vertex on $\path{\vertex{d}}{\vertex{c}}$, so $|h| \le 20\delta + 6\epsilon + 4\zeta + P(\epsilon + \zeta) + 1$.
+
+We thus test, for each pair of $X$-words $h$ and $k$ with $|h|$ and $|k|$ both less than or equal to $20\delta + 6\epsilon + 4\zeta + P(\epsilon + \zeta) + 1$ whether $h \in H$, $k \in K$ and $uk =_G hv$. If for some pair of words all three of these checks succeed, the double cosets are equal. If this never happens then $HuK \ne HvK$. These checks can each be performed in time $O(|u| + |v|)$ and the number of them is independent of $u$ and $v$, so the whole operation takes time $O(|u| + |v|)$. The theorem is proved.
 \end{proof}
 
 \section{Conclusion and Possible Further Work}
 
 Much of the further work for Chapter \ref{chapter:conjugacy} can be generalised to the problem of testing whether a list of words can be conjugated into a quasiconvex subgroup. One might similarly wish to reduce the rather inefficient constant used in Theorem \ref{theorem:max_power}.
@@ -2270,11 +2284,11 @@ # Corr, P110 old.
 We now define a concept of ``mostly homogeneous''. The GIB property and IB property for a single graph correspond to the definitions by Foord.
 
 \begin{definition}
 Suppose that $\Gamma$ is an $X$-graph with base vertex $\vertex{b}$. Then for non-negative $k \in \mathbb{Z}$ we say:
 
-$\Gamma$ has \textbf{IB($k$)} if there exists some $K$ such that $B_k(\vertex{p})$ and $B_k(\vertex{q})$ are ball isomorphic for any vertices $\vertex{p}, \vertex{q} \in \Gamma$ with $d(\vertex{b}, \vertex{p}) \ge K$ and $d(\vertex{b}, \vertex{q}) \ge K$. Thus there is a canonical $k$-ball of $\Gamma$ to which balls of radius $k$ are ball which are sufficiently far from $\vertex{b}$ are isomorphic to. We label this ball \textbf{$\canonicalball{k}{\Gamma}$}.
+$\Gamma$ has \textbf{IB($k$)} if there exists some $K$ such that $B_k(\vertex{p})$ and $B_k(\vertex{q})$ are ball isomorphic for any vertices $\vertex{p}, \vertex{q} \in \Gamma$ with $d(\vertex{b}, \vertex{p}) \ge K$ and $d(\vertex{b}, \vertex{q}) \ge K$. Thus there is a canonical $k$-ball of $\Gamma$ which balls of radius $k$ which are sufficiently far from $\vertex{b}$ are ball isomorphic to. We label this ball \textbf{$\canonicalball{k}{\Gamma}$}.
 
 Suppose $S$ is a collection of $X$-graphs which all satisfy $IB(k)$. Then we say $S$ satisfies $IB(k)$ if $\canonicalball{k}{\Gamma_1}$ and $\canonicalball{k}{\Gamma_2}$ are ball isomorphic for any two elements $\Gamma_1$ and $\Gamma_2$ in $S$.
 
 Suppose $G$ is some group generated by $X$ with Cayley graph $\Gamma_G$. Then $\Gamma$ has \textbf{GIB($k$)} with respect to $G$ if $\{\Gamma, \Gamma_G\}$ has $IB(k)$.
 
@@ -2299,11 +2313,11 @@ # Added a reference. P86 new.
 
 \section{A Tighter Bound on the Thinness of Triangles}
 
 \label{section:qc_thin}
 
-The aim of this section is to demonstrate that hyperbolicity carries over through $X$-maps whose inverse of a single vertex is quasiconvex, and in particular that coset Cayley graphs of quasiconvex subgroups of word-hyperbolic groups are themselves hyperbolic. This result is a generalisation of Theorem 4.1.3.3 from \cite{foord2000thesis}, with a rather smaller constant (the constant given there was exponential in $\delta$ and $\epsilon$).
+The aim of this section is to demonstrate that hyperbolicity carries over through $X$-maps whose inverse of a single vertex is quasiconvex, and in particular that coset Cayley graphs of quasiconvex subgroups of word-hyperbolic groups are themselves hyperbolic. This result is a generalisation of Theorem 4.1.3.3 from \cite{foord2000thesis}, with a rather smaller constant (the constant given there was exponential in $\delta$ and $\epsilon$). A similar statement to Foord's with a similarly exponential constant is given by Ilya Kapovich in \cite{kapovich2002geometry}.
 
 We begin by giving a simple condition which implies that a triangle is thin.
 
 \begin{definition}
 \label{defn:nearly_thin}
@@ -2400,11 +2414,11 @@ # Added a clarification. P90 new, bottom of page.
 Also, observe that (\ref{eqn:u'_long}) implies that $\frac{|u| + |v| - |x|}{2} \le \frac{|u'| + |v| - |x|}{2}$, or in other words
 \begin{equation} \label{eqn:no_far_side}
 (\vertex{B}, \vertex{C})_{\vertex{A}} \le (\vertex{b}, \vertex{c})_{\vertex{a'}}.
 \end{equation}
 
-Suppose now that $\vertex{P} = \vertex{A} \cdot u(i)$ is a vertex on $\path{\vertex{A}}{\vertex{B}}$ which corresponds to a vertex $\vertex{Q} = \vertex{A} \cdot v(i)$ on $\path{\vertex{A}}{\vertex{C}}$. Let $\vertex{p} := \vertex{a} \cdot u(i)$ and let $\vertex{q} := \vertex{a'} \cdot v(i)$ so that $\vertex{P} = f(\vertex{p})$ and $\vertex{Q} = f(\vertex{q})$.
+Suppose now that $\vertex{P} = \vertex{A} \cdot u(i)$ is a vertex on $\path{\vertex{A}}{\vertex{B}}$ which corresponds to a vertex $\vertex{Q} = \vertex{A} \cdot v(i)$ on $\path{\vertex{A}}{\vertex{C}}$. Let $\vertex{p} := \vertex{a} \cdot u(i)$ and let $\vertex{q} := \vertex{a'} \cdot v(i)$ so that $\vertex{P} = f(\vertex{p})$ and $\vertex{Q} = f(\vertex{q})$. By relabelling, any pair of corresponding vertices can be made to fit this construction.
 
 We can now observe some cases which will be treated in order of increasing distance from $\vertex{p}$ to $\vertex{a}$.
 
 \begin{figure}
 \begin{center}
@@ -2615,10 +2629,11 @@ # Added a clarification. P100 new, line 4.
 Note that there are $|w|-m$ or $|w|-m+1$ vertices on $\path{\vertex{b}}{\vertex{c}}$ which $2$-correspond to vertices on $\path{\vertex{c}}{\vertex{d}}$. Similarly, there are $|w|-n$ or $|w|-n+1$ vertices on $\path{\vertex{a}}{\vertex{d}}$ which correspond to vertices on $\path{\vertex{c}}{\vertex{d}}$. Counting vertices again, we see that $|u|$ is within $1$ of $l + (|w|-m) + (|w|-n)$. Combining this with (\ref{eqn:v_length}), we find that $|v| - m - n - 1 =^1 |u| - 2|w| + m + n$, so $|v| =^1 |u| + 2(m + n - |w|) + 1$.
 
 We know that $m + n \le 3\delta + 2\epsilon$, so we can derive $|v| \le |u| - 2|w| + 6\delta + 4\epsilon + 2$. Also, $2|w| \ge m + n$ so $|v| \le |u| + m + n + 2 \le |u| + 3\delta + 2\epsilon + 2$. Finally, $|v| \ge n + m + 1$ so we obtain \begin{eqnarray*}
         2|w|
 & \le & |u| - |v| + 2n + 2m + 2 \\
+&  =  & |u| - n + m + 1 \\
 & \le & |u| + 3\delta + 2\epsilon + 1.
 \end{eqnarray*}
 
 \begin{figure}
 \begin{center}
@@ -2626,11 +2641,11 @@ # Firgure -> Figure. P100 new, line 8.
 \caption{A loop $u$ distant from $H$}
 \label{figure:conj_quad_distant}
 \end{center}
 \end{figure}
 
-All inequalities for the first case of the hypothesis have now been shown to be satisfied. It remains to cover the case where at least one vertex on $\path{\vertex{b}}{\vertex{c}}$ $2$-corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$, as in Firgure \ref{figure:conj_quad_distant}.
+All inequalities for the first case of the hypothesis have now been shown to be satisfied. It remains to cover the case where at least one vertex on $\path{\vertex{b}}{\vertex{c}}$ $2$-corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$, as in Figure \ref{figure:conj_quad_distant}.
 
 All points on $\path{\vertex{a}}{\vertex{b}}$ must now chain-correspond to points on $\path{\vertex{b}}{\vertex{c}}$ or $\path{\vertex{a}}{\vertex{d}}$ so we have $|v| + 1 \le m + 1 + n + 1$ and in particular $|v| \le 2\epsilon + 3\delta + 1$ as required by the second case.
 
 Note that there is at least one $i$ such that the vertex $\vertex{p} = \vertex{b} \cdot w(i)$ on $\path{\vertex{b}}{\vertex{c}}$ corresponds to a vertex $\vertex{p'}$ on $\path{\vertex{a}}{\vertex{c}}$ which in turn corresponds to a vertex $\vertex{q} = \vertex{a} \cdot w(j)$ on $\path{\vertex{a}}{\vertex{d}}$ for some $j$. For any such points, note that $\vertex{r} := \vertex{a} \cdot w(i)$ has $f(\vertex{r}) = f(\vertex{a} \cdot w(i)) = f(\vertex{b} \cdot w(i))$, so \begin{eqnarray*}
         |i -j|
@@ -3023,13 +3038,13 @@ # Corr, P152a.
 \end{eqnarray*} and otherwise $d(p, \hat{p}) \le \frac{1}{2}$. Thus $d(p, q) \le d(p, \hat{p}) + d(\hat{p}, \hat{q}) + d(\hat{q}, q) \le 2\delta + 6$ and we are done.
 \end{proof}
 
 \section{A Change of Generating Set}
 
-In this section, we will suppose we are given some presentation $G = <\!\!X'|R\!\!>$, and that the Cayley graph $\Gamma'$ of this presentation has vertex thinness constant $\delta \ge 1$.
+In this section, we will suppose we are given some presentation $G = <\!\!X'|R\!\!>$, and that the Cayley graph of this presentation has vertex thinness constant $\delta \ge 1$.
 
-Let $X = X' \cup\{\$\}$ where $\$ =_G 1$, and  let $\Gamma$ be the Cayley graph of $G$ with respect to $X$. Any shortest path label in $\Gamma$ between two elements of $G$ cannot involve $\$$, so is also a shortest path label in $\Gamma'$ between the same two elements of $G$, and vice versa. Thus, $<\!\!X|R,\$\!\!>$ is another presentation for $G$ with vertex thinness constant $\delta$. 
+Let $X = X' \cup\{\$\}$ where $\$ =_G 1$, and  let $\Gamma$ be the Cayley graph of $G$ with respect to $X$. Any shortest path label in $\Gamma$ between two elements of $G$ cannot involve $\$$, so is also a shortest path label in the original Cayley graph between the same two elements of $G$, and vice versa. Thus, $<\!\!X|R,\$\!\!>$ is another presentation for $G$ with vertex thinness constant $\delta$. 
 
 Pick some $k \in \mathbb{N}$, and let $Y = \{ g\in G : 1 \le |g|_X \le k \}$. Our aim will be to find a bound on the thinness of triangles in the Cayley graph $\Gamma'$ under the new generating set $Y$.
 
 For each element $a \in Y$, pick any $X$-word of length $k$ such that $w$ and $a$ represent the same element of $G$. The existence of such a word is guaranteed by the presence of the generator $\$$: if the shortest word does not have a length of $k$, pad it by adding $\$$ anywhere in the word until it does. Extend this to a map of words $f : Y^* \to (X^{\pm 1})^*$ (ignoring any cancellation).
 
@@ -3041,16 +3056,23 @@ # Corr, P152b and P153.
 \end{lemma}
 
 \begin{proof}
 If $|f(w)|_X \le k(|w| - 1)$ then $f(w)$ can be represented by $n = |w| - 1$ words $w_i'$ of length at most $k$, each of which correspond to some $y_i \in Y$, hence $w =_G y_1 \ldots y_n$. But then $w$ does not label a geodesic since $n < |w|$.
 
-Thus $|f(w)|_X > k(|w| - 1)$, or since this is an integer equation, we can rearrange it to $|f(w)| = k|w| \le |f(w)|_X + k - 1$. But now, by definition, $f(w)$ is a $(1, k-1)$-quasigeodesic, so we are done.
+Thus $|f(w)|_X > k(|w| - 1)$, or since this is an integer equation, we can rearrange it to $|f(w)| = k|w| \le |f(w)|_X + k - 1$. Suppose now that $f(w)$ labels a path $\gamma$ in $\Gamma$ starting at $\vertex{a}$ and ending at $\vertex{b}$ so that $|f(w)| = d_\gamma(\vertex{a}, \vertex{b}) \ge d(\vertex{a}, \vertex{b}) = |f(w)|_X$. Given any two points $c, d \in \gamma$ we find (possibly by swapping $c$ and $d$) that \begin{eqnarray*}
+        d_\gamma(c, d)
+&  =  & d_\gamma(\vertex{a}, \vertex{b}) - d_\gamma(\vertex{a}, c) - d_\gamma(d, \vertex{b}) \\
+& \le & d(\vertex{a}, \vertex{b}) + k - 1 - d(\vertex{a}, c) - d(d, \vertex{b}) \\
+& \le & d(c, d) + k - 1,
+\end{eqnarray*}
+
+where the last line is due to the triangle inequality. But now, by definition $\gamma$ is a $(1, k-1)$-quasigeodesic and we are done.
 \end{proof}
 
 \begin{proposition}
 \label{prop:newgen}
-With the hypothesis given at the start of this section, $\Gamma'$ is a $\ceil{\frac{3k - 2 + 3\delta}{k}}$-vertex-thin.
+With the hypothesis given at the start of this section, $\Gamma'$ is $\ceil{\frac{3k - 2 + 3\delta}{k}}$-vertex-thin.
 \end{proposition}
 
 \begin{figure}
 \begin{center}
 \input triangle_beta_const.pstex_t

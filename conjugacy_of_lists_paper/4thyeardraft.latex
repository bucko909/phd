\documentclass[a4paper,12pt,duplex]{book}

\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{color}
\usepackage{epsfig}
\usepackage{algpseudocode}
\usepackage{cite}
\usepackage{txfonts}
\usepackage{enumerate}
\usepackage{supertabular}
\usepackage{epsf}
\usepackage[left=4cm,right=3cm]{geometry}

\newtheorem{defn}{Definition}[section]
\newtheorem{lemma}[defn]{Lemma}
\newtheorem{proposition}[defn]{Proposition}
\newtheorem{theorem}[defn]{Theorem}
\newtheorem{example}[defn]{Example}
\newtheorem{notation}[defn]{Notation}
\newtheorem{definition}[defn]{Definition}
\newtheorem{remark}[defn]{Remark}
\newtheorem{corollary}[defn]{Corollary}
\newtheorem{conjecture}[defn]{Conjecture}
\theoremstyle{definition}
\newtheorem{algorithm}[defn]{Algorithm}

\newcommand{\slex}{\pi}
\newcommand{\image}{\mathrm{Im}}
\newcommand{\Cay}{\mathrm{Cay}}
\newcommand{\path}[2]{[#1,#2]}
\newcommand{\edge}[1]{#1}
\newcommand{\vertex}[1]{\hat{#1}}
\newcommand{\wordpath}[2]{\ensuremath{#1\overset{#2}{\rightarrow}}}
\newcommand{\canonicalball}[2]{\ensuremath{\hat{B}_{#1}(#2)}}
\newcommand{\canc}[2]{\Delta(#1,#2)}
\newcommand{\length}[1]{l(#1)}
\newcommand{\floor}[1]{\left\lfloor #1 \right\rfloor}
\newcommand{\ceiling}[1]{\left\lceil #1 \right\rceil}
\newcommand{\ceil}[1]{\left\lceil #1 \right\rceil}

\newcommand{\lcm}{\mathrm{lcm}}

\setlength{\unitlength}{20mm}
\newcommand{\geoword}[6]{
	\put(#1,#2){\vector(#3,#4){#5}}
	\put(#1,#2){\line(#3,#4){#6}}
}

\usepackage{setspace}

\begin{document}

\setstretch{1.2}

\frontmatter{}
\thispagestyle{empty}

%\input epsf
\setlength{\unitlength}{1mm}

\begin{center}
\begin{picture}(150,100)(0,120)
%\put(75,210){\makebox(0,0){\includegraphics[width=6cm]{./img/CoverPageCrest.eps}}}
\put(75,175){\makebox(0,0){\begin{minipage}{130mm}\begin{center}\Huge
Conjugacy and Subgroups of Word-Hyperbolic Groups
\end{center}\end{minipage}}}

\put(75,135){\makebox(0,0){\Large \bf David John Buckley}}
\put(75,105){\makebox(0,0){\begin{minipage}{90mm}\begin{center}A
thesis submitted in fulfilment of the requirements for the degree of
Doctor of Philosophy \end{center}\end{minipage}}}
\put(75,90){\makebox(0,0){\Large Mathematics Institute, University
of Warwick}} \put(75,78){\makebox(0,0){January 2010}}
\put(75,50){\makebox(0,0){\includegraphics[width=6cm]{./img/CoverPageWarwickUni.eps}}}
\end{picture}
\end{center}
\setlength{\unitlength}{1pt}
\newpage

\pagestyle{plain}
\setcounter{page}{1}

\addcontentsline{toc}{section}{Contents}
\tableofcontents

\newpage

\addcontentsline{toc}{section}{List of Figures}
\listoffigures

\newpage

\section*{Acknowledgements}
\addcontentsline{toc}{section}{Acknowledgements}

I would like to thank everyone who has helped me out during my time working on this thesis. This includes the various student societies of which I have been a part (particularly CompSoc, whose IRC service has allowed me to have many discussions both related to and completely unrelated to my studies!), the many graduate students and staff who have put up with me in the departmental common room, everyone I have lived with and my family. The many undergraduates I have taught also deserve a mention for their patience with my somewhat strict marking, and their keeping me on my toes with respect to many mathematical fundamentals which might otherwise have grown somewhat hazy.

Particular thanks go to Dr Daan Krammer and Prof.~Brian Bowditch for their input on my work, and of course my supervisor Prof.~Derek Holt who introduced me to many of the problems dealt with in this thesis, and whose patience in finding mistakes and omissions in my proofs has been stellar.

Further, I would like to specifically thank my mother and sister, whose help in typing up my work has been a great help in allowing me to continue to use my hands.

My Ph.D.~has been generously funded by the Engineering and Physical Sciences Research Council.

This thesis has been created using entirely open-source software including Debian GNU/Linux, xfig, \LaTeX{} and vim.

\section*{Declaration}
\addcontentsline{toc}{section}{Declaration}

I declare that, to the best of my knowledge, the material contained in this thesis is original and my own work except where otherwise indicated, cited, or commonly known.

The material in this thesis is submitted to the University of Warwick for the degree of Doctor of Philosophy, and has not been submitted to any other university or for any other degree.

\newpage

\section*{Abstract}
\addcontentsline{toc}{section}{Abstract}

This thesis describes a number of algorithms and properties relating to Gromov's word-hyperbolic groups. A fuller outline of the thesis is given, and a number of basic concepts relating to metric spaces, hyperbolicity and automaticity are first briefly detailed in Chapter \ref{chapter:intro}. Chapter \ref{chapter:conjugacy} then details a solution to the conjugacy problem for lists of elements in a word-hyperbolic group which can be run in linear time; this is an improvement on a quadratic time algorithm for lists which contain an infinite order element. Chapter \ref{chapter:qc_conj} provides a number of further results and algorithms which build upon this result to efficiently solve problems relating to quasiconvex subgroups of word-hyperbolic groups -- specifically, the problem of testing if an element conjugates into a quasiconvex subgroup, and testing equality of double cosets. In Chapter \ref{chapter:qc_coset}, a number of properties of certain coset Cayley graphs are studied, in particular showing that graph morphisms which preserve edge labels and directions and map a quasiconvex subset to a single point also preserve a variety of other properties, for instance hyperbolicity. Finally, Chapter \ref{chapter:minimal} gives a proof that all word-hyperbolic groups are $14$-hyperbolic with respect to some generating set.

\newpage

\section*{Symbols and Notation}
\addcontentsline{toc}{section}{Symbols and Notation}

Below is a summary of notation used throughout the thesis. This notation is explained more verbosely in the introduction.

\begin{supertabular}{p{0.15\textwidth}|p{0.75\textwidth}}
Symbol & Denotes \\
\hline
$1$ & The identity element of a group. \\
$d(x, y)$ & The distance operator in a metric space. \\
$(x, y)_z$ & The hyperbolic inner product, $\frac{d(z, x) + d(z, y) - d(x, y)}{2}$. \\
$\wordpath{\vertex{a}}{w}$ & The path in an $X$-graph starting at $\vertex{a}$ and labelled by $w$. \\
$\vertex{a} \cdot w$ & The vertex at the end of $\wordpath{\vertex{a}}{w}$. \\
$\canc{u}{v}$ & For words $u$ and $v$, the inner product $(\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}}$. \\
$d_\gamma(x, y)$ & The length of the subpath of a path $\gamma$ between points $x$ and $y$. \\
$\path{x}{y}$ & A path between points $x$ and $y$. \\
$X^*$ & The set of words with letters in a set $X$. \\
$X^{\pm 1}$ & The set of elements of a set $X$ along with their symbolic inverses. \\
$|w|$ & The length of a word or path. \\
$|w|_G$ & The length of the shortest word representing the same element of $G$ as $w$. \\
$w^{-1}$ & The symbolic inverse of a word or the reversal of a path. \\
$w^u$ & For a word $u$, the word $u^{-1}wu$. \\
$w^n$ & For an integer $i$, the word formed by concatenating $n$ copies of a word $w$. \\
$w(i)$ & The initial subword of a word $w$ of length $i$. \\
$w(i:j)$ & The subword of a word $w$ which skips the initial $i$ letters and ends at the $j$th letter. \\
$w[i]$ & The $i$th letter of a word $w$. \\
$w_L$ & The word $w(\floor{\frac{|w|}{2}})$. \\
$w_R$ & The word $w(\floor{\frac{|w|}{2}}:|w|)$. \\
$w_C$ & The word $w_Rw_L$. \\
$w^\infty(i)$ & The word $w^i(i)$, or $w^i(-i)$ if $i$ is negative. \\
$\widetilde{w^\infty}$ & The two-way infinite path defined by repeating $w$ indefinitely, passing through the base point. \\
$O(f(n))$ & Computational complexity $f(n)$, ignoring contributions from fixed structures. \\
$A$-FSA & A finite state automaton which recognises words in $A^*$. \\
$A$-DFA & A deterministic $A$-FSA. \\
$x =^y z$ & Shorthand for $|x - z| \le y$. \\
$u =_G v$ & Words $u$ and $v$ represent the same group element. \\
$u =_F v$ & Words $u$ and $v$ represent the same free group element. \\
\end{supertabular}


\mainmatter{}

\pagestyle{headings}

\chapter{Introduction}

\label{chapter:intro}

The concept of a word-hyperbolic group was explored by Gromov in \cite{gromov1987hyperbolic} where he brought much previous work in the area together using some definitions involving groups with left-invariant hyperbolic metrics, the word-hyperbolic case of which will be given later. He shows among other things that in some sense ``most'' finite presentations define word-hyperbolic groups and that certain types of small cancellation group are word-hyperbolic.

It turns out that word-hyperbolic groups admit simple solutions to the first two problems outlined by Dehn in \cite{dehn1911unendliche} for finitely presented groups $G$ generated by a set $X$:

The \textbf{word problem}: Given a word $w \in (X^{\pm 1})^*$, determine if $w$ represents the identity element of $G$.

The \textbf{conjugacy problem}: Given words $u, v \in (X^{\pm 1})^*$, determine if $u$ and $v$ are conjugate elements of $G$.

In fact, there is a solution to a problem which generalises both of these in the torsion-free word-hyperbolic case, that of deciding whether a system of equations over elements in such a group admits a solution. This result is due to Sela in \cite{Z.Sela02232009}, although more general statements have since been proved.

An efficient solution to the word problem due to Shapiro is stated in Section \ref{section:hyperbolicity}, and a solution to the conjugacy problem is the topic of Chapter \ref{chapter:conjugacy}.

The third problem proposed by Dehn, the \textbf{isomorphism problem} of determining whether two such groups are isomorphic has also been shown to be solvable at least for torsion free word-hyperbolic groups. Sela first showed in \cite{sela1995isomorphism} that this is solvable for torsion free word-hyperbolic groups with no essential small action on a real-tree and he has an unpublished proof for arbitrary torsion-free word-hyperbolic groups; Dahmani and Groves proved in \cite{dahmani2008isomorphism} that the problem is solvable in the more general class of torsion free relatively hyperbolic groups with abelian parabolics (a class which in particular includes torsion free word-hyperbolic groups).

All three of these problems are known to admit no solution in the setting of general finitely presented groups.

The reader may notice that torsion in word-hyperbolic groups appears to lead to complications which are often hard to work with. The isomorphism problem for arbitrary word-hyperbolic groups remains open at the time of writing, and torsion plays a part in complicating some of the proofs given in this thesis.

In Chapter \ref{chapter:conjugacy} we present a solution to the conjugacy problem for finite \textit{lists} of elements of an arbitrary word-hyperbolic group which will run in time $O(m\mu)$ where $m$ is the number of words in each list and $\mu$ is an upper bound on the length of said words. This is an improvement upon a quadratic time algorithm for lists which contain an infinite order element given in \cite{bridson2005conjugacy} - and an exponential time algorithm for lists of torsion elements outlined in the same paper. Our solution will in fact produce a complete description of the set of \textit{all} conjugating elements, and in particular the centraliser of a given list of elements.

In Chapter \ref{chapter:qc_conj} we show that given a quasiconvex subgroup $H$ of a word-hyperbolic group, there is an algorithm which checks whether an input word represents a conjugate of an element of $H$, and again, this algorithm will run in linear time if both the group and the subgroup are held constant. We also show that it is possible, again in linear time, to test if two double cosets $HuK$ and $HvK$ are equal for quasiconvex subgroups $H$ and $K$, provided $H$ and $K$ are held constant.

Chapter \ref{chapter:qc_coset} expands upon some work by Foord in \cite{foord2000thesis}, and gives some properties of certain coset Cayley graphs of subgroups of word-hyperbolic groups, specifically giving some bounds on hyperbolicity and the distance from the base point before which they become ``eventually homogeneous'' in the torsion free case, going on to show some simple facts about words which label geodesics distant from the base point.

Finally, in Chapter \ref{chapter:minimal} we present a proof that there is a upper bound on the \textit{minimum} constant of hyperbolicity of a word-hyperbolic group over all finite generating sets of said group.

The rest of this chapter outlines the definitions which will apply during the rest of the thesis.

\section{A Note on Computational Complexity}

A number of results in the thesis make reference to running times of algorithms. These are normally stated in terms of a number of ``fixed'' entities, for instance some word-hyperbolic group. Where a quantity is described as being in $O(n)$ for some $n$, any part of the runtime which depends on these fixed entities is ignored: we presume that there is some constant $K$ depending only on the fixed entities such that the runtime is $O(Kn)$.

Unless noted otherwise, we will assume that the algorithms in question are to be run under a RAM model of computing; that is, one in which seeking to arbitrary locations of memory and basic arithmetic can be performed in constant time. This is a sensible model for any algorithm being implemented upon modern computers provided the input is small enough that processing it will not exhaust the system RAM.

The run-time of the algorithms detailed here appears to be unchanged when they are run on a Turing machine, provided the machine is given a sufficiently large number of states, symbols, heads and tapes (the number of states, symbols, heads and tapes will be dependent only on the ambient groups picked, however) and provided one is rather more careful in cases where it appears arithmetic is needed to be performed. We use a RAM model in the text to avoid having to repeatedly deal with these technicalities.

\section{Metric Spaces and Paths}

We assume the reader has at least a basic understanding of metric spaces.

\begin{definition}
Let $\Gamma$ be a metric space.

A \textbf{path} $\alpha$ in $\Gamma$ is a natural (ie. arc length) parametrization $\alpha : [0, l] \to \Gamma$ of a rectifiable curve in $\Gamma$. We will write $x \in \alpha$ to denote that $x$ lies in the \textit{image} of $\alpha$. If $\alpha$ maps from $[0, l]$, define the length $|\alpha|$ of $\alpha$ to be $l$.

A \textbf{two-way infinite path} $\alpha$ in $\Gamma$ is defined in the same way, except that $\alpha$ maps from $\mathbb{R}$ instead of an interval.

A \textbf{subpath} $\alpha'$ of a (finite or two-way infinite) path $\alpha$ is any restriction of $\alpha$ to a bounded subinterval of its domain, ie.\ $\alpha|_{[a, b]}$, reparametrised so that $\alpha'(0) = \alpha(a)$.

The \textbf{reversal} $\alpha^{-1} : [0, l] \to \Gamma$ of a path $\alpha$ is the map which sends $t \in [0, l]$ to $\alpha(l-t)$.

For points $x, y \in \Gamma$, we will often pick a specific path $\alpha:[0, l] \to \Gamma$ between $x$ and $y$, ie. with $\alpha(0)=x$ and $\alpha(l)=y$. Where such a path has been explicitly picked, we will write $\path{x}{y}$ as a shorthand.

Further, when such a path has been picked, suppose that $c = \alpha(a)$ and $d = \alpha(b)$ for $0 \le a \le b \le l$. We will write $\path{c}{d}$ to refer to the subpath $\alpha|_{[a, b]}$ between $c$ and $d$, and define $d_\alpha(c, d) = b - a$. Often we will simply pick the points $c$ and $d$ to construct such a path. Whenever this is done, we are implicitly picking values $a$ and $b$ in $[0, l]$ so that this operation is well defined even when $\alpha$ is not injective.
\end{definition}

We are now in a position to define a number of concepts relating to shortest paths.

\begin{definition}
Suppose $\alpha$ is a path in some metric space $\Gamma$.

For any $\lambda \ge 1$ and $\epsilon \ge 0$, we define $\alpha$ to be a \textbf{$(\lambda, \epsilon)$-quasigeodesic} if given any subpath $\path{a}{b}$ of $\alpha$ we have $d_\alpha(a, b) \le \lambda d(\alpha(a), \alpha(b)) + \epsilon$.

$\alpha$ is a \textbf{geodesic} if it is a $(1, 0)$-quasigeodesic (that is, an isometry). A \textbf{geodesic metric space} is a metric space in which every pair of points in the space have a geodesic connecting them.

For $L > 0$ define $\alpha$ to have a property \textbf{$L$-locally} if every length $L$ subpath of $\alpha$ has that property. So for example, $L$-local quasigeodesics are paths for which each length $L$ subpath is a quasigeodesic.

Finally, a two-way infinite path has one of the above properties if every bounded subpath does. Thus we may describe an infinite path as a quasigeodesic and so on.
\end{definition}

\section{$X$-graphs}

\label{section:xgraph}

Some of the definitions in this section will be used exclusively in Chapter \ref{chapter:qc_coset}. However, as they relate to Cayley graphs it is convenient to define them now to avoid defining a number of other concepts twice.

The metric spaces which are dealt with in this thesis will all be labelled directed graphs, where the labels obey the criteria below.

\begin{definition}
\label{def:xgraph}
Suppose $\Gamma$ is a directed graph which is connected ignoring edge directions, and has all edges labelled by elements of some finite set $X$. Then $\Gamma$ is an \textbf{$X$-graph} if, for each vertex $\vertex{p} \in \Gamma$ and each $x \in X$, there are unique edges $\edge{e}$ and $\edge{f}$ labelled by $x$, so that $\edge{e}$ starts at $\vertex{p}$ and $\edge{f}$ terminates at $\vertex{p}$. An $X$-graph will always be endowed with a distinguished base vertex.
\end{definition}

Thus, an $X$-graph is a pointed labelled directed graph in which any word whose letters are in $X \cup X^{-1}$ defines an edge path starting from any vertex, formalised as follows:

\begin{definition}
\label{def:xgraphpath}
For a finite set $A$, let $A^n$ be the set of tuples $(a_1, \ldots, a_n)$ where each $a_i \in A$. We define the set $A^* = \bigcup_{n=0}^\infty A^n$ and write elements of $A^*$ without brackets and commas, that is, in the form $a_1a_2 \cdots a_n$. If $u, v \in A^*$ we define $uv$ to be the element of $A^*$ defined by the concatenation of these strings.

Suppose $X$ is a finite set. Define $X^{\pm 1}$ to be the union of $X$ with the set $\{x^{-1} : x \in X\}$ where $x^{-1}$ is assumed to never be an element of $X$.

An \textbf{$X$-word} is an element of $(X^{\pm 1})^*$. We will normally have a fixed set $X$; where this is the case, unless specified otherwise we will often simply describe an $X$-word as a word.

We define $(x^{-1})^{-1}$ to be just $x$ for any $x \in X$ and then define $(a_1\cdots a_n)^{-1} = a_n^{-1} \cdots a_1^{-1}$ for any $X$-word $a_1 \cdots a_n$. An $X$-word is \textbf{reduced} if it contains no subword of the form $xx^{-1}$ or $x^{-1}x$ where $x \in X$.

Given a vertex $\vertex{p}$ in an $X$-graph $\Gamma$, and some $x \in X$, let $\vertex{p} \cdot x$ be the terminal vertex of the edge labelled $x$ which starts at $\vertex{p}$, and let $\vertex{p} \cdot x^{-1}$ be the initial vertex of the edge labelled $x$ which ends at $\vertex{p}$.

For any $X$-word $w = a_1 \cdots a_n$ there is thus defined a unique vertex $\vertex{p} \cdot w = (\ldots(w \cdot a_1) \cdot a_2 \ldots) \cdot a_n$, and a unique path $\wordpath{\vertex{p}}{w} : [0, n] \to \Gamma$ labelled by $w$ which picks each intermediate vertex and edge in the obvious way.
\end{definition}

The \textbf{word metric} on an $X$-graph $\Gamma$ is the metric which gives every edge length $1$, so that the distance between two vertices is the shortest length of a word labelling a geodesic in $\Gamma$ which connects them. We will assume all $X$-graphs are given this metric. Clearly, the resulting space is geodesic.

Given a group $G$ generated by a set $X$, the Cayley graph of $G$ with respect to $X$ has vertex set $G$ and edges connecting $g$ to $gx$ with label $x$ for each $g \in G$ and $x \in X$. This is an $X$-graph, and the base vertex in this case will be taken to be the vertex representing the identity of $G$.

Similarly, the coset Cayley graph (sometimes called a Schreier diagram or relative Cayley graph) of a subgroup $H \le G$ with respect to $X$ has vertex set $V = \{ Hg : g \in G \}$ (ie.\ the set of right cosets of $H$), and edges connnecting $Hg$ to $Hgx$ for each $Hg \in V$ and $x \in X$. Again, this is an $X$-graph, and we take the base vertex to be the vertex representing the trivial coset $H$.

In fact, any $X$-graph $\Gamma$ is just a coset Cayley graph of a subgroup of the free group on $X$. To see this, let $\vertex{p}$ be the base vertex of $\Gamma$. Let $G$ be the free group generated by $X$ with elements represented by reduced $X$-words, and let $H$ be the set of reduced $X$-words $w$ such that $\vertex{p} \cdot w = \vertex{p}$. Then $H$ is a subgroup of $G$ whose coset Cayley graph with respect to $X$ is $\Gamma$. In this construction, $\vertex{p}$ is the vertex representing the trivial coset $H$. Much of Chapter \ref{chapter:qc_coset} could therefore be equivalently restated in terms of coset Cayley graphs.

\begin{definition}
If $\vertex{p}$ is a vertex in an $X$-graph $\Gamma$ and $k \ge 0$, the \textbf{$k$-ball} around $\vertex{p}$, or $B^{\Gamma}_k(\vertex{p})$, is the set containing all vertices $\vertex{q}$ with $d(\vertex{q}, \vertex{p}) \le k$. The superscript will often be omitted where the $X$-graph is clear from the vertex.
\end{definition}

Later on, we will often use the concept of a mid-vertex of a geodesic path in a graph. We define this now.

\begin{definition}
Suppose $\vertex{x}$ and $\vertex{y}$ are vertices in some graph $\Gamma$, and $\path{\vertex{x}}{\vertex{y}}$ is some geodesic path connecting them. Let $\vertex{p}$ be some vertex on $\path{\vertex{x}}{\vertex{y}}$ such that $|d(\vertex{p}, \vertex{x}) - d(\vertex{p}, \vertex{y})| \le 1$. Then we say $\vertex{p}$ is a \textbf{mid-vertex} of $\path{\vertex{x}}{\vertex{y}}$.
\end{definition}

Note that if the distance between two vertices is even, there will be one mid-vertex; if it is odd there will be two.

\section{More about $X$-words}

\label{section:xwords}

We will often be concerned with various subwords of $X$-words; the following definitions outline some shorthands to define these.

Suppose $G$ is a finitely generated group. We will use the notation $=_G$ to represent equality of elements of $G$, and simply $=$ to represent equality of words. When we wish to represent equality of words allowing cancellation of letters with their inverses (ie.\ under the free group), we will write $=_F$.

\begin{definition}
\label{defn:subwords}
Suppose $w = a_1 a_2 \ldots a_k$ is some $X$-word.

Denote the \textbf{length}, $k$, of $w$ as $|w|$, and if $G$ is a group generated by $X$ then denote by $|w|_G$ the smallest length of an $X$-word equal in $G$ to $w$.

Let $w(i) := a_1 a_2 \ldots a_i$ for $0 \le i \le |w|$. If $i < 0$ let $w(i)$ be the empty word and if $i > |w|$ let $w(i) := w$.

This definition can be extended to the integers by considering $w(i)$ to be a subword of $w^n$ or $w^{-n}$ for large enough $n$. In order to avoid confusion, we use $w^\infty$ to represent this extension in the following notation: if $i \in \mathbb{N}$ and $n = \floor{\frac{i}{|w|}}$ then $w^\infty(i) = w^nw(i - n|w|)$, and if $-i \in \mathbb{N}$, $w^\infty(i) = (w^{-1})^\infty(-i)$.

Where $\Gamma$ is an $X$-graph with base point $\vertex{a}$, define the two-way infinite path $\widetilde{w^\infty} : \mathbb{R} \to \Gamma$ by setting $\widetilde{w^\infty}(i) := \vertex{a} \cdot w^\infty(i)$ for any integer $i$ and extending to $\mathbb{R}$ in the obvious way.

Next, for $0 \le i \le j \le k$ we let $w(i:j) := a_{i+1} \ldots a_j =_F w(i)^{-1}w(j)$. Let $w[i] := a_i$.

If $f = \floor{\frac{|w|}{2}}$, we define $w_L := w(f)$, $w_R := w(f:|w|)$ and $w_C := w_Rw_L$.
\end{definition}

Note that if $w$ labels a geodesic path in $\Gamma$ then $w_L$ labels a path to a mid-vertex and $w = w_Lw_R$ always. As an example, let $w = abcde$. Then $w^\infty(11) = abcdeabcdea$, $w^\infty(-3) = w^{-1}(3) = e^{-1}d^{-1}c^{-1}$, $w_L = w(2) = ab$, $w_R = w(2:5) = cde$ and $w_C = cdeab$.

We can now define a ``straight'' word.

\begin{defn}
Given an $X$-graph $\Gamma$ and with base vertex $\vertex{a}$, a non-empty word $w$ is \textbf{straight} if $\widetilde{w^\infty}$ is a geodesic.

By fixing some ordering on $X^{\pm 1}$ we can produce a lexicographic ordering on $X$-words. We say $w$ is a \textbf{short-lex least representative} if $w$ labels a geodesic at $\vertex{a}$ and no other geodesic connecting $\vertex{a}$ to $\vertex{a} \cdot w$ has a label lexicocgraphically less than $w$.

A non-empty word is \textbf{short-lex straight} if $w^i$ is a short-lex least word for each $i > 0$.
\end{defn}

Those definitions above which relate to the base point will only be used in the case where $\Gamma$ is the Cayley graph of a group. As Cayley graphs are homogenous, they are therefore independent of the base point chosen.

\section{Hyperbolicity}

\label{section:hyperbolicity}

There are a number of equivalent definitions of hyperbolicity of a given space, many of which are for example given in \cite{BriHae99} or \cite{alonso1990notes}. The definition we will be using is that of having thin triangles.

\begin{definition}
Let $\Gamma$ be a geodesic metric space.

For points $x, y, z \in \Gamma$, define the \textbf{hyperbolic inner product} \[ (x, y)_z = \frac{d(x, z) + d(y, z) - d(x, y)}{2}. \]

Given three points $x, y, z \in \Gamma$, we define a \textbf{triangle} to be a choice of paths $\path{x}{y}$, $\path{y}{z}$ and $\path{z}{x}$. We say the triangle is geodesic (resp. quasigeodesic, local geodesic, \ldots) if each of the three paths which make it up are geodesic (resp. quasigeodesic, \ldots).

\begin{figure}
\begin{center}
\input thin_triangles.pstex_t
\caption{A thin triangle, and a $3$-correspondance}
\label{figure:thin_triangles}
\end{center}
\end{figure}

On a triangle connecting these three points, define the \textbf{meeting point} on the side $\path{x}{y}$ to be the point $c_z \in \path{x}{y}$ such that \[ d_{\path{x}{y}}(x, c_z) = \frac{d_{\path{x}{y}}(x, y) + d_{\path{x}{z}}(x, z) - d_{\path{y}{z}}(y, z)}{2}. \] Notice that this meeting point may be on an edge when $\Gamma$ is a graph. Define $c_x$ and $c_y$ similarly as in Figure \ref{figure:thin_triangles}. Note that in the case of a geodesic triangle, $d(x, c_z) = (y, z)_x$.

Suppose that $p$ is a point on $\path{x}{c_z}$. We say the point $q \in \path{x}{c_y}$ such that $d_{\path{x}{c_y}}(x, q) = d_{\path{x}{c_z}}(x, p)$ \textbf{corresponds} to $p$ and vice versa. By relabelling the corners, we may find a corresponding point to each point on each of the three sides of the triangle. Observe that the meeting points all correspond to each other and hence have two corresponding points (except in degenerate cases where the meeting points are equal), and that all other points have one corresponding point (except in similar degenerate cases).

The triangle is \textbf{$\delta$-thin} if $d(p, q) \le \delta$ for all such corresponding points $p$ and $q$. It is \textbf{$\delta$-vertex-thin} if $d(\vertex{p}, \vertex{q}) \le \delta$ for all corresponding \textit{vertices} $\vertex{p}$ and $\vertex{q}$.

A geodesic space is \textbf{$\delta$-hyperbolic} if all geodesic triangles in it are $\delta$-thin. A graph is \textbf{$\delta$-vertex-hyperbolic} if every geodesic triangle in the graph whose corners lie on vertices is $\delta$-vertex-thin and $\delta$ is an integer. In either case we will assume $\delta \ge 1$ to avoid complications in run times and so on.

A finitely generated group $G = <\!X\!>$ is \textbf{$\delta$-hyperbolic} with respect to $X$ if its Cayley graph with respect to $X$ is $\delta$-hyperbolic.

In a construction involving many triangles sharing common sides, we will use the phrase $p$ \textbf{$n$-corresponds} to $q$ if there is a sequence $p = r_0, r_1, r_2, \cdots, r_n = q$ of points such that $r_i$ corresponds (via a previously constructed triangle) to $r_{i+1}$ for all $i$. More generally, we will say that points \textbf{chain-correspond} if there exists an $n \in \mathbb{N}$ such that they $n$-correspond. This is illustrated on the right hand side of Figure \ref{figure:thin_triangles}.
\end{definition}

Notice that for any points $x, y, z \in \Gamma$ we have $(x, z)_y + (y, z)_x = d(x, y)$. This fact is used in many places to produce bounds on $d(x, y)$.

For an $X$-graph $\Gamma$ with base vertex $\vertex{a}$, if we have $X$-words $u, v$ which label geodesics at $\vertex{a}$ then the value of $(\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}}$ in some sense measures the amount of cancellation in the word $u^{-1}v$ when it defines a path starting at $\vertex{a} \cdot u$. When $\Gamma$ is a Cayley graph, notice that $(\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}} = \frac{|u|_G + |v|_G - |uv^{-1}|_G}{2}$ is independent of the specific vertex $\vertex{a}$. Thus, when some group $G$ has been picked, we will write $\canc{u}{v} = (\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}}$.

It is perhaps unclear whether or not a vertex-hyperbolic space is hyperbolic (although a hyperbolic space is clearly vertex-hyperbolic). In Section \ref{section:graph_hyp_implies_space_hyp} we show that these properties are indeed equivalent. The $\delta$ associated to vertex-hyperbolicity is rather more relevant to a word-hyperbolic group as we are mostly concerned with words -- that is, labels of paths which connect vertices. Most of the literature, however, uses the hyperbolicity constant rather than vertex-hyperbolicity constant, so we will for the most part be using this constant also to simplify the use of results from elsewhere.

The property of being $\delta$-hyperbolic for \textit{some} $\delta$ is a property of the group and not just the generating set (see \cite{gromov1987hyperbolic}), although the particular value of $\delta$ will likely change depending on the particular generating set used.

Of course, knowing that such a constant $\delta$ exists is not particularly helpful for writing explicit algorithms which will often use the \textit{value} of $\delta$. In \cite{epstein2001computation} an algorithm is given (and in fact implemented in D.\ F.\ Holt's KBMAG package) which can, given a finite presentation for a word-hyperbolic group, compute such a constant. In fact, the algorithm computes the minimum vertex-hyperbolicity constant for the Cayley graph relative to the given generating set.

This algorithm terminates if and only if the presentation defines a word-hyperbolic group, and has no bound on its running time: It is impossible to predict when the algorithm will complete, only that it will at some point do so. We will therefore assume that for any word-hyperbolic group mentioned in this thesis, the algorithm has \textit{already been executed} and thus the constant $\delta$ is known.

Note that this indeterminate runtime is the best that we can hope for. Given a $\delta$-hyperbolic group, it is rather easy to test if that group is trivial: use the solution of the word problem to show that each generator is equal to the identity. In fact, the trivial group is $1$-hyperbolic with respect to any generating set. If there were an efficient algorithm which determined whether or not a given presentation was hyperbolic, it would therefore be able to determine whether or not a given finite presentation is a presentation of the trivial group. This is well known to be impossible.

We noted earlier that the word problem was solvable in the setting of word-hyperbolic groups. In \cite{epstein2006linearity} a solution to the word problem due to Shapiro is given which runs in linear time on a Turing machine with two tapes, as follows.

\begin{lemma}
\label{lemma:short_lex}
Suppose that $G$ is a $\delta$-hyperbolic group. Then there is an algorithm which, given a word $w$ in the generators of $G$ will return the short-lex least representative of $w$ in time $O(|w|)$.
\end{lemma}

We will denote use of this lemma (ie.\ the act of finding short-lex reduced words) by $\slex$ operating on elements, words and lists of elements or words in the obvious way. Of course, we will also use it implicitly, since it implies that operations like finding the length $|g|_G$ of an element $g$, or deciding equality of two elements can be performed in time linear in the length of the input words.

\section{FSAs, DFAs and Automatic Groups}

Another class of finitely generated groups which is of computational interest is the class of automatic groups, which are defined by certain finite state automata. A lot of detail in these definitions and results will be omitted; Chapter 13 of \cite{holt2005handbook} gives a rather fuller outline of the theory of automatic groups and regular languages.

\begin{definition}
Given a set $A$, let $A' = A \cup \{ \epsilon \}$ where $\epsilon$ is assumed not to be in $A$.

A \textbf{finite state automaton} $M$ on an alphabet $A$ (or $A$-FSA) is a finite set $S$ of states, a subset $X \subset S$ of \textbf{start states}, a subset $Y \subset S$ of \textbf{accepting states} and a set $\tau \subset S \times A' \times S$ of \textbf{transitions}.

The set of transitions allow us to regard $M$ as a directed graph $G$ with vertex set $S$ and an edge connecting $s$ to $t$ with label $a$ whenever $(s, a, t) \in \tau$. An edge with label $\epsilon$ is called an $\epsilon$-transition.

We say $M$ is \textbf{deterministic}, or $M$ is an \textbf{$A$-DFA}, if $X$ has only a single element $s_0 \in X$, there are no $\epsilon$-transitions and for all $s \in S$ and $a \in A$ there is at most one edge in $G$ labelled $a$ which starts at $s$.

We say an element $w \in A^*$ is \textbf{accepted by $M$} if there is a path in $G$ starting at an element of $X$ and ending at an element of $Y$ whose label, after deleting all occurrences of $\epsilon$, is $w$.

A subset of $A^*$ is called a \textbf{language}. The set of all words accepted by $M$ is the \textbf{language of $M$}.

A language is \textbf{regular} if it is the language of an $A$-FSA.
\end{definition}

In the deterministic case, notice that $\tau$ defines a partial function $\sigma : S \times A \to S$. By adding a ``reject'' state $r$ to $S$, we can make $\sigma$ a full function $\sigma'$ by setting $\sigma'(s, a) = r$ whenever $\sigma'(s, a)$ is not defined. We can extend this to a \textbf{transition function} $\overline{\sigma} : S \times A^* \to S$ by letting $\overline{\sigma}(s, w) := \sigma'(\sigma'(\sigma'(s, a_1), a_2), \ldots, a_n)$ whenever $w = a_1a_2 \cdots a_n \in A^*$. Thus $w$ is accepted if and only if $\overline{\sigma}(s_0, w) \in Y$, and one can test membership in time linear in input length.

Every regular language is in fact accepted by a DFA. In section 13.1.6.1 of \cite{holt2005handbook}, for instance, a method is given to produce a DFA from any FSA. 

A basic property of regular languages is that they obey the \textbf{pumping lemma} (see \cite{hopcraft--ullman}, Lemma 3.1 for example). A quick sketch proof is given here, as a similar technique is used in Section \ref{section:holt}.

\begin{proposition}
\label{prop:pumpinglemma}
Suppose $M$ is an $A$-DFA. Then there is a constant $K$ such that for any word $w$ in the language of $M$ with $|w| \ge K$ there are words $a, b, c \in A^*$ such $w = abc$, $|b| > 0$ and $ab^nc$ is in the language of $M$ for all $n > 0$.
\end{proposition}

\begin{proof}
Let $K$ be the number of states in $M$, let $s_0$ be its start state and let $\overline{\sigma}$ be its transition function. If $|w| \ge K$ then when reading $w$, some state is hit twice, ie.\ there is some state $s$ with $s = \overline{\sigma}(s_0, w(i)) = \overline{\sigma}(s_0, w(j))$ for some $i < j$. Then $\overline{\sigma}(s, w(i:j)) = s$, so let $a := w(i)$, $b := w(i:j)$ and $c := w(j:|w|)$ and for any $n \ge 0$ we have $\overline{\sigma}(s_0, ab^nc) = \overline{\sigma}(s_0, abc) = \overline{\sigma}(s_0, w)$. In particular, $ab^nc$ is also accepted by $M$.
\end{proof}

There are many other definitions of a regular language which are equivalent to this, for instance, regular expressions. We will not need these definitions, however, so we omit them. We do, however, make use of (synchronous) $n$-variable FSAs which we now define.

\begin{definition}
For this definition, given a set $A$, let $A' = A \cup \{\$\}$ where $\$$ is some symbol which is not in $A$.

Given a tuple $T = (w_1, \ldots, w_n)$ of words with letters in $A$, let $l$ be the length of the longest word in $T$. For each $i$, let $w_i'$ be $w_i$ with a string of $\$$ symbols added onto the end so that each $w_i'$ has length exactly $l$. Now let $\widetilde{T} = a_1 \cdots a_l$ where $a_j := (w_1'[j], \ldots, w_n'[j])$ so that $\widetilde{T}$, the \textbf{padding} of $T$, is an element of $(A'^n)^*$.

An $n$-variable $A$-FSA $M$ is now defined to be simply an $A'^n$-FSA. The language of $M$ is the set of elements of $(A^*)^n$ which, after padding, are accepted by $M$.

We say that a subset of $(A^*)^n$ is a \textbf{regular $n$-variable language} if it is the language of an $n$-variable $A$-FSA.
\end{definition}

Notice that a $1$-variable $A$-FSA simply defines an $A$-FSA (the symbol $\$$ will never be needed, so any edge with that label may be ignored). We now state some simple results involving regular languages and provide a brief proof skipping some details.

\begin{proposition}
\label{prop:regular}
Suppose $A$ is a finite set containing $l$ elements.
\renewcommand{\labelenumi}{(\arabic{enumi}) }
\begin{enumerate}
\item \label{item:reg_empty} The empty set is the language of an $A$-DFA with 1 state.
\item \label{item:reg_all} $A^*$ is the language of an $A$-DFA with 1 state.
\item \label{item:reg_word} For any word $y \in A^*$, the set $\{ y \}$ is the language of an $A$-DFA with $|y|+1$ states.
\item \label{item:reg_loop} For any non-empty word $y \in A^*$, the set $\{ y^n : n \in \mathbb{Z}, n \ge 0 \}$ is the language of an $A$-DFA with $|y|$ states.
\newcounter{regularenum}
\setcounter{regularenum}{\value{enumi}}
\end{enumerate}

Now suppose that there are are $n_1$-variable and $n_2$-variable $A$-FSAs which have languages $L_1$ and $L_2$, and have $k_1$ and $k_2$ states respectively.
\begin{enumerate}
\setcounter{enumi}{\value{regularenum}}
\item \label{item:reg_proj} Projection of $L_1$ to any its first factor is the language of an $A$-FSA with $k_1$ states.
\item \label{item:reg_cart} $L_1 \times L_2$ is the language of an $n_1 + n_2$-variable $A$-FSA with $k_1k_2$ states.
\setcounter{regularenum}{\value{enumi}}
\end{enumerate}

Suppose that $n_1 = n_2$.
\begin{enumerate}
\setcounter{enumi}{\value{regularenum}}
\item \label{item:reg_union} $L_1 \cup L_2$ is the language of an $n_1$-variable $A$-FSA with $k_1 + k_2$ states.
\item \label{item:reg_intersection} $L_1 \cap L_2$ is the language of an $n_1$-variable $A$-FSA with $k_1k_2$ states.
\setcounter{regularenum}{\value{enumi}}
\end{enumerate}

Finally, suppose that $n_1 = n_2 = 1$.
\begin{enumerate}
\setcounter{enumi}{\value{regularenum}}
\item \label{item:reg_pair} $\{ (w, w) : w \in L_1 \}$ is the language of a $2$-variable $A$-FSA with $k_1$ states.
\item \label{item:reg_concat} The concatenation $L_1L_2 = \{ w_1w_2 : w_1 \in L_1, w_2 \in L_2 \}$ of $L_1$ and $L_2$ is the language of an $A$-FSA with $k_1 + k_2$ states.
\end{enumerate}

All of the automata above can be computed in time $O(l^2s)$, where $s$ is the number of states in the new automaton.
\renewcommand{\labelenumi}{\arabic{enumi}. }
\end{proposition}

\begin{proof}
For (\ref{item:reg_empty}) let $S = X = Y = \{1\}$ and $\tau$ be the empty set. For (\ref{item:reg_all}), let  $S = X = Y = \{1\}$ and let $\tau = S \times A' \times S$.

For (\ref{item:reg_word}) and (\ref{item:reg_loop}), suppose $y = a_1 \cdots a_n$. For (\ref{item:reg_word}), let $S = \{ 0, \ldots, n \}$, $X = \{ 0 \}$ and $Y = \{ n \}$. Let $\tau = \{ (i - 1, a_i, i) : 1 \le i \le n \}$. For (\ref{item:reg_loop}), let $S = \{ 1, \ldots, n \}$, $X = \{ 1 \}$ and $Y = \{ 1 \}$. Let $\tau = \{ (i, a_i, i + 1) : 1 \le i \le n - 1 \} \cup \{ (n, a_n, 1) \}$.

For the remainder of the examples, assume the FSAs have state sets $S_i$, start states $X_i$, accept states $Y_i$ and transitions $\tau_i$. For convenience, assume that $S_1 \cap S_2 = \phi$.

For (\ref{item:reg_proj}) let $S = S_1$, $X = X_1$, $Y = Y_1$ and $\tau = \{ (s, a_1, t) : (s, (a_1, \ldots, a_{n_1}), t) \in \tau_1 \}$, replacing any transitions labelled $\$$ with transitions labelled $\epsilon$.

For (\ref{item:reg_cart}) if both automata have one variable, let $S = S_1 \times S_2$, $X = X_1 \times X_2$ and $Y = Y_1 \times Y_2$. Let $\tau_i' = \tau_i \cup \{ (s, \$, s) : s \in S_i\}$ for each $i$ and then let \[ \tau = \{ ((s_1, s_2), (a_1, a_2), (t_1, t_2)) : (s_1, a_1, t_1) \in \tau_1', (s_2, a_2, t_2) \in \tau_2' \}. \] The multiple variable case is similar but requires that one be a little careful with transitions labelled $\$$.

For (\ref{item:reg_union}) let $S = S_1 \cup S_2$, let $X = X_1 \cup X_2$ and let $Y = Y_1 \cup Y_2$. Finally, let $\tau = \tau_1 \cup \tau_2$.

For (\ref{item:reg_intersection}) let $S = S_1 \times S_2$, let $X = X_1 \times X_2$, let $Y = Y_1 \times Y_2$ and let $\tau = \{ (s_1, s_2, a, t_1, t_2) : (s_1, a, t_1) \in \tau_1, (s_2, a, t_2) \in \tau_2\}$.

For (\ref{item:reg_pair}) let $S = S_1$, $X = X_1$, $Y = Y_1$ and $\tau = \{ (s, (a, a), t) : (s, a, t) \in \tau_1 \}$.

For (\ref{item:reg_concat}) let $S = S_1 \cup S_2$, $X = X_1$ and $Y = Y_2$ and let $\tau = \tau_1 \cup \tau_2 \cup \{ (y, \epsilon, x) : y \in Y_1, x \in X_2 \}$.

In each case, the sets $S, X, Y$ and $\tau$ define the required automaton and can be computed in the required time.
\end{proof}

We now define various types of automatic groups.

\begin{definition}
Suppose that $G$ is a group generated by a set $X$.

A language $W \subset (X^{\pm 1})^*$ is a \textbf{cross-section of $G$} if each element of $G$ is equal to at least one element of $W$. If $W$ is regular, we say $W$ is a \textbf{regular cross-section of $G$}.

Suppose that $W$ is a regular cross-section of $G$. Let $A$ be the set containing all of $X^{\pm 1}$ as well as the identity in $G$.

If the set $\{ (u, v) \in W^2 : ux =_G v\}$ is a regular $2$-variable language for each $x \in A$ then we say $G$ is \textbf{automatic with respect to $W$}. A group is \textbf{automatic} if it is automatic with respect to some regular cross-section.

If the set $\{ (u, v) \in W^2 : ux =_G xv\}$ is a regular $2$-variable language for each $x \in A$ then we say $G$ is \textbf{conjugacy automatic with respect to $W$}. A group is \textbf{conjugacy automatic} if it is automatic with respect to some regular cross-section.
\end{definition}

P.\ Papasoglu proved in \cite{papasoglu1995strongly} that a group is word-hyperbolic if and only if it is automatic with respect to the set $W$ of all words labelling geodesics in the Cayley graph (that is, if the group is strongly geodesically automatic). In fact a word-hyperbolic group is automatic with respect to the set of short-lex least representatives of elements (this is Theorem 3.4.5 of \cite{epstein1992word}).

Word-hyperbolic groups are also conjugacy automatic with respect to the set of geodesic-labelling words (see Lemma 4.2 of \cite{gersten1991rational} for a proof of this fact which uses the fact that word-hyperbolic groups are \textit{biautomatic} with respect to the set of geodesics). Since the language of short-lex least representatives is regular and the intersection of two regular languages is regular, word-hyperbolic groups are conjugacy automatic with respect to the set of short-lex least representatives as well.

In particular, for a word-hyperbolic group generated by a set $X$, there is an $X^{\pm 1}$-DFA whose language is the set of all short-lex least words, the \textbf{short-lex word acceptor}, and another $X^{\pm 1}$-DFA whose language is the set of words which label geodesics in the group's Cayley graph, the \textbf{geodesic word acceptor}. We will assume therefore that these automata have already been computed for any word-hyperbolic group we are given.

Much like with hyperbolicity, it is impossible to determine whether or not an arbitrary finitely presented group is automatic -- in fact, the problem here is made even more difficult as one must search for a regular cross-section $W$, which might not be something easily described like the set of geodesic-labelling words.

\section{Other Notation}

We close this chapter with some other miscellaneous notation which is used throughout.

Many of the results in the thesis relate to conjugacy. We adopt a shorthand to express conjugation.

\begin{defn}
Supposing $g, h \in G$, we will denote conjugation of $g$ by $h$ using superscripts, so that $g^h = h^{-1}gh$.
\end{defn}

Finally, many of the results below attempt to express things as being ``equal plus or minus delta,'' so to avoid lots of duplicate inequations, we define a symbol to express this.

\begin{defn}
If $a, b, c \in \mathbb{R}$ satisfy $a + c \ge b \ge a - c$ then we write $a =^c b$.
\end{defn}

\chapter{The Conjugacy Problem for Lists}

\label{chapter:conjugacy}

\section{Introduction}

In \cite{bridson2005conjugacy}, Bridson and Howie give a solution of the conjugacy problem for finite lists $A = (a_1, \ldots, a_m)$ and $B = (b_1, \ldots, b_m)$ of elements in a word-hyperbolic group -- in fact, they prove that the problem is solvable in time $O(m \mu^2)$ for a torsion free group, where $\mu$ is an upper bound on the length of elements in both lists.

The aim here is to both improve the bound on running time to $O(m\mu)$, and to tie up the rather limp conclusion in part 2 of Theorem B of \cite{bridson2005conjugacy}, in which their algorithm simply terminates when the lists contain entirely elements of finite order without giving any results on the conjugacy.

The ideas used here closely relate to the ideas in \cite{epstein2006linearity}, in which Epstein and Holt show that the conjugacy problem for single elements in a word-hyperbolic group can be solved in linear time if one assumes a RAM model of computing. They do so by showing that infinite order elements tend to be well-behaved when raised to large powers, and finite order elements can be conjugated to elements of short length whose conjugacy can be precomputed. In fact, we use a number of results from that paper which relate to these facts in order to establish the result here.

We will presume for the duration of this chapter that the ambient finitely generated group $G$ has been fixed along with a finite generating set $X$, and that $G$ is $\delta$-hyperbolic for some $\delta$ with respect to this generating set (we will assume $\delta$ is an integer and $\delta > 0$ to simplify some reasoning later on). All words in this chapter are $X$-words, and all geometric constructions occur inside the Cayley graph $\Gamma$ of $G$ with respect to $X$, inside which we will assume that the vertex $\vertex{e}$ represents the identity element of $G$.

We will also assume that an ordering on the generators has been picked, so that the notion of a short-lex least representative word for each element exists and that the short-lex word acceptor for $G$ has been computed.

The technicalities behind the proof in the case where one element, say $a_1$, has infinite order are largely covered by solving the conjugacy problem $a_1^h =_G b_1$ for $h$ as in \cite{epstein2006linearity}. In the process of doing so, we can find a useful description of elements of the centraliser $C$ of $a_1$ and then test if for some $c \in C$ we have $A^{ch} =_G B$. Of course $C$ is infinite, so it is important to perform this testing efficiently. Section \ref{section:inf_order} describes a way of doing so.

Unfortunately, since we can only obtain this form of the centraliser for infinite order elements we run up against problems when we consider lists of torsion elements. It is, however, possible to show that provided we bound the number of elements in our lists, we can efficiently find a pair of lists $A'$ and $B'$ such that $A^h =_G B$ if and only if $A'^h =_G B'$ and such that either $A'$ or $B'$ contains an infinite order element, or each element in $A'$ and $B'$ is of bounded length for some element $g$. In the latter case, one may simply use the exponential algorithm given in \cite{bridson2005conjugacy} to finish the solution.

The disadvantage of computing in this way is that for lists with more elements, the amount of computation required grows in at least exponential fashion. However, it can be shown that if there are sufficiently many finite order elements in the list then its centraliser is finite. In particular, there are only a finite number of elements which can simultaneously conjugate the initial elements of one list to the initial elements of the other, so we need only test these centralising elements on the remainder of the elements of the lists to complete the procedure.

In fact, all of the methods we use above will produce a complete description of the set of \textit{all} conjugating elements as a regular set. Thus we have:

\begin{theorem}
\label{thm:linear_conj}
Given integers $\delta \ge 1$ and $l$, there is an algorithm which, given a $\delta$-hyperbolic group $G=<X|R>$ with $|X| \le l$, a number $m \ge 0$ and lists $A = (a_1, \cdots, a_m)$ and $B = (b_1, \cdots, b_m)$, each containing words in the generators of $G$, can find a (non-deterministic) $X^{\pm 1}$-FSA whose language $L$ satisfies:
\begin{itemize}
\item $A^w =_G B$ for any $w \in L$, and
\item for any $g \in G$ such that $A^g =_G B$ there is an element $w \in L$ with $w =_G g$.
\end{itemize}

If $|a_i| \le \mu$ and $|b_i| \le \mu$ for each $1 \le i \le m$ then the algorithm will run in time $O(m\mu)$. It can be modified to return a single conjugating element $g \in G$ with $A^g = B$, if one exists, without affecting the running time.
\end{theorem}

Because the methods here express all conjugating elements, they additionally allow computation of the centraliser of a list of elements.

\section{Notation}
\label{section:conj_const}

In this section, we provide some notation which is used during the remainder of the chapter. We start by suggesting that the reader familiarise themselves with the definitions in Section \ref{section:xwords}.

Next, recall Lemma \ref{lemma:short_lex}, that we have a function $\slex$ which returns the short-lex least representative in $G$ of any word and can be computed in time linear in input word length. We extend $\slex$ to operate on lists and sets in the obvious way.

There are a number of constants which will be used throughout this chapter (as well as some points in later chapters where this chapter's results are used). These are:

\begin{itemize}
\item $L := 34\delta + 2$
\item $V$, the number of vertices in $B_{2\delta}(\vertex{e})$
\item $Q$, the number of vertices in $B_{4\delta}(\vertex{e})$
\item $M := 10^3\delta^2V^3L^2$
\end{itemize}

\section{The Infinite Order Case}

\label{section:inf_order}

In this section, we will assume that we are given two equal length lists $A$ and $B$ whose elements $X$-words, and that all elements of $A$ and $B$ have length at most $\mu$. We will also assume that the first element of $A$ is of infinite order.

The aim of the section is to test which elements $g \in G$ have $A^g =_G B$. The method is something of a combination of those methods outlined in \cite{epstein2006linearity} and \cite{bridson2005conjugacy}.

We begin with several sections which bring together results from other sources and then put those results together to give an algorithm which finds elements which conjugate $A$ to $B$.

\subsection{Results From \cite{epstein2006linearity}}

\label{section:holt}

In \cite{epstein2006linearity} (Section 3), it's proved that the conjugacy problem for single elements is linear in the total input element length. The proof has several steps. The first few will be followed here as well.

The first step is to show that elements that are ``difficult to shorten'' are actually of infinite order, and behave nicely when raised to large powers. This result is Lemma 3.1 of \cite{epstein2006linearity}.

\begin{proposition}
\label{prop:short_conj}
Let $w$ be some short-lex least word. Let $u$ be the short-lex least representative of $w_C$. If $u$ has length strictly greater than $2L$, then all positive powers of $u$ label $L$-local $(1, 2\delta)$-quasigeodesics.
\end{proposition}

In Proposition 2.3 of \cite{epstein2006linearity} it is proved that such a local quasigeodesic lies close to a geodesic.

\begin{proposition}
\label{prop:nice_qgeo}
If $w$ is an $L$-local $(1, 2\delta)$ quasigeodesic in $\Gamma$, and $u$ is a geodesic connecting its endpoints, then every point on $w$ is within $4\delta$ of a point on $u$ and vice versa. Also, if $|w| \ge L$ then $|u| \ge \frac{7|w|}{17}$.
\end{proposition}

In particular, if $|w_C| > 2L$ then $w$ is of infinite order as there is no bound on the length of shortest representatives of its powers. We will use this fact extensively in the next section also.

The next step is to show that such a word $u$ can be equated with some root of a conjugate of a short-lex straight word. The following two results summarise Section 3.2 of \cite{epstein2006linearity}.

\begin{proposition}
\label{prop:long_conj_slex}
Suppose $u$ is some short-lex least word such that all positive powers of $u$ label $L$-local $(1, 2\delta)$-quasigeodesics and $|u| > L$. Then there exists some integer $0 < k \le Q^2$ and some word $a$ whose length is less than or equal to $4\delta$ such that $\slex(a^{-1}u^ka)$ is short-lex straight.
\end{proposition}

\begin{proposition}
\label{prop:test_sls}
Given a short-lex least word $u$, testing if $u$ is short-lex straight takes time at most $O(|u|)$.
\end{proposition}

The second proposition can be proved in a similar way to the Pumping Lemma, Proposition \ref{prop:pumpinglemma}. Repeatedly read $u$ through the short-lex word acceptor until some state is hit for the second time after reading a complete copy of $u$. In this case, reading $u$ again will just cycle over previous states so $u$ must be short-lex straight.

Thus we have the following code to test for short-lex straight-ness:

\begin{algorithm}
\label{algorithm:testsls}
Test if an $X$-word is short-lex straight
\begin{algorithmic}[1]
\Function{TestSLS}{$u$}
\Statex \textbf{Input:} An $X$-word $u$.
\Statex \textbf{Output:} True if $a$ is short-lex straight; false otherwise.
\State $WA\gets$ \Call{ShortLexWordAcceptor}{$G$}
\State $S\gets$ \Call{States}{$WA$}
\State $w\gets u^{|S|}$
\For{$s\in S$}
	\State $visited[s]\gets false$ \Comment{States hit after reading complete copies of $u$}
\EndFor
\State $s\gets$ \Call{StartState}{$WA$}
\State $f\gets$ \Call{TransitionFunction}{$WA$}
\State $visited[s]\gets true$
\For{$i:= 1$ to $|w|$}
	\State $s \gets f(s, w[i])$
	\If{$\neg$ \Call{IsAcceptState}{$WA, s$}}
		\State \textbf{return} false
	\EndIf
	\If{$i=0\mod|u|$}
		\If{$visited[s]$}
			\State \textbf{return} true
		\EndIf
		\State $visited[s]\gets true$
	\EndIf
\EndFor
\EndFunction
\end{algorithmic}
\end{algorithm}

And we can find a short-lex straight power as follows:

\begin{algorithm}
\label{algorithm:findslspower}
Find a short-lex straight power
\begin{algorithmic}[1]
\Function{FindSLSPower}{$a$}
\Statex \textbf{Input:} An $X$-word $a$ for which $\widetilde{a^\infty}$ is a $L$-local $(1, 2\delta)$ quasigeodesic.
\Statex \textbf{Output:} An $X$-word $h$ and an integer $i$ with $\slex((a^i)^h)$ short-lex straight.
\For{$h \in B_{4\delta}(1)$}\Comment{Find straight power using Proposition \ref{prop:long_conj_slex}}
	\For{$i \in \{1, \ldots, Q^2\}$}
		\If{\Call{TestSLS}{$\pi(h^{-1}a^ih)$}}\Comment{Must happen at least once}
			\State \textbf{return} $h, i$
		\EndIf
	\EndFor
\EndFor
\EndFunction
\end{algorithmic}
\end{algorithm}

Once a word is short-lex straight, it is easier to test conjugacy against it. The next result summarises Section 3.3 of \cite{epstein2006linearity}.

\begin{proposition}
\label{prop:test_conj_sls}
If $u$ is short-lex straight and $v$ is a word such that $\widetilde{v^\infty}$ is a $(1, 2\delta)$ $L$-local quasigeodesic with $|v|_G > L$, and $g^{-1}vg =_Gu$ for some $g$, then there exists a word $h$ with $|h| \le 6\delta$ such that $\slex(h^{-1}vh)$ is a cyclic conjugate of $u$. 
\end{proposition}

One can test if a word $u$ is a cyclic conjugate of another word $v$ by testing if $v$ appears as a substring of $u^2$, which can be done for instance using the Knuth-Morris-Pratt algorithm which runs in time\footnote{Strictly speaking, the standard KMP algorithm will run in worse than linear time on a Turing machine, due to construction of a table whose length depends on the input. However, the algorithm can be modified to generate the table in a more tape-friendly way; \cite{galil1976real} offers an implementation which will test for substrings in linear time (actually, that paper's method runs in real-time given a suitably arranged input).} $O(|u| + |v|)$. We denote the use of this algorithm by \textsc{FindSubstring} and later, \textsc{FindSecondSubstring}.

The following pseudocode will test conjugacy of such words $u$, $v$:

\begin{algorithm}
\label{algorithm:testconjugacyslslong}
Test if a short-lex straight word is conjugate to a ``long'' word.
\begin{algorithmic}[1]
\Function{TestConjugacySLSLong}{$u, v$}
\Statex \textbf{Input:} A short-lex straight $X$-word $u$ and an $X$-word $v$ for which $\widetilde{v^\infty}$ is a $L$-local $(1, 2\delta)$ quasigeodesic.
\Statex \textbf{Output:} An $X$-word $g$ with $u^g =_G v$ or $null$ if no such $g$ exists.
\For{$h \in B_{6\delta}(1)$}\Comment{Test conjugacy using Proposition \ref{prop:test_conj_sls}}
	\State $i \gets$ \Call{FindSubString}{$u^2$, $\pi(hvh^{-1})$}
	\If{$i$ is not null}
		\State \textbf{return} $u(i)h$
	\EndIf
\EndFor
\State \textbf{return} $null$
\EndFunction
\end{algorithmic}
\end{algorithm}

A refinement of the proof of the above statement gives a nice form for elements of the centraliser of a short-lex straight word. This result summarises Section 3.4 of \cite{epstein2006linearity}.

\begin{proposition}
\label{prop:find_centraliser_sls} 
If $z$ is short-lex straight and $y^l=z$ with $l$ maximal, then $g\in C_G(z)$ implies that $g=_Gy^iy_1h$, with $y_1$ a prefix of $y$, $i\in \mathbb{Z}$ and $|h| \le 2\delta$. Further, $y_1$ depends only on $h$.

$l$, $y$ and the set of words $y_1h$ can be computed in time $O(|z|)$.
\end{proposition}

Again, here is the algorithm in pseudocode:

\begin{algorithm}
\label{algorithm:findslscentralisersuperset}
Find a ``nice'' superset of the centraliser of a short-lex straight word.
\begin{algorithmic}[1]
\Function{FindSLSCentraliserSuperset}{$z$}
\Statex \textbf{Input:} A short-lex straight $X$-word $z$
\Statex \textbf{Output:} A short-lex straight word $y$ with $y^l = z$ for some $l$ and a set $S$ with $C_G(z) \subset \{ y^ns : n \in \mathbb{Z}, s \in S \}$.
\State $i \gets$ \Call{FindSecondSubString}{$z^2$, $z$}
\State $y \gets z(i)$ 
\State $S \gets \{\}$
\For{$h \in B_{2\delta}(1)$}\Comment{Find centraliser of $a$ using Proposition \ref{prop:find_centraliser_sls}}
	\State $i \gets$ \Call{FindSubString}{$z^2$, $\slex(hzh^{-1})$}
	\If{$i$ is not null}
		\State $S \gets S \cup \{z(i)h\}$
	\EndIf
\EndFor
\State \textbf{return} $y, S$
\EndFunction
\end{algorithmic}
\end{algorithm}

Suppose that $z=\slex(a^{-1}(u_C)^ia)$ is short-lex straight, that $y^l=z$ with $l$ maximal, that $\widetilde{v^\infty}$ is an $L$-local $(1,2\delta)$ quasigeodesic, that $b^{-1}zb=_G v^i$ and that $g^{-1}ug=_Gv$. Note that \begin {eqnarray*}
        z^b
& =_G & v^i \\
& =_G & (u^i)^g \\
& =_G & (u_C^i)^{(u_L)^{-1}g} \\
& =_G & z^{a^{-1}(u_L)^{-1}g}
\end{eqnarray*} so that $a^{-1}(u_L)^{-1}gb^{-1} \in C_G(z)$, and so is equal in $G$ to $y^ny_1h$ where $n$ is some integer, $h$ is a word of length at most $2\delta$ and $y_1$ is a prefix of $y$ that depends only on $h$. Therefore $g=_Gu_Lay^ny_1hb$.

This fact is used in the following algorithm which returns a word $p$ of length $O(|u|)$, a short-lex straight word $y$ of length $O(|u|)$ and a set $S$ of at most $V$ words each of length $O(|u| + |v|)$ such that if $g^{-1}ug =_Gv$ then $g=_Gpy^ns$ for some $n \in \mathbb{Z}$ and some $s\in S$.

\begin{algorithm}
\label{algorithm:getconjugationCandidatesEH}
Find a ``nice'' set of candidates for conjugating elements.
\begin{algorithmic}[1]
\Function{GetConjugationCandidatesEH}{$u, v$}
\Statex \textbf{Input:} Two $X$-words $u$ and $v$ which label geodesics in $\Gamma$ and have $|u_C|_G > 2L$ and $|v_C|_C > 2L$
\Statex \textbf{Output:} An $X$-word $p$, a short-lex straight word $y$ and a set $S$ with $(u^p)^i = y^j$ for some $i, j \in \mathbb{Z}$ and such that $\slex(w) \in \{ \slex(py^ns) : n \in \mathbb{Z}, s \in S \}$ whenever $u^w =_G v$.
\State $a, i \gets$ \Call{FindSLSPower}{$\slex(u_C)$}
\State $z \gets \pi(a^{-1}(u_C)^ia)$
\State $b \gets$ \Call{TestConjugacySLSLong}{$z, \pi((v_C)^i)$}
\If{$b$ is null}
	\State \textbf{return} $1,1,\{\}$
\EndIf
\State $y, S \gets$ \Call{FindSLSCentraliserSuperset}{$z$}
\State \textbf{return} $u_La,y,\{sb(v_L)^{-1}:s\in S \}$
\EndFunction
\end{algorithmic}
\end{algorithm}

It is at this point that we break from the method in \cite{epstein2006linearity}.

\subsection{Finding Long Powers of Infinite Order Elements}

In this section, we will show that given an $X$-word $w$ which represents an infinite order element of $G$, we can find a word $w'$ which is equal in $G$ to a conjugate of a power of $w$, for which $\slex(w'_C)$ is longer than $2L$. Thus given two infinite order words $u$ and $v$ we may find conjugates of powers of $u$ and $v$ to which we may apply \textsc{GetConjugationCandidatesEH}.

We begin by recalling some well-known properties of word-hyperbolic groups and hyperbolic spaces; these results are taken from \cite{alonso1990notes} although similar results appear in many other expositions of the subject area. The exact values in the statements are taken from the proofs in \cite{alonso1990notes} (the statements generally simply state that the constants in question exist). The first is Proposition 3.2 of \cite{alonso1990notes}. 

\begin{proposition}
\label{prop:inf_order_qgeo}
For any $X$-word $w$ which is of infinite order in $G$ and labels a geodesic in $\Gamma$, the two way infinite path $\widetilde{w^\infty}$ in $\Gamma$ is a $(\lambda, \epsilon)$-quasigeodesic, where $\lambda = |w|V$ and $\epsilon = 2|w|^2V^2 + 2|w|V$.
\end{proposition}

The next is Theorem 2.19 of \cite{alonso1990notes}.

\begin{proposition}
\label{prop:hyperbolic_divergence}
The function $e:\mathbb{R}_{\ge0} \to \mathbb{R}_{\ge0}$ with $e(0) = \delta$ and $e(l) = 2^{\frac{l}{\delta} - 2}$ for $l > 0$ is a divergence function for any $\delta$-hyperbolic space (ie. given geodesics $\gamma = \path{x}{y}$ and $\gamma' = \path{x}{z}$, if $r, R \in \mathbb{N}$ with $r + R < \min\{|\gamma|, |\gamma'|\}$ and $d(\gamma(R), \gamma'(R)) > e(0)$, if $\alpha$ is a path from $\gamma(R + r)$ to $\gamma'(R + r)$ lying outside the ball of radius $R + r$ around $x$, then $|\alpha| > e(r)$).
\end{proposition}

Finally, Proposition 3.3 of \cite{alonso1990notes}.

\begin{proposition}
\label{prop:qgeo_close_to_geo}
In a hyperbolic space with divergence function $e$, given constants $\lambda \ge 1$ and $\epsilon \ge 0$, there exists $D = D(\lambda, \epsilon, e)$ such that if $\alpha$ is an $(\lambda,\epsilon)$-quasigeodesic and $\gamma$ is a geodesic starting and ending at the same points as $\alpha$ then every point on $\gamma$ is within a distance $D$ of a point on $\alpha$. It suffices to take $D$ satisfying $e(\frac{D - e(0)}{2}) \ge 4D + 6\lambda D + \epsilon$.
\end{proposition}

We now use these results to find some power $n$ of an infinite order word $w$ such that $|(w^n)_C|_G$ is large. Recall $M$ from Section \ref{section:conj_const}.

\begin{proposition}
\label{prop:make_long}
Let $w$ be any $X$-word which is of infinite order in $G$, labels a geodesic in $\Gamma$ and has $|w| \le 2L$. Then $|(\slex(w^M))_C|_G > 2L$.
\end{proposition}

\begin{proof}
By Proposition \ref{prop:hyperbolic_divergence}, the function $e(0)=\delta$, $e(l)=2^{\frac{l}{\delta}-2}$ for $l > 0$ is a divergence function for $\Gamma$. By Proposition \ref{prop:inf_order_qgeo} we see that $\widetilde{w^\infty}$ is a $(\lambda, \epsilon)$-quasigeodesic $\gamma$, where $\lambda = |w|V$ and $\epsilon = 2|w|^2V^2 + 2|w|V$. The first aim is to find a suitable $D$ for Proposition \ref{prop:qgeo_close_to_geo}.

Let $D := 10^4\delta^2LV$. Then \begin{eqnarray*}
        e\left(\frac{D - \delta}{2}\right)
&  =  & 2^{\frac{D}{2\delta} - \frac{5}{2}} \\
&  =  & \frac{1}{4\sqrt2} \left(e^{\frac{D}{2\delta}}\right)^{\log 2},
\end{eqnarray*} but $e^x > \frac{x^3}{3!} > \left(\frac{x}{3}\right)^3$ for any $x > 1$, so noting that $3\log 2 \ge 2$, we have \begin{eqnarray*}
        e\left(\frac{D - \delta}{2}\right)
& \ge & \frac{1}{4\sqrt2} \left(\frac{D}{3\times2\delta}\right)^{3\log 2} \\
& \ge & \frac{1}{4\sqrt2} \left(\frac{D}{6\delta}\right)^2
\end{eqnarray*} and by substituting in $D$ \begin{eqnarray*}
        e\left(\frac{D - \delta}{2}\right)
& \ge & \frac{1}{4\sqrt2} \left(\frac{10^4\delta LV}{6}\right)^2 \\
&  =  & \frac{10^8}{36\times 4\sqrt2} \delta^2L^2V^2 \\
& \ge & 480000\delta^2L^2V^2.
\end{eqnarray*} Recall that $|w| \le 2L$, $\lambda = |w|V$ and $\epsilon = 2|w|^2V^2+2|w|V$, so \begin{eqnarray*}
 &&     e\left(\frac{D - \delta}{2}\right) \\
& \ge & (12+12+12+12)10^4\delta^2 L^2 V^2 \\
&  =  & 12\times10^4\delta^2 L^2 V^2 + 12\times10^4\delta^2 L^2 V^2 + 12\times10^4\delta^2 L^2 V^2 + 12\times10^4\delta^2 L^2 V^2 \\
& \ge & 4\times10^4\delta^2 LV + 12LV \times10^4 \delta^2 LV + 8L^2 V^2 + 4LV \\
& \ge & 4\times10^4\delta^2 LV + 6|w|V \times10^4\delta^2LV + 2|w|^2V^2 + 2|w|V \\
&  =  & 4D + 6\lambda D + \epsilon.
\end{eqnarray*}

Thus picking a geodesic path $\alpha := \path{\vertex{e}}{\vertex{e} \cdot w^M}$, by Proposition \ref{prop:qgeo_close_to_geo} each point on $\alpha$ lies within $D$ of some point on $\gamma = \widetilde{w^\infty}$.

Let $\vertex{x} := \vertex{e}$, $\vertex{y} := \vertex{x} \cdot w^M$ and $\vertex{z} := \vertex{y} \cdot w^M$, recalling that $M =10^3\delta^2 V^3L^2$. Let $\path{\vertex{x}}{\vertex{y}}$ and $\path{\vertex{y}}{\vertex{z}}$ be labelled $u := \slex(w^M)$ and let $\vertex{p} := \vertex{x} \cdot u_L$ and $\vertex{q} := \vertex{y} \cdot u_L$. See Figure \ref{figure:make_long}.

\begin{figure}
\begin{center}
\input make_long.pstex_t
\caption{Cutting across a long quasigeodesic}
\label{figure:make_long}
\end{center}
\end{figure}

There exists a point $\vertex{p'} := \vertex{x} \cdot w^M(i)$ on $\gamma$ where $i \le M|w|$ which is within $D$ of $\vertex{p}$, and letting $\vertex{q'} := \vertex{y} \cdot w^M(i)$ we find that $d(\vertex{q'}, \vertex{q}) \le D$ also. Now \begin{eqnarray*}
        |u_C|
&  =  & d(\vertex{p}, \vertex{q}) \\
& \ge & d(\vertex{p'},\vertex{q'}) - 2D \\
& \ge & \frac{d_\gamma(\vertex{p'}, \vertex{q'})}{\lambda} - \epsilon - 2D \\
&  =  & \frac{|w|M}{\lambda} - \epsilon - 2D.
\end{eqnarray*} Substitute in the values of $M$, $\lambda$ and $\epsilon$ to find \begin{eqnarray*}
        |u_C|
& \ge & \frac{|w|LV^2D}{20|w|V} - 2|w|^2V^2 - 2|w|V - 2D \\
&  =  & \frac{LVD}{20} - 2|w|^2V^2 - 2|w|V - 2D,
\end{eqnarray*} and by recalling that $D = 10^4\delta^2LV$ and $|w| \le 2L$ we see that \begin{eqnarray*}
        |u_C|
& \ge & 500\delta^2L^2V^2 - 8L^2V^2 - 4LV - 20000\delta^2LV \\
&  =  & LV(500 \delta^2LV - 8LV - 4 - 20000\delta^2).
\end{eqnarray*} Now, $V$ is the number of vertices in the $2\delta$-ball in $\Gamma$, so $V \ge 2\delta + 1 \ge 5$. Also, $L = 34\delta +2 \ge 36$ so $VL \ge 180$ and \begin{eqnarray*}
        |u_C|
& \ge & LV((8 + 6 + 486)\delta^2LV - 8LV - 4 - 20000\delta^2) \\
&  =  & LV(8\delta^2LV - 8LV + 6\delta^2LV - 4 + 486\delta^2LV - 20000 \delta^2) \\
&  >  & LV((8LV - 8LV) + (6 - 4) + (87480 \delta^2 - 20000 \delta ^2)) \\
&  >  & 2L
\end{eqnarray*} as required.
\end{proof}

\begin{remark}
The value of $M$ used above is of course by no means optimal. If nothing else, The powers of $L$, $V$ and $\delta$ used in $D$ can be reduced at the cost of a potentially larger constant by increasing the degree in the polynomial bound for $e^n$, and in any case for a particular group and presentation, it is likely that a much lower bound can be obtained by solving the problem algorithmically. However, the above bound illustrates that there is a definite computable value.
\end{remark}

By Proposition \ref{prop:inf_order_qgeo}, short infinite order words can be raised to large powers to get an appropriate input for \textsc{GetConjugationCandidatesEH}. We also wish to confirm that words which are already appropriate inputs stay appropriate when raised to the power of $M$.

\begin{proposition}
\label{prop:long_stays_long}
Suppose that $w$ is a word labelling a geodesic in $\Gamma$ and $|w_C|_G > 2L$. If $n \ge L$ then $|(\slex((w_C)^n))_C| > 2L$. In particular, $|(\slex((w_C)^M))_C| > 2L$.
\end{proposition}

\begin{proof}
Let $u := \slex((w_C)^n)$, and let $\gamma$ be the path starting at $\vertex{x} := \vertex{e}$ labelled by $(\slex(w_C))^{2n}$. Let $\vertex{y} := \vertex{x} \cdot u$ and let $\vertex{z} := \vertex{y} \cdot u$. Now let $\vertex{p} := \vertex{x} \cdot u_L$ and let $\vertex{q} := \vertex{y} \cdot u_L$ so that $p$ and $q$ are mid-vertices on the short-lex geodesic paths $\path{\vertex{x}}{\vertex{y}}$ and $\path{\vertex{y}}{\vertex{z}}$ respectively and $u_C$ labels a path from $\vertex{p}$ to $\vertex{q}$. Figure \ref{figure:make_long} provides a suitable diagram once again.

Note that $\gamma$ is an $L$-local $(1, 2\delta)$-quasigeodesic by Proposition \ref{prop:short_conj}, so Proposition \ref{prop:nice_qgeo} applies. Then there is a vertex $\vertex{p'} = \vertex{x} \cdot (w_C)^n(i)$ for some $i$ with $d(\vertex{p'}, \vertex{p}) \le 4\delta$. Let $\vertex{q'} := \vertex{y} \cdot (w_C)^n(i)$ so that $d(\vertex{q'}, \vertex{q}) \le 4\delta$ also. Since $d_\gamma(\vertex{p'}, \vertex{q'}) = n|w_C|_G \ge L$, Proposition \ref{prop:nice_qgeo} also gives a lower bound on $d(\vertex{p'}, \vertex{q'})$ as follows: \begin{eqnarray*}
        d(\vertex{p}, \vertex{q})
& =^{8\delta} & d(\vertex{p'},\vertex{q'}) \\
& \ge & \frac{7}{17}d_\gamma(\vertex{p'}, \vertex{q'}) \\
&  =  & \frac{7}{17}n|w_C|_G \\
&  >  & \frac{14}{17}Ln.
\end{eqnarray*}

But then \begin{eqnarray*}
        |(\slex((w_C)^n))_C|
&  =  & |u_C| \\
&  =  & d(\vertex{p}, \vertex{q}) \\
& \ge & \frac{14}{17}Ln - 8\delta \\
& \ge & \frac{14}{17}L \times 34\delta - 8\delta \\
& \ge & 2L
\end{eqnarray*} as required.
\end{proof}

By the above two results $|(\slex((u_C)^M))_C|_G > 2L$ for any infinite order word $u$ which labels a geodesic in $\Gamma$. In particular, if $u$ and $v$ label geodesics in $\Gamma$ and are of infinite order in $G$ then \textsc{GetConjugationCandidatesEH} can be applied to $\slex((u_C)^M)$ and $\slex((v_C)^M)$ by executing \textsc{GetConjugationCandidates}$(u, v)$ as defined in the following pseudocode:

\begin{algorithm}
\label{algorithm:getconjugationcandidates}
Find candidates for conjugation elements.
\begin{algorithmic}[1]
\Function{GetConjugationCandidates}{$u, v$}
\Statex \textbf{Input:} Two $X$-words $u$ and $v$ which are of infinite order in $G$.
\Statex \textbf{Output:} An $X$-word $p$, a short-lex straight word $y$ and a set $S$ such that $w$ is equal in $G$ to an element of $\{ \slex(py^ns) : n \in \mathbb{Z}, s \in S \}$ whenever $u^w =_G v$.
\State $u' \gets \slex(u)$
\State $v' \gets \slex(v)$
\State $c \gets \slex((u'_C)^M)$
\State $d \gets \slex((v'_C)^M)$
\State $g, y, S \gets$ \Call{GetConjugationCandidatesEH}{$c, d$}
\State \textbf{return} $u_Lg, y, \{sv_L^{-1}:s\in S \}$
\EndFunction
\end{algorithmic}
\end{algorithm}

For convience in later chapters, we at this point summarise the above results.

\begin{corollary}
\label{cor:find_sls_and_conj_form}

Suppose $u$ is an $X$-word which is of infinite order in $G$.
\begin{enumerate}[(1) ]
\item There exists an integer $k \le MQ^2$ and an $X$-word $w$ whose length is at most $M|u| + 4\delta$ such that $z := \slex((u^k)^w)$ is short-lex straight. Both $k$ and $w$ can be found in time $O(|w|)$.

\item If $v$ is another $X$-word then any element $g \in G$ with $u^g =_G v$ has $g =_G u^ih$ where $i$ is an integer and $h$ is an $X$-word of length at most $4MQ^2(|u|+|v|)+16\delta$.
\end{enumerate}
\end{corollary}

\begin{proof}
Let $u_1 := \slex(u)$, let $u_2 := \slex(((u_1)_C)^M)$ and let $u_3 := \slex((u_2)_C)$. By Proposition \ref{prop:make_long} or Proposition \ref{prop:long_stays_long} we know that $|u_3| > 2L$.

By Proposition \ref{prop:short_conj}, all positive powers of $u_3$ label $L$-local $(1, 2\delta)$-quasigeodesics and then by Proposition \ref{prop:long_conj_slex} we know that $u_4 := \slex(k^{-1}u_3^lk)$ is short-lex straight for some $l \le Q^2$ and some $X$-word $k$ of length at most $4\delta$. Notice that $u_4 =_G (u^{lM})^{w_u}$ where $w_u := k(u_2)_L(u_1)_L$ so that $|w_u| \le \frac{(M+1)|u|}{2}+4\delta$. This proves the first part.

We now need to prove the second part, so suppose some such $g$ has been picked.

Suppose $u_4 = u_5^l$ for some integer $l$ (which we assume is maximal for this property). By Proposition \ref{prop:find_centraliser_sls} there is a set $S$ containing elements of the form $yp$, where $p$ is an $X$-word of length at most $2\delta$ and $y$ is a prefix of $u_5$ which depends only on $p$, such that every element of the centraliser of $u_4$ is of the form $u_5^nyp$. This is equal to $u_4^au_5^byp$ for some integers $a$ and $b$ with $0 \le b < l$ and some $yp \in S$. Notice that $|u_5^byp| \le |u_4| + 2\delta$.

Construct $v_1$, $v_2$ and $v_3$ in the same way as $u_1$ through $u_3$, setting $w_v := (v_2)_L(v_1)_L$. Since $u$ and $v$ are conjugate, so are $u_4$ and $v_3^l$, so by Proposition \ref{prop:test_conj_sls} there is an $X$-word $q$ with $|q| \le 6\delta$ such that $(v_3^l)^q$ is a cyclic conjugate of $u_4$. Now any element $G$ conjugating $u_4$ to $v_3^l$ is of the form $u_4^ac$ where $c =_G u_5^bypu_4(m)q^{-1}$ for integers $b < l$, $a$ and $m$ and some $yp \in S$. Note that $|c|_G \le 2|u_4| + 8\delta$.

Now, $g$ must be equal to $w_uu_4^acw_v^{-1}$ where $c$ is some element as described above. Using $u_4 =_G (u^{lM})^{w_u}$, we see that $g =_G u^ih$ where $i = lMa$ and $h =_G w_ucw_v^{-1}$ is a short-lex reduced word. Using the bounds above, \begin{eqnarray*}
        |h|_G
& \le & |w_u|_G + |c|_G + |w_v^{-1}|_G \\
& \le & \frac{(M+1)|u|}{2} + 4\delta + 2MQ^2|u| + 8\delta + \frac{(M+1)|v|}{2} + 4\delta \\
& \le & 4MQ^2(|u|+|v|)+16\delta.
\end{eqnarray*}
\end{proof}

We also have a method of checking whether an element is of finite order.

\begin{corollary}
\label{corollary:test_fin_ord}
There is an algorithm \textsc{TestInfOrder} which tests whether or not an input word $w$ is of infinite order in $G$ and runs in time $O(|w|)$.
\end{corollary}

\begin{proof}
First replace $w$ with $\slex(w)$. Now if $|(\slex(w_C^M))_C|_G > 2L$ then $w_C^M$ and therefore $w$ is of infinite order by Proposition \ref{prop:short_conj} and we return true. If not, $w$ cannot be of infinite order by Proposition \ref{prop:make_long} or Proposition \ref{prop:long_stays_long} and we return false.

Since $|w_C^M| \le M|w|$, this test takes time at worst $O(|w|)$.
\end{proof}

Using \textsc{GetConjugationCandidates} we will later reduce the conjugacy problem for lists to testing, for input words $u$ and $v$, which powers of a short-lex straight word conjugate $u$ to $v$. This testing process is the concern of the next two subsections.

\subsection{Conjugating by a Power of a Short-lex Straight Word}

In this subsection, we suppose that we are given an $X$-word $g$ which labels a geodesic in $\Gamma$ and a short-lex straight word $y$. We wish to find a useful description of the conjugates $g^{y^n}$.

We begin by proving a result which is true of general vertex-hyperbolic graphs.

\begin{figure}
\begin{center}
\input thin_quad.pstex_t
\caption{A geodesic quadrilateral}
\label{figure:thin_quad}
\end{center}
\end{figure}

\begin{figure}
\begin{center}
\input thin_quad_zoom.pstex_t
\caption{A thin part of a quadrilateral}
\label{figure:thin_quad_zoom}
\end{center}
\end{figure}

\begin{figure}
\begin{center}
\input quad_end.pstex_t
\caption{Points after the meeting points are distant}
\label{figure:quad_end}
\end{center}
\end{figure}

\begin{lemma}
\label{lemma:trapezium}
Let $\vertex{a}$, $\vertex{b}$, $\vertex{c}$ and $\vertex{d}$ be vertices in $\Gamma$ such that $l:= d(\vertex{a}, \vertex{b}) = d(\vertex{c}, \vertex{d})$. Let $\alpha_1 : [0, l] \to \Gamma$ be a geodesic path from $\vertex{a}$ to $\vertex{b}$ and let $\alpha_2 : [0, l] \to \Gamma$ be a geodesic path from $\vertex{d}$ to $\vertex{c}$ as in Figure \ref{figure:thin_quad}.

Define the constants \begin{eqnarray*}
K & := & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{d})  \\
N_1 & := & (\vertex{a}, \vertex{b})_{\vertex{d}} \\ 
N_2 & := & (\vertex{b}, \vertex{c})_{\vertex{d}}.
\end{eqnarray*}

For $i \in \mathbb{N}$:
\begin{enumerate}
\item If $N_1 \le i \le N_2$ then \[ d(\alpha_2(i), \alpha_1(i+K)) \le 2\delta. \]
\item If $N_1 + K \le i \le N_2 + K$ then \[ d(\alpha_2(i-K), \alpha_1(i)) \le 2\delta. \]
\item If $l \ge i \ge \max\{N_1 + K, N_2, N_2 +K\}$ then \[ d(\alpha_1(i), \alpha_2(i)) =^{3\delta} d(\vertex{b}, \vertex{c}) - 2 (l - i). \]
\end{enumerate}

If $l \ge i \ge d(\vertex{a}, \vertex{d})$ then at least one of these three cases applies.
\end{lemma}

\begin{proof}
Pick a geodesic $\gamma := \path{\vertex{b}}{\vertex{d}}$ so that we have two geodesic triangles, one with corners $\vertex{a}$, $\vertex{b}$, and $\vertex{d}$; the other with corners $\vertex{b}$, $\vertex{d}$ and $\vertex{c}$; both sharing a common side $v$. Also, let $\vertex{p}:= \alpha_2(i)$ and $\vertex{q}:= \alpha_1(i)$.

Suppose that $N_1 \le i \le N_2$. Note that $\vertex{p}$ corresponds to some point $\vertex{q''}$ on $\gamma$ which in turn corresponds to some point $\vertex{q'}$ on $\alpha_1$ as illustrated in Figure \ref{figure:thin_quad_zoom}. Observe that \begin{eqnarray*}
      d(\vertex{a}, \vertex{q'})
& = & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{q'}) \\
& = & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{q''}) \\
& = & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{d}) + d(\vertex{d}, \vertex{q''}) \\
& = & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{d}) + d(\vertex{d}, \vertex{p}) \\
& = & K + d(\vertex{d}, \vertex{p}) \\
& = & K + i \\
& = & K + d(\vertex{a}, \vertex{q}),
\end{eqnarray*} so $\vertex{q'} = \alpha_1(i+K)$, and a geodesic path between $\vertex{p}$ and $\vertex{q'}$ has length at most $2\delta$ as required in the first case. 

For the second case, just use the first case with $i-K$ in place of $i$.

For the final case, note that \begin{align}
    N_1 + K 
& = \frac{d(\vertex{d}, \vertex{a}) + d(\vertex{d}, \vertex{b}) - d(\vertex{a}, \vertex{b})}{2} + d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{d}) \notag\\
& = \frac{d(\vertex{a}, \vertex{d}) + d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{d})}{2} \notag\\
& = (\vertex{b}, \vertex{d})_{\vertex{a}}, \tag{*}
\end{align} the distance from $\vertex{a}$ to the meeting point on $\alpha_1$.

Now suppose that $i \ge \max\{N_1 + K, N_2, N_2 + K\}$. Let $\beta$ be a geodesic from $\vertex{b}$ to $\vertex{c}$. Then $d(\vertex{d}, \vertex{p}) \ge N_2$, so $\vertex{p}$ corresponds to a vertex $\vertex{p'}$ on $\beta$. Similarly, $d(\vertex{a},\vertex{q}) \ge N_1+K=(\vertex{b},\vertex{d})_{\vertex{a}}$ by (*) so $\vertex{q}$ corresponds to a vertex $\vertex{q''}$ on $\gamma$ with $d(\vertex{d}, \vertex{q''}) = i - K \ge N_2$, which in turn corresponds to a vertex $\vertex{q'}$ on $\beta$. This is illustrated in Figure \ref{figure:quad_end}.

Now, \begin{eqnarray*}
      d(\vertex{p'}, \vertex{q'})
& = & d(\vertex{b}, \vertex{p'}) - d(\vertex{b}, \vertex{q'}) \\
& = & d(\vertex{b}, \vertex{c}) - d(\vertex{c}, \vertex{p}) - d(\vertex{b}, \vertex{q'}) \\
& = & d(\vertex{b}, \vertex{c}) - d(\vertex{b}, \vertex{q}) - d(\vertex{b}, \vertex{q}) \\
& = & d(\vertex{b}, \vertex{c}) - 2d(\vertex{b}, \vertex{q}) \\
& = & d(\vertex{b}, \vertex{c}) - 2(d(\vertex{a}, \vertex{b}) - i),
\end{eqnarray*} so $d(\alpha_1(i), \alpha_2(i)) =^{3\delta} d(\vertex{b}, \vertex{c}) - 2(l-i)$ as required.

For the last statement, assume that $i \ge d(\vertex{a}, \vertex{d})$ and that the first two cases do not apply. Since $i \ge d(\vertex{a}, \vertex{d}) \ge (\vertex{a}, \vertex{b})_{\vertex{d}} = N_1$, we have $i > N_2$ or we are in Case $1$. Similarly, (*) gives us $i \ge d(\vertex{a}, \vertex{d}) \ge (\vertex{b}, \vertex{d})_{\vertex{a}} = N_1 + K$, so $i > N_2 + K$ or we are in Case 2. Therefore $i \ge \max\{N_1+K, N_2, N_2 + K\}$ and we are in Case 3; in particular $l \ge i \ge d(\vertex{a}, \vertex{d})$ implies that one of the three cases applies.
\end{proof}

This lemma allows some results about conjugates to be shown. In particular, simply building the construction above in the group for some large power of a conjugating word gives computable estimates on the lengths of all smaller power conjugates, and a constraint on the form of those conjugates which are ``short.'' Recall that $\canc{u}{v} = (\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}}$ for $X$-words $u$ and $v$.

\begin{lemma}
\label{lemma:long_rectangle}
Suppose that $y$ is a straight word and that $g$ labels a geodesic in $\Gamma$. Let $n \in \mathbb{N}$, let $K := |y|n - |gy^n|_G$ and let $0 \le j \le n$.

\begin{enumerate}
\item If $\canc{g}{gy^n} \le |y|j \le \canc{gy^n}{y^n}$ then $g^{y^j} =_G h(y^\infty(K))^{-1}$ for some word $h$ with $|h| \le 2\delta$. 
\item If $\canc{g}{gy^n} + K \le |y|j \le \canc{gy^n}{y^n} + K$ then $g^{y^j} =_G y^\infty(-K)h$ for some word $h$ with $|h| \le 2\delta$. 
\item If $|y|n \ge |y|j \ge \max \{\canc{gy^n}{y^n}, \canc{g}{gy^n} + K, \canc{gy^n}{y^n} + K\}$ then $|g^{y^j}|_G =^{3\delta} |g^{y^n}|_G - 2|y|(n -j)$.
\end{enumerate}

If $|y|j \ge |g|$ then at least one of the three cases applies.
\end{lemma}

\begin{proof}
Let $\vertex{c} := \vertex{a} \cdot g$, $\vertex{d} := \vertex{c} \cdot y^n$, $\vertex{e} := \vertex{a} \cdot y^n$ and $\vertex{f} := \vertex{a}$, and note that the three cases of Lemma \ref{lemma:trapezium} (with $i = |y| j$) correspond exactly to the three cases here.

In the first case, we know that $d(\vertex{f} \cdot y^n(i), \vertex{c} \cdot y^n(i + K)) \le 2\delta$ so there is a word $h$ of length at most $2\delta$ with $\vertex{f} \cdot y^n(i)h = \vertex{c} \cdot y^n(i + K)$. By definition, $y^n(i) = y^j$ and $y^n(i+K) =_F y^jy^\infty(K)$. Now, since $g^{y^j}$ labels a path from $\vertex{c} \cdot y^n(i)$ to $\vertex{f} \cdot y^n(i)$, we see that $g^{y^j} =_G h(y^\infty(K))^{-1}$ and we are done.

For the second case, $y^n(i - K) =_G y^jy^\infty(-K)$ so by a similar argument $g^{y^j} =_F y^\infty (-K) h$ for some word $h$ of length at most $2\delta$ as required.

For the third case, since $d(\vertex{d}, \vertex{e}) = |g^{y^j}|_G$ and $d(\vertex{c}, \vertex{f}) = |y|n$, the third part of this lemma is proved by the third part of Lemma \ref{lemma:trapezium}.

Noting that $|g| = d(\vertex{c}, \vertex{f})$, the last statement again corresponds to the last statement of Lemma \ref{lemma:trapezium}.
\end{proof}

Recall that we are trying to find a useful description of the conjugates $g^{y^n}$. We will start by determining whether a power of $y$ centralises $u$, and thus establish whether or not the set of conjugates is infinite.

Since the conjugates in the first range in Lemma \ref{lemma:long_rectangle} are parametrised by a word of length at most $2\delta$, if a large number of $j$ in this range can be found, some conjugate will repeat and some power of $y$ will indeed be in the centraliser of $g$. The next lemma states this more precisely.

\begin{lemma}
\label{lemma:thinness_extends}
Suppose that $y$ is a straight word, that $g$ labels a geodesic in $\Gamma$, and that $N \in \mathbb{Z}$. If $N - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}} > V$ then there exist constants $d, e$ with $|g| - 2\delta \le d \le |g|$ and $1 \le e \le V$ such that \[ |g^{y^i}|_G =^{2\delta} d \] for all $i \in \mathbb{Z}$, and \[ y^e \in C_G(g). \]
\end{lemma}

\begin{proof}
The number of conjugates $g^{y^j}$ in the first case of Lemma \ref{lemma:long_rectangle} is at least \begin{eqnarray*}
&   & \ceil{\frac{\canc{gy^N}{y^N} - \canc{g}{gy^N}}{|y|}} \\
& = & \ceil{\frac{|gy^N|_G + |y|N - |g^{y^N}|_G}{2|y|} - \frac{|g| + |gy^N|_G - |y|N}{2|y|}} \\
& = & \ceil{\frac{2|y|N - |g^{y^N}|_G - |g|}{2|y|}} \\
& = &  N - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}}.
\end{eqnarray*}

Let $p:=\frac{\canc{gy^N}{y^N}}{|y|}$ and let $K := |y|N - |gy^N|_G$ as in Lemma \ref{lemma:long_rectangle}. Since the conjugates $g^{y^n}$ for $p \le n \le p + K$ are all of the form $h(y^\infty(K))^{-1}$ for words $h \in B_{2\delta}(1)$, if there are more than $V$ of them there must be at least one duplicate, say, $g^{y^i} =_G g^{y^j}$ for some integers $i$ and $j$ with $p + V + 1 > j > i \ge p$. Let $e:=j-i\le V$, so that $g=_G g^{y^iy^{-j}}=_G g^{y^e}$, and $y^e$ is in the centraliser of $g$ as required.

Since all conjugates $g^{y^k}$ can now be written in the form $g^{y^l}$ for some $p \le l \le p + e \le \canc{gy^N}{y^N}$, Lemma \ref{lemma:long_rectangle} implies that they are all of the form $h(y^\infty(K))^{-1}$, so in particular $|g^{y^i}|_G =^{2\delta} |K|$. Since $g = g^{y^0}$ we have $|g| \le |K| + 2\delta$, and finally $|K| = \big||y|N - |gy^N|_G\big| \le |g|$ so we may take $d := |K|$ and we are done.
\end{proof}

The following lemma illustrates that we can test whether some power of $y$ is in the centraliser of $g$ by finding the length of a single group element. 

\begin{lemma}
\label{lemma:test_centraliser}
Suppose that $y$ is a straight word and that $g$ labels a geodesic in $\Gamma$. If $N > V + \floor{\frac{|g| + \delta}{|y|}}$ and $|g^{y^N}|_G \le |g| + 2\delta$ then $N - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}} > V$.

In particular $|g^{y^N}|_G \le |g| + 2\delta$ if and only if some power of $y$ is in the centraliser of $g$.
\end{lemma}

\begin{proof}
The first part is just straightforward evaluation: \begin{eqnarray*}
        N - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}}
&  >  & V + \floor{\frac{|g| + \delta}{|y|}} - \floor{\frac{|g| + |g^{y^N}|_G}{2|y|}} \\
& \ge & V + \floor{\frac{|g| + \delta}{|y|}} - \floor{\frac{2|g| + 2\delta}{2|y|}} \\
&  =  & V.
\end{eqnarray*}

For the second part, note that the first part covers the only if case by Lemma \ref{lemma:thinness_extends}, so it remains to prove the if case. Suppose that $y^n$ is in the centraliser of $g$ for some $n > 0$. Let $N_1:=n(V + |g| + 1)$. Clearly $y^{N_1}$ centralises $g$, so in particular $|g^{y^{N_1}}|_G = |g| \le |g| + 2 \delta$. Also \begin{eqnarray*}
        N_1 - \floor{\frac{|g|+|g^{y^{N_1}}|_G}{2|y|}}
&  =  & N_1 - \floor{\frac{2|g|}{2|y|}} \\
& \ge & nV + |g|n + n - |g| \\
&  >  & V,
\end{eqnarray*} so by Lemma \ref{lemma:thinness_extends} we have $|g^{y^N}|_G \le |g| + 2\delta$ as required.
\end{proof}

Since we can now detect when some power of $y$ centralises $g$, and since we know the behaviour of conjugates $g^{y^k}$ in this case, it remains to analyse the behaviour of the conjugates when no power of $y$ centralises $g$. We now show that if no power of $y$ centralises $g$ then the length of conjugates $g^{y^n}$ for large $n$ is very predictable.

\begin{lemma}
\label{lemma:unbd_conj_long}
Suppose that $y$ is a straight word and that $g$ labels a geodesic in $\Gamma$. If $N > \frac{|g|}{|y|}$ and $|g^{y^N}|_G > |g| + 2\delta$ then $|g^{y^n}|_G =^{3\delta} |g^{y^N}|_G + 2|y|(n - N)$ for $n \in \mathbb{N}$ satisfying $n \ge N$.
\end{lemma}

\begin{proof}
Apply Lemma \ref{lemma:long_rectangle} with $j = N$. Since $N|y| > |g|$, at least one of the three cases applies. Because $|g^{y^N}|_G > |g| + 2\delta \ge K + 2\delta$, the first two cases cannot apply, so the third case must apply and $|g^{y^N}|_G =^{3\delta} |g^{y^n}|_G - 2|y|(n-N)$, which can easily be rearranged to the required equation.
\end{proof}

The next result is simply a summary of the above results.

\begin{proposition}
\label{proposition:large_power_conjugate}
Let $g \in G$ and let $y$ be some straight word. Let $N > V + \floor{\frac{|g|_G + \delta}{|y|}}$. One of the following is true:

\begin{enumerate}
\item \label{case:lpc:central} $|g^{y^N}|_G \le |g|_G + 2\delta$ and there is some $0 < i \le V$ such that $y^i \in C_G(g)$.
\item \label{case:lpc:noncentral} $|g^{y^N}|_G > |g|_G + 2\delta$ and $|g^{y^n}|_G =^{3\delta}|g^{y^N}|_G + 2|y|(n-N)$ for any $n \ge N$. 
\end{enumerate}
\end{proposition}

In the next subsection, we use this information to solve the conjugacy problem in the special case where the conjugating element is required to be a power of a short-lex straight word.

\subsection{Testing Conjugacy by Short-lex Straight Words}

In this subsection, we suppose we are given $X$-words $u$ and $v$ and a short-lex straight word $y$, and wish to test whether $u^{y^n} =_G v$ for some integer $n$.

\begin{proposition}
\label{prop:test_conj_vs_sls}
Let $u, v \in G$ and let $y$ be some straight word. In time $O(|u|+|v|+|y|)$ it is possible to find $r, t \in \mathbb{Z} \cup \{\infty\}$ such that either 

\begin{enumerate}
\item \label{case:pl:central}  $0\le r<t\le V$ and $u^{y^j} =_G v$ if and only if $j \equiv r \mod t$,
\item \label{case:pl:conj} $r \in \mathbb{Z}$, $t=\infty$ and $r$ is the unique integer such that $u^{y^r} =_G v$, or
\item \label{case:pl:not_conj} $r=\infty$, $t=\infty$ and there is no integer $n$ such that $u^{y^n} =_G v$.
\end{enumerate}
\end{proposition}

\begin{proof} 
First, let $N:= V + 1 + \floor{\frac{|u|_G + |v|_G + \delta}{|y|}}$ and let $l_g:=|g^{y^N}|_G$, where $g$ is either $u$ or $v$.

If $l_u \le |u|_G + 2\delta$ but $l_v > |v|_G + 2\delta$ then by Proposition \ref{proposition:large_power_conjugate}, the conjugates $u^{y^n}$ have bounded length whereas the conjugates $v^{y^n}$ do not. Thus there can be no $n \in \mathbb{Z}$ such that $u^{y^n} =_G v$. The same is true if these two inequalities are reversed, so if we find that $u$ and $v$ lie in different cases of Proposition \ref{proposition:large_power_conjugate} then we may set $r = t = \infty$ and stop.

Otherwise, it can be assumed that both $u$ and $v$ lie in the same case of Proposition \ref{proposition:large_power_conjugate}.

Now suppose that $l_u \le |u|_G + 2\delta$. By Proposition \ref{proposition:large_power_conjugate}, some power $y^n$ for $n \le V$ centralises $a$, so in particular Case \ref{case:pl:conj} does not apply. Since $V$ is dependent only on the chosen presentation for $G$, it is possible to check for each $0 \le r' < t' \le V$ if $u^{y^{t'}} =_G u$ or $u^{y^{r'}} =_G v$ in time $O(|u|+|v|+|y|)$. If no $r'$ is found, Case 3 holds so let $r = t = \infty$, otherwise Case 1 holds so pick the lowest values found for $r'$ and $t'$ as $r$ and $t$ respectively.

Finally, suppose that $l_u > |u|_G + 2\delta$. Proposition \ref{proposition:large_power_conjugate} implies that $|u^{y^n}|_G =^{3\delta} l_u + 2|y|(n-N)$ for large $n$, so Case \ref{case:pl:central} cannot apply and no power of $y$ is in the centraliser of $u$. In fact, by Proposition  \ref{proposition:large_power_conjugate}, if $u^{y^r} =_G v$ then \begin{eqnarray*}
l_u +2|y|(n+r-N) 
& =^{3\delta} & |u^{y^{n+r}}|_G \\
& = & |v^{y^n}|_G \\
& =^{3\delta} & l_v + 2|y|(n-N)
\end{eqnarray*} for all large $n$. Rearranging, $l_v-l_u=^{6\delta}2|y|r$, so $\frac{l_v-l_u-6\delta}{2|y|} \le r \le \frac{l_v-l_u+6\delta}{2|y|}$. Because no power of $y$ centralises $u$, there can only be one $n$ such that $u^{y^n} =_G v$ and to find it, we must simply check each $r$ in this range. If some $y^r$ conjugates $u$ to $v$ then Case 2 holds so set $t=\infty$ and stop, otherwise Case 3 holds so set $r=t=\infty$. At most $6\delta+1$ checks of conjugates $u^{y^n}$ need to made to distinguish between these two cases, and each check takes time $O(|u|+|v|+|y|)$ as required. 
\end{proof}

We summarise this information in the following algorithm.

\begin{algorithm}
\label{algorithm:testconjugacybysls}
Test which powers of a short-lex straight are conjugating elements.
\begin{algorithmic}[1]
\Function{TestConjugacyBySLS}{$u, v, y$}
\Statex \textbf{Input:} Two $X$-words $u$ and $v$ and a short-lex straight $X$-word $y$
\Statex \textbf{Output:} Values $r$ and $s$ as in Proposition \ref{prop:test_conj_vs_sls}
\State $N \gets V + \floor{\frac{|u|_G+|v|_G+\delta}{|y|}} + 1$
\State $l_u \gets |u^{y^N}|_G$
\State $l_v \gets |v^{y^N}|_G$
\If{$l_u \le |u|_G + 2\delta$}
	\If{$l_v > |v|_G + 2\delta$}
		\State \textbf{return} $\infty, \infty$
	\Else
		\State $r \gets \infty$ \label{line:in_central_turing}
		\State $s \gets \infty$
		\For{$i \in \{1, \ldots, V\}$}
			\If{$u^{y^i} =_G u$}
				\State $s \gets \min\{i, s\}$
			\EndIf
			\If{$u^{y^i} =_G v$}
				\State $r \gets \min\{i, r\}$
			\EndIf
		\EndFor
		\If{$r = \infty$}
			\State \textbf{return} $\infty, \infty$
		\Else
			\State \textbf{return} $r, s$
		\EndIf
	\EndIf
\Else\Comment{If we get here then $l_u > |u|_G + 2\delta$}
	\If{$l_v \le |v|_G + 2\delta$}
		\State \textbf{return} $\infty, \infty$
	\Else
		\State $l \gets \ceil{\frac{l_v-l_u-6\delta}{2|y|}}$
		\State $m \gets \floor{\frac{l_v-l_u+6\delta}{2|y|}}$
		\For{$r \in \{l, \ldots, m\}$}
			\If{$u^{y^r} =_G v$}
				\State \textbf{return} $r, \infty$
			\EndIf
		\EndFor
		\State \textbf{return} $\infty, \infty$
	\EndIf
\EndIf
\EndFunction
\end{algorithmic}
\end{algorithm}

%Notice that this implementation finds the length of a word, so runs in time $O((|u|+|v|+|y|)\log(|u|+|v|+|y|))$ on a turing machine. By being rather more careful and using a Turing machine with seven tapes, we can avoid this issue and alter the algorithm to run in time $O(|u|+|v|+|y|)$. The trick is that it's not the power of $y$ that counts, but the length of $y^N$. Thus assume we start out with tapes containing $u$, $v$ and $y$.

%On a 4th tape, place $N$ copies of $y^{-1}$, and then place further copies of $y^{-1}$ while simultaneously reading $u$ and $v$. Once we have read more than $2\delta$ units past the longest of $u$ and $v$, complete the current copy of $y$ and reset the first 3 tapes. We now have a suitable power $y^{-N}$ on tape 4, and have produced it in time $O(|u| + |y|)$.

%Copy $u$ to the end of the 4th tape, and construct $y^N$ after this and $u^{y^N}$ is on tape 4. Short-lex reduce this using $\slex$ onto tape 5. We can check if $|u^{y^N}|_G > |u| + 2\delta$ by reading tape 5 and $u$ simultaneously and checking if we finish tape within $2\delta$ units of finishing $u$. We have still taken time only $O(|u|+|y|)$. We repeat the steps so far with $v$ on tapes 6 and 7.

%If we find ourselves on Line \ref{line:in_central_turing}, we can proceed as before to check equality of conjugates. The remaining arithmetic is all bounded, so can be executed in linear time.

%Otherwise, we can construct $y^u$ in a similar way to $y^N$ and check the conjugates required by adding copies of $y$ onto the end until the string has grown by more than $6\delta$.

%Finally, we return $y^r$ and $y^s$ instead of $r$ and $s$ (or empty strings in the case where $r$ or $s$ are $\infty$), and find the alorithm has run in time $O(|u| + |v| + |y|)$.

In the next subsection, we complete a solution to the conjugacy problem where we know an element is of infinite order by putting together all of the tools we have so far in this section.

\subsection{Testing Conjugacy of $A$ and $B$}

We are now in a position to test if there is an element of $G$ which conjugates the entire list $A = (a_1, \ldots, a_m)$ to $B = (b_1, \ldots, b_m)$. Recall that $a_1$ is assumed to be of infinite order. Let $\mu$ be an upper bound on the length of elements in either list.

Use Corollary \ref{corollary:test_fin_ord} (\textsc{TestInfOrder}) to test in time $O(|b_1|)$ if $b_1$ is of infinite order. If it is not, $a_1$ and $b_1$ are not conjugate, so neither are $A$ and $B$ and we may stop.

Next, apply Algorithm \ref{algorithm:getconjugationcandidates} (\textsc{GetConjugationCandidates}) on $a_1$ and $b_1$ to obtain an $X$-word $p$, a short-lex straight word $y$ and a set $S$ of $X$-words with at most $V$ elements such that $a_1^g =_G b_1$ if and only if $g =_G py^ns$ for some $n \in \mathbb{Z}$ and $s \in S$. All returned $X$-words have length $O(|a_1| + |b_1|)$ and this step takes time $O(|a_1| + |b_1|)$ and in particular $O(\mu)$.

We repeat the remaining steps for each element $s \in S$. Since there are at most $V$ elements in $S$, we can do this without affecting the overall runtime of the algorithm.

For each $i \in \{1, \cdots, m\}$, apply Algorithm \ref{algorithm:testconjugacybysls} (\textsc{TestConjugacyBySLS}) to $a_i^p$, $b_i^{s^{-1}}$ and $y$ to obtain values $r_i$ and $t_i$. This takes time $O(m\mu)$.\footnote{As $y$ was originally found as an element of the centraliser of a power of $a_1$, it might seem superfluous to test $i=1$ here, but we only know at this point that a power of $y$ centralises a \textit{power} of $a_1$, and in any case it is not clear what power of $y$ this is the case for.}

If $r_i = \infty$ for some $i$ then $a_i$ can't be conjugated to $b_i$ for any power of $y$, so the same is true of $A$ and $B$ and we can move to the next element of $S$.

Otherwise, a set of $m$ (possibly modular) equations must be solved simultaneously. If $t_i = \infty$ for some $i$, this is simple; it suffices to check that $r_i = r_j$ for each $j \ne i$ where $t_j = \infty$, and that $r_i \equiv r_j \mod t_j$ for each $j \ne i$ where $t_j \ne \infty$. If all of the equations are satisfied then $A^{y^{r_i}} =_G B$ and $r_i$ is the unique power of $y$ with this property; otherwise there is no power of $y$ which conjugates $A$ to $B$. Either way we may move onto the next $s$ and these checks take time $O(m)$.

The remaining case is where all $t_i$ and $r_i$ are finite, in which case the set of equations $j \equiv r_i \mod t_i$ must be solved simultaneously. First, note that if $d$ and $e$ are coprime natural numbers then $j \equiv c \mod de$ if and only if $j \equiv c \mod d$ and $j \equiv c \mod e$ both hold, so each congruence $j \equiv r_i \mod t_i$ can be split into a number of congruences modulo prime powers. As $t_i \le V$ for each $i$, the time taken by this operation is independent of input for each $i$, so in $O(m)$ overall.

For integers $c$ and $d$, a prime number $p$ and natural numbers $e,f$ the two equations $a \equiv c \mod p^e$ and $a \equiv d \mod p^ep^f$ are equivalent to the second if $c \equiv d \mod p^e$ and have no solution if not. Thus the equations can be either shown to be inconsistent, or reduced to a set of at most $V$ equations modulo prime powers where each prime is distinct and each prime power is at most $V$. By allocating an array with an element corresponding to each prime below $V$, this will take constant time per starting prime power equation, so again time $O(m)$ overall.

Finally, the well-known Chinese Remainder Theorem yields $r'$ and $t'$ such that $j \equiv r' \mod t'$ if and only if $A^{y^j} =_G B$. Since at this point there are at most $V$ congruences modulo pairwise coprime numbers less than or equal to $V$, the running time of this final step is independent of input length.

Thus we have an algorithm \textsc{SolveSimultaneousModularEquations} which takes as input a list of integer pairs $(r_i, s_i)$ and solves the set of modular equations $u \equiv r_i \mod s_i$ simultaneously. We will suppose that it returns integers $r$ and $s$ such that $u \equiv r \mod s$ if and only if $u$ was a solution to the original set of equations, and returns $\infty, \infty$ if there is no solution.

To summarise, here is the full algorithm in pseudocode.

\begin{algorithm}
\label{algorithm:findconjugatingelementsinf}
Test conjugacy of lists where the first element of $A$ is known to have infinite order.
\begin{algorithmic}[1]
\Function{FindConjugatingElementsInf}{$A$, $B$}
\Statex \textbf{Input:} Lists $A = [a_1, \ldots, a_m]$ and $B = [b_1, \ldots, b_m]$ with $a_1$ of infinite order.
\Statex \textbf{Output:} A set of all elements $g \in G$ such that $g^{-1}Ag =_G B$.
\If{$\neg$\Call{TestInfOrder}{$b_1$}}
	\State \textbf{return} $\{\}$
\EndIf
\State $p, y, S \gets$ \Call{GetConjugationCandidates}{$a_1, b_1$}
\State $O \gets \{\}$
\For{$s \in S$}
	\State $E \gets \{\}$\Comment{Any modular equations go here}
	\State $n \gets null$\Comment{Set to $r_i$ if $s_i = \infty$ for some $i$}
	\For{$i \in \{1, \ldots, n\}$} \label{line:conj_inf_main_loop}
		\State $a \gets \pi(a_i^p)$
		\State $b \gets \pi(b_i^{s^{-1}})$
		\State $r_i, t_i \gets$ \Call{TestConjugacySLS}{$a, b, y$}
		\If{$r_i = \infty$}
			\State \textbf{next} $s$
		\EndIf
		\If{$t_i = \infty$}
			\State $n \gets r_i$
		\EndIf
		\State $E \gets E \cup \{(r_i, t_i)\}$
	\EndFor
	\If{$n = null$}
		\State $(r, t) \gets$ \Call{SolveSimultaneousModularEquations}{$E$}\label{line:conj_inf_multi}
		\State $O \gets O \cup \{ py^ry^{tk}s : k \in \mathbb{Z} \}$\label{line:add_inf_1}
	\Else
		\For{$(r, t) \in E$}
			\If{$t = \infty$ and $r \ne n$}
				\State \textbf{next} $s$
			\ElsIf{$t < \infty$ and $r \nequiv n \mod t$}
				\State \textbf{next} $s$
			\EndIf
		\EndFor
		\State $O \gets O \cup \{ py^ns \}$\label{line:conj_inf_sing}
	\EndIf
\EndFor
\State \textbf{return} $O$\label{line:return_o}
\EndFunction
\end{algorithmic}
\end{algorithm}

Since $|y| \in O(|a_1|)$ and $|s| \in O(|a_1| + |b_1|)$, the loop on line \ref{line:conj_inf_main_loop} takes time $O(|a_i| + |b_i| + |a_1| + |b_1|)$ per iteration, so time $O(m\mu)$ in total. By the discussion above, line \ref{line:conj_inf_multi} runs in time $O(m)$ and returns $r$ and $s$ whose value is bounded above by $V$, so this section runs within time $O(m\mu)$. Finally, the $n$ on line \ref{line:conj_inf_sing} has $|y^n| \in O(\mu)$ so the last section also runs in time $O(m\mu)$.

Notice that on line \ref{line:conj_inf_sing} the word $py^ns$ has length $O(\mu)$ so is the language of an $X^{\pm 1}$-DFA with $O(\mu)$ states which can be computed in time $O(\mu)$ by Proposition \ref{prop:regular}.

Similarly on line \ref{line:add_inf_1} the set $\{ py^ry^{tk}s : k \in \mathbb{Z} \}$ is the concatenation of the sets $\{ py^r \}$, $\{ y^{tk} : k \in \mathbb{Z} \}$ and $\{ s \}$ and that each of these is accepted by an $X^{\pm 1}$-FSA with $O(\mu)$ states (the language of powers can for instance be represented by $\{ y^{tk} : k \ge 0 \}$ union $\{ y^{-tk} : k \ge 0 \}$).

We now know that each set added to $O$ is accepted by an $X^{\pm 1}$-FSA with $O(\mu)$ states, which can be computed in time $O(\mu)$ by Proposition \ref{prop:regular}. A slightly more careful argument would show that each FSA can in fact be chosen to be deterministic with number of states still in $O(\mu)$.

Thus $O$ is the union of at most $V$ $X^{\pm 1}$-FSAs each with $O(\mu)$ states, so by Proposition \ref{prop:regular} it too is the language of an $X^{\pm 1}$-FSA with $O(\mu)$ states which can computed in $O(\mu)$ time.

Instead of building the set $O$, we may instead simply return $py^ns$ on line \ref{line:conj_inf_sing}, return $py^rs$ on line \ref{line:add_inf_1} or return $null$ on line \ref{line:return_o} - in this case, the algorithm will test for the existence of a conjugating element and return one if such an element exists.

To summarise:

\begin{theorem}
\label{thm:linear_conj_inf}
Given integers $\delta \ge 1$ and $l$, there is an algorithm which, given a $\delta$-hyperbolic group $G=<X|R>$ with $|X| \le l$, a number $m \ge 0$ and lists $A = (a_1, \cdots, a_m)$ and $B = (b_1, \cdots, b_m)$, each containing words in the generators of $G$ with $a_1$ representing an infinite order element of $G$, can find a (non-deterministic) $X^{\pm 1}$-FSA whose language $L$ satisfies:
\begin{itemize}
\item $A^w =_G B$ for any $w \in L$, and
\item for any $g \in G$ such that $A^g =_G B$ there is an element $w \in L$ with $w =_G g$.
\end{itemize}

If $|a_i| \le \mu$ and $|b_i| \le \mu$ for each $1 \le i \le m$ then the algorithm will run in time $O(m\mu)$. It can be modified to return a single conjugating element $g \in G$ with $A^g = B$, if one exists, without affecting the running time.
\end{theorem}

Note that \textsc{FindConjugatingElementsInf}$(A, A)$ returns the centraliser of $A$ in time $O(m\mu)$.

\section{Conjugacy of General Lists}

In this section we will show that the conjugacy problem for lists is solvable in linear time even if all elements of both lists are of finite order, by either finding an infinite order element which is a multiple of some of the elements in one or the other list, or by reducing the problem to testing the conjugacy of bounded length lists containing only elements of bounded length.

\subsection{Simple Results}

We start by making an elementary observation about mid-vertices.

\begin{lemma}
\label{lemma:triangle}
Suppose $\vertex{x}$, $\vertex{y}$ and $\vertex{z}$ are vertices in $\Gamma$ and that $\vertex{p}$ is a mid-vertex of a geodesic path $\path{\vertex{x}}{\vertex{y}}$. Then \[
d(\vertex{p}, \vertex{z}) \le \frac{2\max\{d(\vertex{x}, \vertex{z}), d(\vertex{y}, \vertex{z})\} - d(\vertex{x}, \vertex{y}) + 1}{2} + \delta.
\]
\end{lemma}

\begin{proof}
Let $\path{\vertex{x}}{\vertex{z}}$, and $\path{\vertex{y}}{\vertex{z}}$ be geodesics so that we have a geodesic triangle with corners $\vertex{x}$, $\vertex{y}$ and $\vertex{z}$.

\begin{figure}
\begin{center}
\input tri_midpoint.pstex_t
\caption{A midpoint on a geodesic triangle}
\label{figure:tri_midpoint}
\end{center}
\end{figure}

Assume that $d(\vertex{x}, \vertex{z}) > d(\vertex{y}, \vertex{z})$, as in Figure \ref{figure:tri_midpoint}. Note that \begin{eqnarray*}
        d(\vertex{x}, \vertex{p})
& \le & \frac{d(\vertex{x}, \vertex{y}) + 1}{2} \\
& \le & \frac{d(\vertex{x}, \vertex{y}) + d(\vertex{x}, \vertex{z}) - d(\vertex{y}, \vertex{z})}{2} \\
&  =  & (\vertex{y}, \vertex{z})_{\vertex{x}},
\end{eqnarray*} so $\vertex{p}$ corresponds to a vertex $\vertex{q}$ on $\path{\vertex{x}}{\vertex{z}}$. Notice that \begin{eqnarray*}
        d(\vertex{p}, \vertex{z})
& \le & d(\vertex{p}, \vertex{q}) + d(\vertex{q}, \vertex{z}) \\
& \le & \delta + d(\vertex{x}, \vertex{z}) - d(\vertex{q}, \vertex{x}) \\
&  =  & \delta + d(\vertex{x}, \vertex{z}) - d(\vertex{p}, \vertex{x}) \\
& \le & d(\vertex{x}, \vertex{z}) + \delta - \frac{d(\vertex{x}, \vertex{y}) - 1}{2},
\end{eqnarray*} as required for this case. We proceed similarly if $d(\vertex{x}, \vertex{z}) < d(\vertex{y}, \vertex{z})$.

It remains to consider the case where $d(\vertex{x}, \vertex{z}) = d(\vertex{y}, \vertex{z})$. If $d(\vertex{x}, \vertex{y})$ is even then $\vertex{p}$ must be the meeting point on $\path{\vertex{x}}{\vertex{y}}$. Otherwise, suppose that $d(\vertex{p}, \vertex{x}) = (\vertex{y}, \vertex{z})_{\vertex{x}} - \frac{1}{2}$. In either case, $\vertex{p}$ corresponds to a vertex $\vertex{q}$ on $\path{\vertex{x}}{\vertex{z}}$ which must be within $\frac{1}{2}$ of the meeting point on that side, so \begin{eqnarray*}
        d(\vertex{p}, \vertex{z})
& \le & d(\vertex{p}, \vertex{q}) + d(\vertex{q}, \vertex{z}) \\
& \le & \delta + (\vertex{x}, \vertex{y})_{\vertex{z}} + \frac{1}{2} \\
&  =  & \frac{d(\vertex{x}, \vertex{z}) + d(\vertex{y}, \vertex{z}) - d(\vertex{x}, \vertex{y}) + 1}{2} + \delta \\
&  =  & \frac{2\max\{d(\vertex{x}, \vertex{z}),d(\vertex{y}, \vertex{z})\} - d(\vertex{x}, \vertex{y}) + 1}{2} + \delta
\end{eqnarray*} as required. If $d(\vertex{p}, \vertex{x}) = (\vertex{y}, \vertex{z})_{\vertex{x}} + \frac{1}{2}$ then interchange $\vertex{x}$ and $\vertex{y}$ in the above argument to get the same result.
\end{proof}

We also make a simple observation which will be used later to aid us in shortening list elements.

\begin{lemma}
\label{lemma:replace}
Suppose $g, a_1, a_2, b_1, b_2 \in G$. Then $(a_1, a_2)^g = (b_1, b_2)$ if and only if $(a_1a_2, a_2)^g = (b_1b_2, b_2)$.
\end{lemma}

\begin{proof}
The proof is elementary; the forward implication can be derived from the identity $(a_1a_2)^g = a_1^ga_2^g$ and the reverse from $a_1^g = (a_1a_2)^g(a_2^{-1})^g$.
\end{proof}

One can extend this to show that we can multiply any elements in a pair of lists together without altering the set of conjugating elements, provided we do the same in both lists.

\subsection{Bounding Element Length in Short Lists}

In this subsection, we show that if the number of elements in a list is bounded, we can find a related list in which either every element has bounded length or at least one element has infinite order. We will describe in a later section how to use this information to solve the conjugacy problem. The procedure to find such a list is described below.

\begin{proposition}
\label{prop:shorten_list}
There is an algorithm \textsc{ShortenList} which, given a list $A=(a_1,\ldots,a_m)$ of elements of $G$, will either: \begin{itemize}
\item return some $c \in G$ which for any $1 \le i \le m$ has \[ |c^{-1}a_i a_{i+1} \cdots a_mc| \le 3^{m-i}\left(7L + \delta + \frac{1}{2}\right) \] or
\item return integers $j$ and $k$ such that $j \le k \le m$ and $a_j a_{j+1} \cdots a_k$ is of infinite order.
\end{itemize}

Further, the algorithm will run in time $O(m^3\mu)$, where $\mu$ is the maximum length of the elements in $A$.
\end{proposition}

\begin{proof}
We first state the algorithm, and then prove that it works as advertised.

\begin{algorithmic}[1]
\label{algorithm:shorten_list}
\Function{ShortenList}{$[a_1, \ldots, a_m]$}
\State $c_0 \gets 1$
\For{$k:=1$ to $m$}
	\For{$j \in \{1, \ldots, k\}$}
		\If{$|(\pi(c_{k-1}^{-1}a_j \cdots a_kc_{k-1}))_C|_G > 2L$} \label{line:conj_finite_check}
			\State \textbf{return} $null, j, k$ \Comment{$a_j\cdots a_k$ is of infinite order} \label{line:conj_finite_return_infinite}
		\EndIf
	\EndFor
	\State $c_k \gets \pi(c_{k-1}(\pi(c_{k-1}^{-1}a_kc_{k-1}))_L)$ \label{line:conj_finite_extend}
\EndFor
\State \textbf{return} $c_m, null, null$
\EndFunction
\end{algorithmic}

If the algorithm finds and returns integers $j, k$ on line \ref{line:conj_finite_return_infinite}, then a conjugate $g$ of $a_j \cdots a_k$ has $|(\slex(g))_C| \ge 2L$, and so $g$ is of infinite order by Proposition \ref{prop:short_conj}. But then $a_j \cdots a_k$ has infinite order also and the algorithm is correct to return $j, k$.

We may therefore assume that the assertion on line \ref{line:conj_finite_check} always fails. It remains to show that after the outer loop has run $k$ times, the length of $c_k^{-1}a_i\cdots a_kc_k$ is less than or equal to $(7L+\delta+\frac{1}{2})3^{k-i}$ and that the algorithm has taken time $O(k^3 \mu)$.

In order to show these facts, it is useful to show that $|c_k| \le k(\frac{\mu}{2}+\delta+1)$. We do this now. Consider a geodesic triangle with corners $\vertex{e}$, $\vertex{b}:=\vertex{e} \cdot c_{k-1}$ and $\vertex{c}:=\vertex{e} \cdot a_kc_{k-1}$. Label the sides with the short lex geodesics $\path{\vertex{e}}{\vertex{b}}$, $\path{\vertex{b}}{\vertex{c}}$ and $\path{\vertex{e}}{\vertex{c}}$. Let $\vertex{p}:=\vertex{b} \cdot (\slex(c_{k-1}^{-1}a_kc_{k-1}))_L$, which is a mid-vertex of $\path{\vertex{b}}{\vertex{c}}$ as illustrated in Figure \ref{figure:extend_c}. Since $c_k$ labels a geodesic from $\vertex{e}$ to $\vertex{p}$, by Lemma \ref{lemma:triangle} we have \begin{eqnarray*}
        |c_k|
& \le & \frac{2\max\{d(\vertex{e}, \vertex{b}), d(\vertex{e}, \vertex{c})\} - d(\vertex{b}, \vertex{c}) + 1}{2}+\delta \\
& \le & \frac{2\max\{|c_{k-1}|,|a_kc_{k-1}|_G\}-|c_{k-1}^{-1}a_kc_{k-1}|_G+1}{2}+\delta.
\end{eqnarray*}

\begin{figure}
\begin{center}
\input extend_c.pstex_t
\caption{Extending $c$.}
\label{figure:extend_c}
\end{center}
\end{figure}

Suppose $|c_{k-1}| \ge |a_kc_{k-1}|_G$. Notice that $|c_{k-1}^{-1}a_kc_{k-1}|_G \ge |c_{k-1}| - |a_kc_{k-1}|_G$ by the triangle inequality, so we find that \begin{eqnarray*}
        |c_k|
& \le & \frac{2|c_{k-1}| - |c_{k-1}| + |a_kc_{k-1}|_G + 1}{2} + \delta \\
&  =  & \frac{|c_{k-1}| + |a_kc_{k-1}|_G + 1}{2} + \delta \\
& \le & \frac{2|c_{k-1}| + 1}{2} + \delta \\
& \le & |c_{k-1}| + \frac{|a_k|}{2} + \delta + 1.
\end{eqnarray*} Similarly if $|c_{k-1}| < |a_kc_{k-1}|_G$ then \begin{eqnarray*}
        |c_k|
& \le & \frac{2|a_kc_{k-1}|_G - |a_kc_{k-1}|_G + |c_{k-1}|}{2} + \delta \\
&  =  & \frac{|a_kc_{k-1}|_G + |c_{k-1}|}{2} + \delta \\
& \le & \frac{|a_k| + 2|c_{k-1}|}{2} + \delta \\
&  =  & |c_{k-1}| + \frac{|a_k|}{2} + \delta + 1.
\end{eqnarray*} In either case, then, $|c_k| \le |c_{k-1}| + \frac{|a_k|}{2} + \delta + 1$.

By repeating this argument starting at $c_0$ we find that $|c_k| \le k(\frac{\mu}{2} + \delta + 1)$ as required.

It can now be shown that the algorithm runs in time $O(m^3\mu)$. Note that $|c_{k-1}^{-1}a_j\cdots a_kc_{k-1}| \le k\mu+2|c_{k-1}| \le 2k(\mu + \delta + 1)$ so the checks on line \ref{line:conj_finite_check} each run in time $O(k\mu)$. There are $k$ such steps per loop and a total of $m$ loops, so the overall running time is in $O(m^3\mu)$ for this step.

Similarly, $|c_{k-1}c_{k-1}^{-1}a_kc_{k-1}| \in O(k\mu)$ so line \ref{line:conj_finite_extend} runs in time $O(k\mu)$ and the overall time taken in this step is in $O(m^2\mu)$. Therefore the whole algorithm runs in time $O(m^3\mu)$ as required.

It remains to show that the bound on the length of the elements $(a_i\cdots a_m)^{c_m}$ is satisfied. This can be shown by induction on $m$. Let us first, for each $k\in\{1,\ldots,m\}$, define $K_{k,k}:=2L$. Now let $K_{i, k+1}: = 3K_{i,k} + 10L + 2\delta + 1$ for any $1 < i\le k$. The aim is to use induction on $k$ to show that $|c_k^{-1}a_i \cdots a_k c_k|_G \le K_{i, k}$ for any $1 \le i \le k$ and then show that $K_{i,m}$ is within the required bound.

In the $k = i$ case, $a_k^{c_k} =_G d^{d_L} =_F d_C$ where $d = \slex(a_k^{c_{k-1}})$. Since we ensure that $|d_C|_G \le 2L$ on line \ref{line:conj_finite_check} we must have $|a_k^{c_k}|_G \le K_{k,k} = 2L$.

Now suppose that the inequality $|c_k^{-1}a_i\cdots a_k c_k|_G\le K_{i,k}$ is satisfied for all $1 \le i \le k$. We must show that $|c_{k+1}^{-1} a_i \ldots a_{k+1}c_{k+1}|_G \le K_{i,k+1}$ for each $i$.

Pick some specific $i$, and let $e := \slex(c_k^{-1}a_i \ldots a_{k+1} c_k)$ and $g := \slex(c_k^{-1}a_{k+1}c_k)$. Notice that $c_{k+1} =_G c_kg_L$ and so \begin{eqnarray*}
        (a_i \ldots a_{k+1})^{c_{k+1}}
& =_G & e^{c_k^{-1}c_{k+1}} \\
& =_G & e^{g_L} \\
& =_G & e_C^{e_L^{-1}g_L} \\
& =_G & e_C^{e_L^{-1}g_R^{-1}g_C}.
\end{eqnarray*}

The checks on line \ref{line:conj_finite_check} ensure that $|e_C|_G \le 2L$, and $|g_C|_G \le 2L$, so we know that $|e_C^{e_L^{-1}g_R^{-1}}|_G \le 2|g_Re_L|_G + 6L$. In particular, we will be done if we can show that \begin{equation} \label{eqn:short_grel}
|g_Re_L|_G \le \frac{3}{2}K_{i,k} + 2L + \delta + \frac{1}{2}. \end{equation}

Let $f := \slex(c_k^{-1}a_i\ldots a_k c_k) =_G eg^{-1} $ and recall that $|f|\le K_{i,k}$ by our earlier assumption. Consider a geodesic triangle with corners $\vertex{e}$, $\vertex{b}:= \vertex{e} \cdot g$ and $\vertex{c}:=\vertex{b} \cdot e_L$ illustrated in Figure \ref{figure:shorten_tri}. Note that \begin{eqnarray*}
        d(\vertex{e}, \vertex{c})
&  =  & |ge_L|_G \\
&  =  & |f^{-1} ee_L|_G \\
& \le & |ee_L|_G + K_{i,k}\\ 
&  =  & |e_Le_C|_G + K_{i,k},
\end{eqnarray*} but $|e_C|_G \le 2L$ so \begin{eqnarray*}
        d(\vertex{e}, \vertex{c})
& \le & |e_L| + K_{i,k} + 2L \\
& \le & \frac{|e|}{2} + K_{i,k} + 2L \\
& \le & \frac{|f| + |g|}{2} + K_{i,k} + 2L.
\end{eqnarray*}

\begin{figure}
\begin{center}
\input shorten_tri.pstex_t
\caption{Bounding $g_Re_L$}
\label{figure:shorten_tri}
\end{center}
\end{figure}

Also, $d(\vertex{b}, \vertex{c}) = |e_L| \le \frac{|e|}{2} \le \frac{|f| + |g|}{2}$.

Pick the mid-vertex $\vertex{p} := \vertex{e} \cdot g_L$ on $\path{\vertex{e}}{\vertex{b}}$. Lemma \ref{lemma:triangle} implies that \begin{eqnarray*}
        |g_R e_L|_G
&  =  & d(\vertex{p}, \vertex{c}) \\
& \le & \frac{2 \max\{d(\vertex{e}, \vertex{c}), d(\vertex{b}, \vertex{c})\} -d(\vertex{e}, \vertex{b}) + 1}{2} + \delta \\
& \le & \frac{2 \max\{\frac{|f|+|g|}{2} + 2L + K_{i, k}, \frac{|f|+|g|}{2}\} -|g| + 1}{2} + \delta \\
&  =  & \frac{2(2L + K_{i, k}) + |g|+|f|-|g| + 1}{2} + \delta \\
& \le & \frac{2(2L + K_{i, k}) + |f| + 1}{2} + \delta \\
& \le & \frac{3}{2}K_{i, k} + 2L + \delta + \frac{1}{2},
\end{eqnarray*} as required by (\ref{eqn:short_grel}).

Therefore $|(a_i \cdots a_k)^{c_k}|_G \le K_{i,k}$ for each $1 \le i \le k \le m$ and it remains to show that $K_{i,k} \le 3^{k-i}(7L+\delta+\frac{1}{2})$. But \begin{eqnarray*}
        K_{i,k}
&  =  & 3K_{i,k-1} + 10L + 2\delta + 1\\
&  =  & 3^{k-i}K_{i,i} + (10L + 2\delta + 1)\sum_{n=i}^{k-1} 3^{n-i} \\
&  =  & 3^{k-i}K_{i,i} + (10L + 2\delta + 1)\frac{3^{k-i}-1}{3-1} \\
&  =  & 3^{k-i} \times 2L + (3^{k-i}-1)\left(5L + \delta + \frac{1}{2}\right) \\
& \le & 3^{k-i} \left(7L + \delta + \frac{1}{2}\right),
\end{eqnarray*} and we are done.
\end{proof}

We end this subsection by noting that by repeated application of Lemma \ref{lemma:replace}, the conjugacy problem remains unchanged between studying the lists $(a_1, \ldots, a_m)$ and $(b_1, \ldots, b_m)$, and the lists $(a_1', a_2', \ldots, a_m')$ and $(b_1', b_2', \ldots, b_m)$ where $a_i' = a_i \cdots a_m$ and $b_i' = b_i \cdots b_m$. This is critical to our solution later.

\subsection{Some Worse than Linear Time Algorithms}

This subsection provides a small toolbox of results which solve various problems involving lists in worse than linear time. They are useful, as the previous subsection allows us to bound the lengths of elements in terms of the number of elements.

The following result is a restatement of Corollary 3.2 of \cite{bridson2005conjugacy}.

\begin{proposition}
\label{proposition:small_cent}
Let $(a_1, \ldots, a_m)$ be a list of $m$ pairwise distinct finite order elements of $G$. Suppose that $x \in G$ satisfies \[ |x|_G \ge (2k + 5)^{4\delta+2}(l + 2\delta) \] where $l = \max\{|a_1|_G, |a_1^x|_G, \ldots, |a_m|_G, |a_m^x|_G\}$ and $k$ is the number of generators of $G$. Then $m$ is less than or equal to $Q^2$.
\end{proposition}

The statement in \cite{bridson2005conjugacy} says that $m \le (2k)^{8 \delta}$, but the proof there is sufficient to prove the statement here. Proposition \ref{proposition:small_cent} implies that the centraliser of a long list of finite order elements is finite. Theorem III.$\Gamma$.3.2 of \cite{BriHae99} then provides a bound on the number of elements in a finite subgroup:

\begin{proposition}
\label{proposition:finite_small_ball}
If $G$ is a $\delta$-hyperbolic group and $H$ is a finite subgroup of $G$ then there is an element $g \in G$ with $H^g$ contained entirely within a ball in the Cayley graph of $G$ of radius $4\delta+2$.
\end{proposition}

We can now prove the following corollary:

\begin{corollary}
\label{cor:short_cent}
There is a constant $R$ and an algorithm \textsc{FindCentraliserExp} which takes as input a list $A$ consisting of $n > Q^2$ words, all of which represent pairwise distinct finite order elements of $G$, returns the centraliser $C$ of $A$ and runs in time $O(n\mu R^\mu)$ where $\mu$ is an upper bound on the length of words in $A$. All elements of $C$ have length in $O(\mu)$ and the number of elements in $C$ is in $O(1)$.
\end{corollary}

\begin{proof}
Suppose that $A = (a_1, \ldots, a_n)$ is such a list. If $x$ is in the centraliser of $A$ then $a_i^x = a_i$ for all $1 \le i \le n$, so in Proposition \ref{proposition:small_cent} we have that $l = \mu$. Since $n > Q^2$, we have $|x|_G < R(\mu + 2\delta)$, where $R := (2k + 5)^{4\delta+2}$.

Since all elements in $C$ are of bounded length, $C$ is finite. Proposition \ref{proposition:finite_small_ball} implies that $C$ can be conjugated into a ball in $\Gamma$ of radius $4\delta + 2$, and in particular the number of elements in $C$ is bounded by a constant depending only on $G$.

Thus the algorithm \textsc{FindCentraliserExp} need now just check for each word $w$ of length at most $R(\mu+2\delta)$ whether $A^w =_G A$. There are at most $R^{\mu+2\delta} \in O(R^\mu)$ such words, and checking each word takes time $O(n\mu)$, so the algorithm runs in time $O(n\mu R^\mu)$ as required.
\end{proof}

Thus we have a method of computing the centraliser of a long list of short finite order words. We still need an algorithm which can be used on a short list of short finite order words. Lemma 4.2 and Proposition 4.3 of \cite{gersten1991rational} show that the centraliser of any finite list in a conjugacy automatic group is a regular language. A run-time analysis of this algorithm is given below for completeness.

\begin{proposition}
\label{prop:compute_centraliser}
If $A = (a_1, \ldots, a_m)$ is a list of words, there is a regular language $Z$ of short-lex least words which is exactly the centraliser of $A$.

Further, there is a constant $R$ and an algorithm \textsc{FindCentraliserRational} which takes as input a list $A = (a_1, \ldots, a_m)$ of $X$-words returns an $X^{\pm 1}$-FSA which accepts $Z$ in time $O(R^{m\mu})$, where $\mu$ is an upper bound on the length of words in $A$.
\end{proposition}

\begin{proof}
Let $WA$ be the short-lex word acceptor for $G$ and let $W$ be its language. Pick $X^{\pm 1}$ DFAs $M_x$ for $x \in X^{\pm 1}$ or $x$ equal to the identity to accept each language $L(x) = \{(u, v) : u, v \in W, ux =_G xv\}$ in the conjugacy automatic structure for $G$ with respect to $W$. Let $k$ be the maximum number of states in these DFAs.

For $w = x_1 \cdots x_n$, let $L(w)$ be the intersection of \[ L(x_1) \times \ldots \times L(x_n) \] and \[ \{(u_1, u_2, u_2, u_3, u_3, \cdots, u_n, u_n, u_1) : u_1, \ldots, u_n \in W \}. \]

By Proposition \ref{prop:regular}, both are regular $2n$-variable languages, and are accepted by a $2n$-variable FSA with $k^n$ states (the second one is essentially the cartesian product of a number of copies of $\{(w, w):w \in W\}$) so $L(w)$ is accepted by an FSA with at most $k^{2n}$ states.

Notice that $(u_1, u_2, u_2, u_3, u_3, \cdots, u_n, u_n, u_{n+1}) \in L(w)$ for some set of words $u_i$ if and only if $u_i^{x_i} = u_{i+1}$ for each $1 \le i \le n$, and so $u_1^w = u_{n+1} = u_1$. Thus the centraliser of $C(w)$ is just the projection of $L(w)$ to its first factor and is accepted by a $k^{2n}$-state FSA by Proposition \ref{prop:regular}.

The centraliser of $A$ is the intersection of the centralisers $C(a_i)$ of its elements $a_i$, which by Proposition \ref{prop:regular} is accepted by a $k^{2m\mu}$-state FSA. Computation of this FSA takes time $O(k^{2m\mu})$ so it sufficies to let $R=k^2$.
\end{proof}

The reader may notice that it would be possible to use this method instead of \textsc{FindCentraliserExp} and the running time would not be dissimilar. We choose not to in order to give better emphasis to the fact that the centraliser in that case is finite and avoid the complications of finding the language of the FSA so-returned.

We now have enough information to compute centralisers of lists of short elements. To complete this section, we give a method of testing conjugacy between lists of short elements. The main theorem regarding lists of finite order elements in \cite{bridson2005conjugacy}, Theorem 3.3, is restated below.

\begin{proposition}
Let $A = (a_1, \ldots, a_m)$ and $B = (b_1, \ldots, b_m)$ be sets of torsion elements in $G$. If $A$ and $B$ are conjugate then there exists a word $x$ with \[ |x|_G \le (2k+5)^{4\delta+2}(\mu+2\delta) + Q^{2Q^2} \] where $\mu$ is the maximum length of an element in either list and $k$ is the number of generators of $G$.
\end{proposition}

Again, the statement in \cite{bridson2005conjugacy} uses $(2k)^{8 \delta}$ in place of $Q^2$, but the proof is sufficient to prove the statement here. Thus by simply checking each element under the length above, we have an algorithm \textsc{TestConjugacyExp} which takes as input two lists of $m$ words whose elements have length less than $\mu$ and returns a word $w$ with $A^w =_G B$ if one exists in time exponential in $\mu$.

\subsection{Ensuring Distinct Elements}

Notice that to apply Corollary \ref{cor:short_cent} to a list $A = (a_1, \ldots, a_m)$ we must ensure that all of the elements of our input list are distinct. We will be applying the corollary to a list of length $n=Q^2 + 1$ which has been returned by \textsc{ShortenList}, so we need to ensure that the $a_i \cdots a_n$ are pairwise distinct group elements for each $i$.

Notice that if $a_i \cdots a_n =_G a_{j+1} \cdots a_n$ for some $i \le j < n$ then $a_i \cdots a_j$ is equal to the identity in $G$. We thus need to ensure that $a_i \cdots a_j$ is never the identity.

If $B = (b_1, \ldots, b_m)$ then we may replace $a_i$ with $a_i' := a_i \cdots a_j$ and replace $b_i$ with $b_i' := b_i \cdots b_j$ without changing the conjugacy problem between $A$ and $B$ by Lemma \ref{lemma:replace}. If one of $a_i'$ and $b_i'$ is the identity and the other is not, the lists cannot therefore be conjugate. If both are the identity, they may be removed from their lists without altering the conjugacy problem.

Thus the aim of this subsection is to produce a list of indices $i$ for which $a_i$ which may be removed from $A$ using the above reasoning, and by doing so either shorten $A$ to less than $n$ elements or replace $A$ with a list for which $a_j \cdots a_n$ are distinct group elements for each $j \le n$. To do this efficiently, we will use a real-time solution to the word problem.

A \textbf{real-time Turing machine} has $k$ two-way infinite work tapes (for some integer $k$), one input tape and a finite set of states including a start state and a list of accepting states. It must read the word on the input tape by reading one letter, then for each work tape it may write a symbol to the current location and then move that tape's head one unit either left or right. The word is accepted if the machine is in an accept state at the end of input.

The word-problem in $G$ is \textbf{real-time} if there is a real-time Turing machine which accepts exactly those words which are equal to the identity in $G$. In \cite{holt2000word} it is proved that the word problem for a word-hyperbolic group is indeed real-time.

We will create $n$ copies $T_1, \ldots, T_n$ of this Turing machine and attach to each $T_i$ a ``logging machine'' $R_i$ which records a log of the machine's behaviour which is sufficient to ``rewind'' $T_i$. That is, it stores for each input letter the directions which the work heads moved, the symbols which were under each work tape's head and the original state of the machine. One can thus rewind each $T_i$ in constant time by setting its state, moving each of its work heads in reverse, rewriting the stored symbol for that tape and moving the input tape's head back one unit. When doing so we move the head on $R_i$'s tape so that it is ready to rewind $T_i$ once more if required.

We let $l = 0$ and $k = 1$ and start each $T_i$ with a blank input tape. At step $k$ we perform the following actions: \begin{enumerate}
\item Increment $l$.
\item Copy $a_k$ to the end of the input tapes of $T_1, \ldots, T_l$.
\item Advance $T_1, \ldots, T_l$ by $|a_k|$ letters.
\item If some $T_i$ is in an accepting state for $i \le l$, then: \begin{enumerate}
	\item Rewind each $T_1, \ldots, T_l$ by $|a_k|$ letters.
	\item Clear $a_k$ from the end of the input tapes of $T_1, \ldots, T_l$.
	\item Mark $a_k$ as an element which should be removed.
	\item Decrement $l$.
\end{enumerate}
\item Increment $k$.
\item If $l \le n$ or $k > m$ then stop.
\end{enumerate}

Thus at step $k$, we at worst read $a_k$ into and then rewind at most $n$ real-time Turing machines, which takes time $O(|a_k|)$. We stop after at most $m$ steps, so the algorithm runs in time $O(m\mu)$.

After step $k$, each $T_i$ holds a the word $a_i' \cdots a_l'$ where the list $(a_1', \ldots, a_l')$ is the list $(a_1, \ldots, a_k)$ with the elements marked above skipped. $T_i$ was not in an accept state immediately after reading $a_i' \cdots a_j'$ for each $i < j \le l$ so none of these words is equal to the identity and we have the desired algorithm. Name this algorithm \textsc{DetectIdentity}. 

We now describe a second algorithm. Given lists $A$ and $B$ of the same length, execute \textsc{DetectIdentity} on each list in turn. If the same set of element indices is marked to be removed for both lists, remove those elements from both lists to create lists $A'$ and $B'$, which are immediately returned. By the discussion above, if $w \in G$ then $A^w =_G B$ if and only if $A'^w =_G B'$ so we may replace $A$ with $A'$ and $B$ with $B'$ without changing the set of conjugating elements.

If the marked indices differ, return $null$. In this case we know that $A$ is not conjugate to $B$. Name this algorithm \textsc{EnsureUniqueness}.

\subsection{Solving the Conjugacy Problem}

\label{section:solve_conj}

We are now ready to solve the conjugacy problem in the general case.

Suppose $A = (a_1, \ldots, a_m)$ and $B = (b_1, \ldots, b_m)$ are lists of $X$-words. We wish to test if one list is a conjugate of the other and return a regular language of words which conjugate $A$ to $B$ in $G$, and contains a representative word for each element with this property. Let $\mu$ be the maximum length of all elements in $A$ and $B$.

First, execute \textsc{EnsureUniqueness}$(\slex(A), \slex(B))$. If the algorithm returns $null$ then stop and declare the lists not conjugate. If not, replace $A$ and $B$ with the lists returned by this algorithm. This step takes time $O(m\mu)$.

We now have two lists $A$ and $B$, each of short-lex least words all of length at least $1$, and such that for $n := \min\{Q^2+1, m\}$ the group elements represented by $a_i \cdots a_n$ are distinct for all $i < n$.

Let $A'$ and $B'$ be the sublists of $A$ and $B$ respectively containing the first $n$ elements.

Apply \textsc{ShortenList} to $A'$ and $B'$; this takes time $O(n^3\mu) = O(\mu)$.

If the algorithm returns an infinite order element $a_i \cdots a_j$ or $b_i \cdots b_j$ for some $i \le j$ then add $a_i \cdots a_j$ to the start of $A$ and add $b_i \cdots b_j$ to the start of $B$ (notice that the set of conjugating elements is unchanged by this action). Now apply \textsc{FindConjugatingElementsInf}, noting that the return value is already a regular language, so we are done. The maximum length of an element in the lists is now $(j-i+1)\mu \le n\mu$, so this takes time $O(mn\mu) = O(m\mu)$.

If not, check, for each $i \le n$ if \textsc{CheckInfOrder}($a_i$) returns true. If so, let $j = n$ and continue as if \textsc{ShortenList} had declared $a_i \cdots a_j$ to be of infinite order. Again, this step takes time $O(m\mu)$.

If we have not yet stopped, we have conjugating elements $c_A$ and $c_B$ which were returned by \textsc{ShortenList}. Let $A' := (a_1', \ldots, a_n')$ where $a_i' = \slex((a_i \cdots a_n)^{c_A})$ and define $B'$ in the same way using $c_B$. Computing these lists takes time $O(n^2\mu) = O(\mu)$.

Use \textsc{TestConjugacyExp} to find an $X$-word $u$ with $A'^u =_G B'$. If no $u$ is found, $A$ and $B$ were not conjugate, so we may stop. The time taken for this step is independent of input.

Suppose $m > n$. Since $A$ was processed by \textsc{EnsureUniqueness} and $A'$ with \textsc{TestInfOrder} all elements of $A'$ are distinct finite order elements. We may therefore execute \textsc{FindCentraliserExp} to find a finite set $C$ which is the centraliser of $A$. Again the time taken is independent of input.

Now check if $A^{c_Awu} = B^{c_B}$ for each $w \in C$. Each check takes time $O(m\mu)$ and the number of checks is independent of the input lists, so this part executes in time $O(m\mu)$. Return the set of all $c_Awuc_B^{-1}$ for which this check succeeds. As this is a finite set, it is a regular language. In fact, it is a concatenation of the languages $\{c_A\}$, $C'$ and $\{uc_B\}$ where $C' \subset C$.

By Proposition \ref{prop:regular}, the first and last languages are accepted by $X^{\pm 1}$-FSAs with $O(n\mu) = O(\mu)$ states, and the middle one is accepted by an $X^{\pm 1}$-FSA with maximum number of states independent of input. The concatenation is accepted by an FSA whose number of states is the sum of this, which is in $O(\mu)$. If only one conjugating element is required, return the first element $c_Awuc_B^{-1}$ found such that $A^{c_Awuc_B^{-1}} =_G B$, if any.

Finally, suppose that $n = m$. Let $C$ be the centraliser of $A'$ found using \textsc{FindCentraliserRational}. We have that $A^{c_Awuc_B^{-1}} =_G B$ for any $w \in C$, so we need simply return the set $O := \{c_Awuc_B^{-1} : w \in C\}$. Notice that $C$ is recognised by an FSA with number of states independent of input. Then as before $O$ is the language of an FSA with $O(\mu)$ states and we are done. If only one conjugating element is required, simply return $c_Auc_B^{-1}$ in this case.

This concludes the proof of Theorem \ref{thm:linear_conj}.

\section{The Final Algorithm}

This section contains pseudocode for the main part of the algorithm, given input of two lists $A$ and $B$ of $m$ words.

\begin{algorithm}
\label{algorithm:testconjugacy}
Solve the list conjugacy problem.
\begin{algorithmic}[1]
\Function{TestConjugacy}{$A:=[a_1, \ldots, a_m], B:=[b_1, \ldots, b_m]$}
\Statex \textbf{Input:} Two equal length lists of $X$-words with maximum element length $\mu$.
\Statex \textbf{Output:} A regular set $L$ for which $\slex(L) = \{ \slex(w) : w \in G, A^w =_G B \}$.
\State $A, B \gets$ \Call{EnsureUniqueness}{$\slex(A), \slex(B)$}
\If{$A = null$}
	\State \textbf{return} $\{\}$
\EndIf
\State $n \gets \min\{Q^2+1, m\}$
\State $i \gets null$
\State $j \gets null$\Comment{These save indices for which $a_i \cdots a_j$ is of infinite order}
\State $A_0 \gets [a_1, \ldots a_n]$
\State $c_a, i', j' \gets$ \Call{ShortenList}{$A_0$}
\If{$i' \ne null$}
	\State $i \gets i'$
	\State $j \gets j'$
\Else
	\For{$i' \in \{ 1, \ldots, n \}$}
		\If{\Call{TestInfOrder}{$a_{i'} \cdots a_n$}}
			\State $i \gets i'$
			\State $j \gets n$
		\EndIf
	\EndFor
\EndIf
\State $B_0 \gets [b_1, \ldots b_n]$
\State $c_b, i', j' \gets$ \Call{ShortenList}{$B_0$}
\If{$i' \ne null$}
	\State $i \gets i'$
	\State $j \gets j'$
\EndIf
\If{$i \ne null$}
	\State $A' \gets [a_i \cdots a_j, a_1, \ldots, a_{i-1}, a_{i+1}, \ldots, a_m]$
	\State $B' \gets [b_i \cdots b_j, b_1, \ldots, b_{i-1}, b_{i+1}, \ldots, b_m]$
	\State \textbf{return} \Call{TestConjugacyInf}{$A',B'$}
\EndIf
\Statex \Comment{$A'$ must contain only distinct finite order elements of bounded length} 
\State $A' \gets [c_a^{-1}a_1a_2\cdots a_nc_a, c_a^{-1}a_2a_3\cdots a_nc_a, \ldots, c_a^{-1}a_nc_a]$
\Statex \Comment{$B'$ must contain only elements of bounded length} 
\State $B' \gets [c_b^{-1}b_1b_2\cdots b_nc_b, c_b^{-1}b_2b_3\cdots b_nc_b, \ldots, c_b^{-1}b_nc_b]$
\State $g \gets$ \Call{TestConjugacyExp}{$A', B'$}
\If{$g = null$}
	\State \textbf{return} $\{\}$
\EndIf
\If{$m > Q^2$}
	\State $C \gets$ \Call{FindCentraliserExp}{$A', B'$}
	\State $O \gets \{\}$
	\For{$w \in C$}
		\If{$A^{c_awg} =_G B^{c_b}$}
			\State $O \gets O \cup \{c_awgc_b^{-1}\}$
		\EndIf
	\EndFor
	\State \textbf{return} $O$
\Else
	\State $C \gets$ \Call{FindCentraliserRational}{$A, B$}
	\State \textbf{return} $\{ c_awgc_b^{-1} : w \in C \}$
\EndIf
\EndFunction
\end{algorithmic}
\end{algorithm}

Once again, we note that the centraliser of $A$ is returned by \textsc{TestConjugacy}($A, A$).

\section{Conclusion and Possible Further Work}

This chapter describes an algorithm which can efficiently solve the conjugacy problem for lists in the setting of a word-hyperbolic group. The method ties up the inefficient cases from, and offers an improved asymptotic runtime over the method described in \cite{bridson2005conjugacy}. It could also be regarded as an improvement over the run time in \cite{epstein2006linearity} in the infinite order case (in the that paper, the authors require that the algorithm checks $V!$ conjugates in the infinite order case; for lists of length $1$, the method here requires only $V$ checks although the words involved may be somewhat longer).

Of course, as it is outlined here the algorithm is not suited for implementation due to the sheer size of many of the constants. These constants are however rather simplistic. For instance, where the constant $V$ appears, we may use the number of short-lex least representatives which can label a $2$-correspondance in the Cayley graph: the set of so-called word differences is typically rather smaller than the number of words of length $\delta$. Even this is likely to be an overestimate, however, as we are interested in words which can label a specific \textit{type} of $2$-correspondance (that is, one between two two-way infinite geodesics with the same label).

In the rather simple case of $\mathbb{Z} \times \mathbb{Z}_2$ with the obvious generating set, for example, we find that the Cayley graph is $2$-hyperbolic and $V=8$, so we might predict that we must check $8$ words to determine if a power of a short-lex straight word centralises a given word as in Proposition \ref{prop:test_conj_vs_sls}. However, the group is abelian so every word centralises every other! Similarly, for this group we find that we may take $M = 1$, which is much smaller than the value given above.

The algorithms outlined in this chapter all return non-deterministic FSAs, due in part to the fact that the languages are the union of a number of regular languages. It is perhaps possible to modify these algorithms to instead return a DFA (or at least a list of DFAs where the number of DFAs depends only on the group and the set of conjugating elements is the union of their languages).

Similarly, the FSAs returned do not necessarily accept a unique word for each conjugating element; it should be possible to ensure this property. It also seems possible that for $X$-words $a$, $b$ and $c$ where $b$ is short-lex straight, the language $\{ \slex(ab^nc) : n \in \mathbb{Z} \}$ is accepted by a (possibly even deterministic) $X^{\pm 1}$-FSA with number of states linear in total word length.

There are a variety of similar questions one can ask along these lines.

\chapter{Conjugacy and Quasiconvex Subgroups}

\label{chapter:qc_conj}

\section{Introduction}

In this chapter, we outline some algorithms which will test various conjugacy related properties with respect to a quasiconvex subgroup of a word-hyperbolic group.

In general, word-hyperbolic groups may contain subgroups which are somewhat difficult to work with. It is for this reason that we restrict to quasiconvex subgroups, which we define now.

\begin{definition}
\label{def:quasiconvex_sg}
Suppose $G$ is a group with Cayley graph $\Gamma$ with respect to a generating set $X$. A subgroup $H$ of $G$ is $\epsilon$-quasiconvex if, for each $X$-word $w \in H$ labelling a geodesic in $\Gamma$, and for each $0 \le i \le |w|$ there exists an $h \in H$ and an $X$-word $a$ with $|a| \le \epsilon$ such that $w(i) =_G ha$.
\end{definition}

In particular, quasiconvexity as above implies that $H$ is itself word-hyperbolic (and so finitely presented) if $G$ is, and $G$ has solvable generalised word problem with respect to $H$ (Proposition 1 of \cite{kapovich1994detecting} in fact allows us to find an $X^{\pm 1}$-FSA whose language is the set of short-lex least $X$-words in the subgroup).

Some simple examples of quasiconvex subgroups are finite index subgroups and finite subgroups of any group, and finitely generated subgroups of free groups.

There are in fact few examples in the literature of subgroups of word-hyperbolic groups which are \textit{not} quasiconvex. One can however use the construction by E.\ Rips in \cite{rips1982subgroups} to produce a word-hyperbolic group with finitely generated normal subgroup which has unsolvable generalised word problem and is therefore not quasiconvex. Examples have also been produced under rather stricter conditions, for instance in \cite{kapovich1995non}, I.\ Kapovich gives an example of a finitely presented, freely indecomposable non-quasiconvex subgroup of a torsion free hyperbolic group which coincides with its own virtual normaliser.

It is impossible to determine whether a list of elements in a general word-hyperbolic group generate a quasiconvex subgroup (again due to \cite{rips1982subgroups}). We will therefore assume that $\epsilon$ has already been computed.

It may seem that quasiconvexity depends on the particular generating set chosen for the larger group. This is not the case, however: while the constant $\epsilon$ may change under change of generating set, the existence of such a constant does not (see Proposition 2.6 of \cite{gersten1991rational} for instance).

Throughout this chapter, unless stated otherwise, we will assume that $G$ is a word-hyperbolic group generated by some set $X$, that $\Gamma$ is its Cayley graph which has base vertex $\vertex{a}$ and is $\delta$-vertex-hyperbolic and that $H$ is an $\epsilon$-quasiconvex subgroup with coset Cayley graph $\Gamma'$ with respect to $X$. We will assume that $\delta$ and $\epsilon$ are integers which are strictly greater than $0$.

Recall from Lemma \ref{lemma:short_lex} that the map $\slex$ which reduces words to their short-lex least representatives can be computed in time linear in input length. We will assume that an $X^{\pm 1}$-DFA $HA$ has been computed which accepts all short-lex least representatives in $H$ so that a word $w$ can be tested for membership of $H$ in time $O(|w|)$ by testing if $HA$ accepts $\slex(w)$.

\section{Useful Results}

We begin by providing some basic results in order to avoid distracting the reader from the main results in each section.

\subsection{Extending Geodesics}

Recall that $\canc{u}{v} = (\vertex{a} \cdot u, \vertex{a} \cdot v)_{\vertex{a}}$ for $X$-words $u$ and $v$, and is independent of $\vertex{a}$.

A useful tool used throughout this chapter is the following one, which says that if $w$ is a long enough word which labels a geodesic in $\Gamma'$ at $H$ and $u$ is a label of a geodesic in $\Gamma$ with $\canc{w^{-1}}{u}$ small, then $wu$ labels something close to a geodesic in $\Gamma'$ when started at $H$. The bounds can be slightly improved in the case where $\canc{w^{-1}}{u} = 0$ (that is, $wu$ labels a geodesic in $\Gamma$), but the factor of $\epsilon$ is unchanged so we will simply prove the more general statement.

\begin{lemma}
\label{lemma:extend_long_coset}
Suppose that $w_1$ and $w_2$ label geodesics in $\Gamma$. Let $k := \canc{w_1^{-1}}{w_2}$, and let $w_1'$ and $w_2'$ label geodesics in $\Gamma'$ connecting $H$ to $Hw_1$ and $H$ to $Hw_1w_2$ respectively. If $|w_1'| \ge 3\delta + \epsilon + k + 1$ then $|w_2'| \ge |w_1'| + |w_2| - 2k - 3\delta - \epsilon$.
\end{lemma}

\begin{figure}
\begin{center}
\input extend_word.pstex_t
\caption{Extending a long minimal coset representative}
\label{figure:extend_word}
\end{center}
\end{figure}

\begin{proof}
Pick $X$-words $h_1$ and $h_2$ to label geodesics in $\Gamma$ connecting $\vertex{a}$ to $\vertex{a} \cdot w_1w_1'^{-1}$ and $\vertex{a}$ to $\vertex{a} \cdot w_1w_2w_2'^{-1}$ respectively. Let $\vertex{b} := \vertex{a} \cdot w_1$, $\vertex{c} := \vertex{a} \cdot w_1w_2$, $\vertex{d} := \vertex{a} \cdot h_1$ and $\vertex{e} := \vertex{a} \cdot h_2$. Then we have a geodesic pentagon as illustrated in Figure \ref{figure:extend_word}. We let $d_1 := (\vertex{b}, \vertex{a})_{\vertex{d}}$ and $d_2 := (\vertex{c}, \vertex{a})_{\vertex{e}}$, and let $s_i := |h_i| - d_i$ for $i$ equal to $1$ or $2$. These numbers measure in some sense the length of various words which $H$ ``cancels.''

Let $i := \floor{d_1}$. Let $\vertex{x} := \vertex{d} \cdot w_1'(i) \in \path{\vertex{d}}{\vertex{b}}$ so that $\vertex{x}$ corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$. Since $H$ is $\epsilon$-quasiconvex, there is a vertex $\vertex{y}$ representing an element of $H$ such that $d(\vertex{x}, \vertex{y}) \le \delta + \epsilon$. Let $u$ be the label of a geodesic in $\Gamma$ connecting $\vertex{y}$ to $\vertex{b}$, then since $Hu = Hw_1'$ we have \begin{eqnarray*}
        |w_1'|
&  =  & d(H, Hu) \\
& \le & d(\vertex{y}, \vertex{b}) \\
& \le & |w_1'| - i + \delta + \epsilon,
\end{eqnarray*} so $i \le \delta + \epsilon$ and \begin{equation} \label{eqn:d1_short}
d_1 \le \delta + \epsilon + \frac{1}{2}.
\end{equation} Exchanging $\vertex{b}$ for $\vertex{c}$ and $\vertex{d}$ for $\vertex{e}$ in this argument shows that \begin{equation} \label{eqn:d2_short}
d_2 \le \delta + \epsilon + \frac{1}{2}
\end{equation} as well.

Notice that \begin{align}
      |w_2'|
  = & |w_1w_2|_G + d_2 - s_2 \notag\\
  = & |w_1| + |w_2| - 2k + d_2 - s_2 \notag\\
  = & |w_1'| + s_1 - d_1 + |w_2| - 2k + d_2 - s_2 \label{eqn:s1_bound}
\end{align} so recalling that $d_2$ is bounded, we need only show that $s_2$ is not much larger than $s_1$ to find a lower bound on $|w_2'|$.

By definition, $(\vertex{b}, \vertex{c})_{\vertex{a}} = |w_1| - (\vertex{a}, \vertex{c})_{\vertex{b}} = |w_1| - k$. Since $|w_1| = |w_1'| - d_1 + s_1$, using $|w_1'| \ge 3\delta + \epsilon + k + 1$ from the hypothesis, we see that \begin{equation} \label{eqn:canc_far}
(\vertex{b}, \vertex{c})_{\vertex{a}} \ge s_1 + 3\delta + \epsilon - d_1 + 1.
\end{equation}

Now let $j := s_1 + 3\delta + \epsilon - d_1 + 1$ and suppose for a contradiction that $j \le s_2$. Notice $s_1 - d_1 \in \mathbb{Z}$ so that $j$ is an integer. Let $\vertex{z} := \vertex{a} \cdot h_2(j)$ and since $j \le s_2$ we see $\vertex{z}$ corresponds to a vertex on $\path{\vertex{a}}{\vertex{c}}$. By (\ref{eqn:canc_far}) we know that $j \le (\vertex{b}, \vertex{c})_{\vertex{a}}$, so this vertex in turn corresponds to a vertex on $\path{\vertex{a}}{\vertex{b}}$. Finally, (\ref{eqn:d1_short}) implies that $j \ge s_1 + 2\delta + \frac{1}{2} \ge s_1$, so $\vertex{z}$ $3$-corresponds to a vertex $\vertex{p}$ on $\path{\vertex{d}}{\vertex{b}}$. Notice that $d(\vertex{d}, \vertex{p}) = j - s_1 + d_1 = 3\delta + \epsilon + 1$ so that $d(\vertex{p}, \vertex{b}) = |w_1'| - 3\delta - \epsilon - 1$.

Since $\vertex{z}$ lies on $\path{\vertex{a}}{\vertex{e}}$, it lies within $\epsilon$ of some other vertex $\vertex{q}$ representing an element of $H$ and we have \begin{eqnarray*}
        d(H, Hw_1')
& \le & d(\vertex{q}, \vertex{b}) \\
& \le & d(\vertex{q}, \vertex{p}) + d(\vertex{p}, \vertex{b}) \\
& \le & (3\delta + \epsilon) + (|w_1'| - 3\delta - \epsilon - 1) \\
&  <  & |w_1'|,
\end{eqnarray*} so $w_1'$ cannot label a geodesic in $\Gamma'$ which starts at $H$, a contradiction. Thus $s_2 < s_1 + 3\delta + \epsilon - d_1 + 1$.

To complete the proof, recall (\ref{eqn:s1_bound}) to see that \begin{eqnarray*}
      |w_2'|
& = & |w_1'| + s_1 - d_1 + |w_2| - 2k + d_2 - s_2 \\
& > & |w_1'| + |w_2| - 2k - 3\delta - \epsilon - 1,
\end{eqnarray*} and so $|w_2'| \ge |w_1'| + |w_2| - 2k - 3\delta - \epsilon$ as required.
\end{proof}

This lemma in particular implies that if a word which labels a geodesic in $\Gamma$ labels a path starting at $H$ which strays too far from $H$, it can never go back. This fact is especially useful in the next sections.

\subsection{Other Useful Results}

The next two results relate to words of minimal length under conjugation.

\begin{lemma}
\label{lemma:min_small_canc}
Suppose that $g \in G$, that $|g^a|_G \ge l$ for all $X$-words $a$, that $w$ is an $X$-word such that $|g^w|_G = l$ and that $w$ has minimal length over all $X$-words with this property. Then $\floor{\canc{g^w}{w^{-1}}} \le \delta$.
\end{lemma}

\begin{figure}
\begin{center}
\input min_conj.pstex_t
\caption{Finding a shortcut over a minimal conjugate $u$}
\label{figure:min_conj}
\end{center}
\end{figure}

\begin{proof}
Suppose not. Let $u = \slex(g^w)$ and $v := \slex(gw)$, and construct a geodesic triangle in $\Gamma$ with corners $\vertex{a}$, $\vertex{b} := \vertex{a} \cdot u$ and $\vertex{c} := \vertex{a} \cdot w^{-1}$ and sides labelled $w$, $u$ and $v$ as illustrated in Figure \ref{figure:min_conj}. Let $i := \floor{\canc{u}{w^{-1}}}$ and let $\vertex{x} := \vertex{a} \cdot u(i)$. Then $\vertex{x}$ corresponds to a vertex $\vertex{y}$ on $\path{\vertex{a}}{\vertex{c}}$ and \begin{eqnarray*}
        d(\vertex{c}, \vertex{x})
& \le & d(\vertex{c}, \vertex{y}) + d(\vertex{y}, \vertex{x}) \\
& \le & |w| - i + \delta.
\end{eqnarray*}

Let $w' := \slex(wu(i))$. Notice that \begin{eqnarray*}
        g^{w'}
& =_G & g^{wu(i)} \\
& =_G & u^{u(i)}
\end{eqnarray*} which is a cyclic conjugate of $u$. In particular, $|g^{w'}|_G \le |u| = l$ so $|g^{w'}|_G = l$ and $|w'| = d(\vertex{c}, \vertex{x}) \le |w| - i + \delta$. Since $w$ had minimal length, we have $i \le \delta$ and we are done.
\end{proof}

The following fact is perhaps obvious, but the rather short proof is included for completeness.

\begin{lemma}
\label{lemma:s_min}
A straight word has minimal length under conjugation.
\end{lemma}

\begin{proof}
Suppose not. Then there exists a straight word $w$ and another $X$-word $a$ such that $|w^a|_G \le |w| - 1$. But then $|w^3|_G = |a(w^a)^3a^{-1}|_G \le 1 + 3(|w| - 1) + 1 < |w^3|$ and $w$ was not straight, a contradiction which proves the lemma.
\end{proof}

Lemma \ref{lemma:conj_quadrilateral}, which will be proved in the next chapter, is useful for conjugacy testing. We provide a special case of that lemma here.

\begin{lemma}
\label{lemma:conj_quadrilateral_gp}
Suppose that $w$ labels a geodesic in $\Gamma'$ starting at $H$, that $u$ labels a geodesic in $\Gamma$ and that $Hwu = Hw$. Let $v = \slex(wuw^{-1})$. Then either

\begin{enumerate}
\item $2|w| \le |u| - |v| + 6\delta + 4\epsilon + 2$ and $2|w| \le |u| + 3\delta + 2\epsilon + 1$, or
\item $|v| \le 3\delta + 2\epsilon + 1$
\end{enumerate}
\end{lemma}

\section{An Upper Bound on Minimal Powers}

In this section, we demonstrate that there if an element of $H$ is a large power of an element of $G$ then it is a proper power of an element of $H$. Recall $M$ and $Q$ from Section \ref{section:conj_const}.

\begin{theorem}
\label{theorem:max_power}
Suppose that $g \in G$ with $g^n \in H$ for some $n \in \mathbb{N}$. Then $g^l \in H$ for some $l \le MQ^2R$ where $R$ is the number of vertices in $B^{\Gamma'}_{6\delta + \epsilon + 1}(H)$.
\end{theorem}

\begin{proof}
Suppose $g$ has finite order. Then $g$ generates a finite subgroup $K$ which, by Proposition \ref{proposition:finite_small_ball}, can be conjugated into a ball in $\Gamma$ of radius at most $4\delta + 2$. As $Q$ is the number of vertices in the $4\delta$-ball in $\Gamma$, the $8\delta$-ball in $\Gamma$ must have less than $Q^2$ vertices and so $K$ has less than $Q^2$ elements. But then $g^n$ is the identity for some $n \le Q^2 \le MQ^2R$. Since the identity is necessarily in $H$, we are done.

We may therefore assume that $g$ is of infinite order, so that $g^m$ has a short-lex straight conjugate for some $0 < m \le MQ^2$ by Corollary \ref{cor:find_sls_and_conj_form}. Pick an $X$-word $a$ such that $\slex(ag^ma^{-1})$ is short-lex straight and the length of $a$ is minimal over all words with this property. Let $x := \slex(ag^ma^{-1})$. We aim to bound $\canc{x^{-i}a}{x^ja}$ for large $i$ and $j$ in order to apply Lemma \ref{lemma:extend_long_coset}.

Notice that $x^k$ has minimal length under conjugation for any $k \ge 1$ by Lemma \ref{lemma:s_min}, and so Lemma \ref{lemma:min_small_canc} implies that $\floor{\canc{x^k}{a}} \le \delta$ and $\floor{\canc{x^{-k}}{a}} \le \delta$ whenever $k \ge 1$.

Suppose for a contradiction that $i \ge 3\delta + 2$, that $j \ge 3\delta + 2$ and that $\canc{x^{-i}a}{x^ja} \ge \frac{3}{2}\delta + 1$. Let $\vertex{b} := \vertex{a} \cdot x^j$, $\vertex{c} := \vertex{b} \cdot a$, $\vertex{e} := \vertex{a} \cdot x^{-i}$ and $\vertex{d} := \vertex{e} \cdot a$. Then we have a geodesic pentagon in $\Gamma$ as illustrated in Figure \ref{figure:sls_power_canc}.

\begin{figure}
\begin{center}
\input sls_power_canc.pstex_t
\caption{A large power of $x$}
\label{figure:sls_power_canc}
\end{center}
\end{figure}

Let $\vertex{x} := \vertex{a} \cdot x^i(l)$ and $\vertex{y} := \vertex{a} \cdot x^{-i}(l)$ where $l := \floor{\frac{3}{2}\delta} + 1$. Notice that $x$ is infinite order, so $|x| \ge 1$. Then \begin{eqnarray*}
        (\vertex{b}, \vertex{c})_{\vertex{a}}
&  =  & \canc{x^j}{x^ja} \\
&  =  & |x^j| - \canc{x^{-j}}{a} \\
& \ge & j|x| - \delta - 1 \\
& \ge & 2\delta + 1 \\
& \ge & l,
\end{eqnarray*} so $\vertex{x}$ corresponds to a vertex $\vertex{x'}$ on $\path{\vertex{a}}{\vertex{c}}$. A similar argument shows that $\vertex{y}$ corresponds to a vertex $\vertex{y'}$ on $\path{\vertex{a}}{\vertex{d}}$.

Since $\canc{x^{-i}a}{x^ja} \ge \frac{3}{2}\delta + 1$ we know that $l \le \canc{x^{-i}a}{x^ja} = (\vertex{c}, \vertex{d})_{\vertex{a}}$, so $\vertex{x'}$ corresponds to $\vertex{y'}$. In particular, $\vertex{x}$ $3$-corresponds to $\vertex{y}$, so $d(\vertex{x}, \vertex{y}) \le 3\delta$ and \begin{eqnarray*}
        |x^{i+j}|
&  =  & d(\vertex{e}, \vertex{b}) \\
& \le & d(\vertex{e}, \vertex{y}) + d(\vertex{y}, \vertex{x}) + d(\vertex{x}, \vertex{b}) \\
& \le & |x^i| - l + 3\delta + |x^j| - l \\
& \le & |x^{i+j}| - 1.
\end{eqnarray*} This is a clear contradiction, so $\canc{x^{-i}a}{x^ja} \le \frac{3}{2}\delta + \frac{1}{2}$ whenever both $i$ and $j$ are at least $3\delta + 2$.

Suppose that $d(H, Hax^i) \ge 6\delta + \epsilon + 2$ for some $i \ge 3\delta + 2$. Then for any $j \ge 3\delta + 2$, Lemma \ref{lemma:extend_long_coset} applies with $w_1 = a^{-1}x^i$, $w_2 = x^ja$ and $k = \frac{3}{2}\delta + \frac{1}{2}$, and implies that \begin{eqnarray*}
        d(H, Hg^{m(i+j)})
&  =  & d(H, Ha^{-1}x^{i+j}a) \\
& \ge & d(H, Ha^{-1}x^i) + |x^ja|_G - 2(\frac{3}{2}\delta + \frac{1}{2}) - 3\delta - \epsilon - 1 \\
&  =  & d(H, Ha^{-1}x^i) + |x^ja|_G - 6\delta - \epsilon - 2 \\
& \ge & j|x| - |a|
\end{eqnarray*} for large $j$. Since this implies $Hg^t$ is far from $H$ for large values of $t$, no power of $g$ can be in $H$. This is a contradiction. We must therefore have $d(H, Ha^{-1}x^i) \le 6\delta + \epsilon + 1$ for each $i \ge 3\delta + 2$.

If $Ha^{-1}x^i = Ha^{-1}x^j$ for some integers $0 \le i < j$ then $Ha^{-1}x^{i+p} = Ha^{-1}x^{j+p}$ for any integer $p$. Setting $p = -i$ we find that $Ha^{-1}x^{j-i} = Ha^{-1}$ so that $g^{m(j-i)} =_G a^{-1}x^{j-i}a$ is an element of $H$.

As there are $R$ elements in $B_{6\delta+\epsilon+1}(H)$, we can assume that $j - i \le R$ and we are done.
\end{proof}

We close this section by making the observation that $g^n \in H$ if and only if $(a^{-1}ga)^n =_F a^{-1}g^na \in a^{-1}Ha$. This implies that the bound in Theorem \ref{theorem:max_power} depends not on $\epsilon$ but on the \textit{minimum} quasiconvexity constant over all subgroups of $G$ which are conjugate to $H$ and that there is a bound on the minimum power for which a group element may be \textit{conjugated} into $H$.

\section{Testing Conjugacy with Elements of a Quasiconvex Subgroup}

In this section, we will outline an algorithm which will test if a given $X$-word is a conjugate of an element of $H$. We begin finding bounds on the lengths of either $g^a$ or $a$ whenever $g$ is either short or of minimal length under conjugation.

\begin{proposition}
\label{prop:short_conj_in_H}
Suppose that $g$ labels a geodesic in $\Gamma$ and that $g^a \in H$ where $a^{-1}$ labels a geodesic in $\Gamma'$ starting at $H$. Then either \begin{enumerate}
\item $|g^a|_G \le 3\delta + 2\epsilon + 1$, or
\item $|a| \le \frac{|g|+3\delta + 2\epsilon + 1}{2}$ and if $g$ has minimal length under conjugation in $G$ then $|a| \le 3\delta + 2\epsilon + 1$.
\end{enumerate}
\end{proposition}

\begin{proof}
Note that Lemma \ref{lemma:conj_quadrilateral_gp} applies with $w = a^{-1}$, $u = g$ and $v = \slex(g^a)$.

The second case of Lemma \ref{lemma:conj_quadrilateral_gp} implies that $|g^a|_G \le 3\delta + 2\epsilon + 1$ so we have the first inequality.

The first case of Lemma \ref{lemma:conj_quadrilateral_gp} implies that $2|a| \le |g| + 3\delta + 2\epsilon + 1$ which proves the first inequality of the second case.

Finally, the first case of Lemma \ref{lemma:conj_quadrilateral_gp} also implies that $2|a| \le |g| - |g^a|_G + 6\delta + 4\epsilon + 2$, and if $g$ has minimal length under conjugation then $|g| \le |g^a|_G$ so that $|a| \le 3\delta + 2\epsilon + 1$ as required for the final inequality.
\end{proof}

We can now prove the result.

\begin{theorem}
Given a word $g$ in the generators of $G$, it is possible to check if there exists, and return, some $a \in G$ such that $g^a \in H$, in time $O(|g|)$.
\end{theorem}

\begin{proof}
We first prove that we can find words $w$ and $x$ of length $O(|g|)$ such that whenever $a^{-1}$ labels a geodesic starting from $H$ and $g^{wa} \in H$ we can bound either $|a|_G$ or $|x^a|_G$. This fact is then used to complete the proof. Recall the notation $g_C$ and $g_L$ from Definition \ref{defn:subwords}. We break into cases depending on the length $|g_C|_G$.

First suppose that $|g_C|_G \le 2L$. Let $w := g_L$ and apply Proposition \ref{prop:short_conj_in_H} to $x := \slex(g_C)$. We find that if $a^{-1}$ labels a geodesic in $\Gamma'$ starting at $H$ and $g^{wa} =_G x^a \in H$ then either $|a| \le \frac{|x|+3\delta + 2\epsilon + 1}{2} \le L + 3\delta + 2\epsilon + 1$ or $|x^a|_G \le 3\delta + 2\epsilon + 1$.

Instead suppose that $|g_C|_G > 2L$ so that $g$ is of infinite order by Proposition \ref{prop:short_conj}. Corollary \ref{cor:find_sls_and_conj_form} with $u = g$ implies that we can find a word $w$ of length $O(|g|)$ and an integer $m \le MQ^2$ where $x := \slex(w^{-1}g^mw)$ is short-lex straight in $\Gamma$, and that this operation takes time $O(|g|)$. Applying Proposition \ref{prop:short_conj_in_H} to $x$ (which is of minimal length under conjugation by Lemma \ref{lemma:s_min}), we find that if $a^{-1}$ labels a geodesic in $\Gamma'$ starting at $H$ and $g^{wa} \in H$ then $(g^m)^{wa} =_G x^a \in H$ and so either $|a| \le 3\delta + 2\epsilon + 1$ or $|x^a|_G \le 3\delta + 2\epsilon + 1$.

In either case, if $a^{-1}$ labels a geodesic in $\Gamma'$ starting at $H$ and $g^{wa} \in H$ then either $|a| \le L + 3\delta + 2\epsilon + 1$ or $|x^a|_G \le 3\delta + 2\epsilon + 1$. Also, $|x|$ and $|w|$ are in $O(|g|)$. The algorithm can therefore be implemented as follows.

For each $X$-word $a$ of length at most $L + 3\delta + 2\epsilon + 1$, test if $g^{wa} \in H$. If this check succeeds for some $a$ then $wa$ is a suitable conjugating element and can be returned. If all checks here fail then continue to the next part. Each check can be performed in time $O(|g|)$ and the number of checks is independent of $g$ so this case can be tested for in time $O(|g|)$.

For all $X$-words $h$ with $|h| \le 3\delta + 2\epsilon + 1$, test if $h \in H$ and $x^a =_G h$ for some element $a \in G$. If such a $a$ is found then $wa$ is a suitable conjugating element and can be returned. If not then no conjugating element exists and we may return. Again, each check can be performed in time $O(|g|)$ by Theorem \ref{thm:linear_conj}, and the number of checks is again independent of $g$ so this case can also be tested for in time $O(|g|)$.
\end{proof}

We remark that this method can of course be modified to return a rational language which contains all such conjugating elements as in Chapter \ref{chapter:conjugacy}, and that it can likely be modified to test if a list of elements can be simultaneously conjugated into the subgroup. This latter result would provide a method of testing whether or not one quasiconvex subgroup is a conjugate of a subgroup of another.

\section{Checking Equality of Double Cosets}

In this section, we demonstrate that it is possible to efficiently determine if two double cosets of quasiconvex subgroups are equal. We begin by showing that it's possible to efficiently find a double coset representative that's ``nearly optimal'' in both directions.

\begin{proposition}
\label{prop:shorten_coset_rep}
Given an $X$-word $w$ one can find an $X$-word $u$ such that $|u| \le |w|$, $Hw = Hu$ and $d(H, Hw) \ge |u| - 3\delta - \epsilon$ in time $O(|w|)$.

Suppose additionally that $K$ is a fixed $\zeta$-quasiconvex subgroup. Then one can find an $X$-word $v$ with $HwK = HvK$ such that $d(K, Kv^{-1}) \ge |v| - 3\delta - \zeta$ and $d(H, Hv) \ge |v| - 8\delta - 2\epsilon - \zeta$ in time $O(|w|)$.
\end{proposition}

\begin{proof}
Begin by replacing $w$ with $\slex(w)$ so that $w$ labels a geodesic in $\Gamma$.

Let $R_0$ be the set containing the empty word and for $i > 0$ define $R_i$ in terms of $R_{i-1}$ by $R_i = \{ \slex(a) : |a| \le 3\delta + \epsilon, b \in R_{i-1}, bw[i]a^{-1} \in H\}$. If $R_{i-1}$ is non-empty then $R_i$ is the set of short-lex least representatives $r$ with $Hr = Hw(i)$ and $|r| \le 3\delta + \epsilon$ (this is clear when $i = 0$ and can be seen by induction for larger values of $i$).

To compute $R_i$ we at worst need to test if $uw[i]v \in H$ for all words $u$ and $v$ of length at most $3\delta + \epsilon$. Each of these tests is linear in word length and so takes constant time -- and the number of tests does not depend on $w$. Thus the time taken to compute the sets $R_i$ is $O(|w|)$.

Whenever $R_i$ is non-empty, let $r_i$ be the short-lex least element of $R_i$. Notice that $r_i$, if it exists, is the short-lex least word with $Hr_i = Hw(i)$, so $|r_i| = d(H, Hr_i) = d(H, Hw(i)) \le |w(i)|$.

Pick the largest value of $i$ such that $R_i$ is nonempty. Let $w_0 := r_i$ and notice that $d(H, Hw(i)) = |w_0| \le 3\delta + \epsilon$. If $i = |w|$ then let $u = r_{|w|}$ and we have $|u| \le |w|$, $Hu = Hw$ and $d(H, Hw) = |u|$ so we are done.

Otherwise notice that $d(H, Hw(i+1)) = 3\delta + \epsilon + 1$ (or $R_{i+1}$ would be non-empty). Since $Hw_0 = Hw(i)$ we have $d(H, Hw_0w[i+1]) = 3\delta + \epsilon + 1$.

Let $u := \slex(w_0w(i:|w|))$ and we see that $|u| \le |w|$ and $Hu = Hw$. By Lemma \ref{lemma:extend_long_coset} with $w_1 = w(i)$, $w_2 = w(i:|w|)$ and $k = 0$ we have \begin{eqnarray*}
        d(H, Hw)
& \ge & d(H, Hw(i+1)) + |w(i+1:|w|)| - 3\delta - \epsilon \\
&  =  & d(H, Hw_0w[i+1]) - 3\delta - \epsilon + |w(i+1:|w|)| \\
&  =  & |w(i+1:|w|)| + 1 \\
&  =  & |w(i:|w|)| \\
& \ge & |u| - |w_0| \\
&  =  & |u| - 3\delta - \epsilon,
\end{eqnarray*} so $u$ satisfies the requirements of the hypothesis and is computed in time $O(|w|)$ as required for the first part.

For the second part, apply the first part as before on $w$ to get a word $u$ with $|u| \le |w|$, $Hw = Hu$ and $d(H, Hw) \ge |u| - 3\delta - \epsilon$. Now apply the first part a second time using the subgroup $K$ instead of $H$ and the word $u^{-1}$ instead of $w$. The proof gives us an $X$-word $v' = \slex(u_0u^{-1}(i:|u|))$ such that $d(K, Kv') \ge |v'| - 3\delta - \zeta$, where $i$ is an integer and $u_0$ is an $X$-word satisfying $|u_0| = 3\delta + \zeta$. Notice that $|v'| \le |u| \le |w|$.

Let $v := v'^{-1}$ and we find that $d(K, Kv^{-1}) \ge |v| - 3\delta - \zeta$ and $|v| \le |w|$ as required, so it remains to show that $d(H, Hv)$ is sufficiently large.

If $|v| \le 8\delta + 2\epsilon + \zeta$ then we are done, so suppose that $|v| \ge 8\delta + 2\epsilon + \zeta + 1$. Since $|v| \le |u|$, we have $|u| \ge 8\delta + 2\epsilon + \zeta + 1$ as well.

Let $t$ label a geodesic in $\Gamma'$ connecting $H$ to $Hv$. If $|v| - |t| \le 5\delta + 2\epsilon$ then $d(H, Hv) \ge |v| - 5\delta - 2\epsilon$ so we are done. Thus assume that $|v| - |t| \ge 5\delta + 2\epsilon + 1$. Let $j := 5\delta + 2\epsilon + 1$.

\begin{figure}
\begin{center}
\input short_coset_rep.pstex_t
\caption{The double coset representatives}
\label{figure:short_coset_rep}
\end{center}
\end{figure}

Construct a geodesic triangle in $\Gamma$ with corners $\vertex{a}$, $\vertex{b} := \vertex{a} \cdot u(|u|-i)$ and $\vertex{c} := \vertex{a} \cdot v$ as in Figure \ref{figure:short_coset_rep}. Noting that $u(|u|-i) =_G u^{-1}(i:|u|) =_G u_0^{-1}v'$ we may take the side labels to be $u(|u|-i)$, $v$ and $u_0$. Then \begin{eqnarray*}
        (\vertex{b}, \vertex{c})_{\vertex{a}}
& \ge & d(\vertex{a}, \vertex{b}) - d(\vertex{b}, \vertex{c}) \\
&  =  & |u| - |u_0| \\
& \ge & (8\delta + 2\epsilon + \zeta + 1) - (3\delta + \zeta) \\
& \ge & 5\delta + 2\epsilon + 1
\end{eqnarray*} and $\vertex{p} := \vertex{a} \cdot u(j)$ corresponds to a point $\vertex{q}$ on $\path{\vertex{a}}{\vertex{c}}$.

Construct a second geodesic triangle with corners $\vertex{a}$, $\vertex{c}$ and $\vertex{d} := \vertex{c} \cdot t^{-1}$, picking $\slex(vt^{-1})$ as the side label for $\path{\vertex{a}}{\vertex{d}}$. Then \begin{eqnarray*}
        (\vertex{c}, \vertex{d})_{\vertex{a}}
& \ge & d(\vertex{a}, \vertex{c}) - d(\vertex{c}, \vertex{d}) \\
&  =  & |v| - |t| \\
& \ge & 5\delta + 2\epsilon + 1 \\
& \ge & j
\end{eqnarray*} and $\vertex{q}$ therefore corresponds to a vertex $\vertex{r}$ on $\path{\vertex{a}}{\vertex{d}}$. Since $vt^{-1} \in H$, $\vertex{r}$ is within $\epsilon$ of a vertex $\vertex{s}$ representing an element of $H$ so that $d(H, Hu(j)) \le d(\vertex{p}, \vertex{s}) \le 2\delta + \epsilon$. But \begin{eqnarray*}
        d(H, Hu(j))
& \ge & d(H, Hu) - |u| + j \\
& \ge & |u| - 3\delta - \epsilon - |u| + j \\
&  =  & 2\delta + \epsilon + 1
\end{eqnarray*} and we have a contradiction. Thus the proposition is proved.
\end{proof}

Armed with this tool we can now test equality of double coset representatives.

\begin{theorem}
Suppose $K$ is a fixed $\zeta$-quasconvex subgroup. If $u$ and $v$ are $X$-words then it is possible to test whether $HuK = HvK$ in time $O(|u| + |v|)$.
\end{theorem}

\begin{proof}
Let $u_1$ and $v_1$ be the words obtained by applying the second part of Proposition \ref{prop:shorten_coset_rep} on $K$ with the words $u$ and $v$ respectively. Since these words are obtained in time $O(|u| + |v|)$ and satisfy $Hu_1K = HuK$ and $Hv_1K = HvK$, we replace $u$ with $u_1$ and $v$ with $v_1$.

If $HuK = HvK$ then there exist $X$-words $h \in H$ and $k \in K$ with $uk =_G hv$. We may assume that $h$ and $k$ are picked to minimize $|h| + |k|$ and in particular label geodesics in $\Gamma$. Let $\vertex{b} := \vertex{a} \cdot h$, $\vertex{c} := \vertex{b} \cdot v$ and $\vertex{d} := \vertex{a} \cdot u$. Then we have a geodesic quadrilateral in $\Gamma$ with side labels $h$, $v$, $k$ and $u$. Pick some geodesic connecting $\vertex{a}$ to $\vertex{c}$ to split this quadrilateral into two geodesic triangles. This quadrilateral is illustrated in Figure \ref{figure:double_coset_reps}.

The next part of the proof is to demonstrate that each corner has a meeting point close to it. This will either give a bound on the lengths of $h$ and $k$, or a bound on the lengths of $u$ and $v$. In the latter case, we will prove that the number of vertices on $\path{\vertex{d}}{\vertex{c}}$ which $2$-correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ is also bounded to give a bound once again on the lengths of $h$ and $k$.

\begin{figure}
\begin{center}
\input double_coset_reps.pstex_t
\caption{The double coset representatives}
\label{figure:double_coset_reps}
\end{center}
\end{figure}

Suppose that some vertex $\vertex{p}$ on $\path{\vertex{b}}{\vertex{c}}$ $2$-corresponds to a vertex on $\path{\vertex{c}}{\vertex{d}}$. Then since $K$ is $\zeta$-quasiconvex and $k$ labels a geodesic in $\Gamma$, we have some vertex $\vertex{q}$ in $\Gamma$ which represents an element of $K$ with $d(\vertex{p}, \vertex{q}) \le 2\delta + \zeta$. In particular, \begin{eqnarray*}
        d(K, Kv^{-1})
& \le & d(\vertex{q}, \vertex{p}) + d(\vertex{p}, \vertex{b}) \\
& \le & 2\delta + \zeta + |v| - d(\vertex{p}, \vertex{c}) \\
& \le & d(K, Kv^{-1}) + 3\delta + \zeta + 2\delta + \zeta - d(\vertex{p}, \vertex{c}),
\end{eqnarray*} so $d(\vertex{p}, \vertex{c}) \le 5\delta + 2\zeta$. This implies no vertex $\vertex{p}$ on $\path{\vertex{b}}{\vertex{c}}$ which $2$-corresponds to a vertex on $\path{\vertex{c}}{\vertex{d}}$ can have $d(\vertex{p}, \vertex{c}) > 5\delta + 2\zeta$. This can only be the case if either $\floor{(\vertex{a}, \vertex{d})_{\vertex{c}}} \le 5\delta + 2\zeta$ or $\floor{(\vertex{a}, \vertex{b})_{\vertex{c}}} \le 5\delta + 2\zeta$.

A similar argument with vertices on $\path{\vertex{b}}{\vertex{c}}$ tells us that $\floor{(\vertex{a}, \vertex{c})_{\vertex{d}}} \le 4\delta + 2\zeta$.

Repeating this argument again on the remaining two corners gives $\floor{(\vertex{a}, \vertex{c})_{\vertex{b}}} \le 9\delta + 3\epsilon + \zeta$ and either $\floor{(\vertex{b}, \vertex{c})_{\vertex{a}}} \le 10\delta + 3\epsilon + \zeta$ or $\floor{(\vertex{c}, \vertex{d})_{\vertex{a}}} \le 10\delta + 3\epsilon + \zeta$.

We will now prove that $|h| + |k| \le B := 28\delta + 2P(\epsilon+\zeta) + 6\epsilon + 4\zeta + 2$ where $P$ is the number of vertices in $B^\Gamma_{2\delta + \epsilon + \zeta}(\vertex{a})$.

Suppose that $(\vertex{b}, \vertex{c})_{\vertex{a}} \le (\vertex{c}, \vertex{d})_{\vertex{a}}$. Then $|h| = (\vertex{b}, \vertex{c})_{\vertex{a}} + (\vertex{a}, \vertex{c})_{\vertex{b}} \le 10\delta + 3\epsilon + \zeta + 9\delta + 3\epsilon + \zeta + 1 \le 19\delta + 6\epsilon + 2\zeta + 1$ and similarly $|k| \le 9\delta + 2\zeta + 1$. Thus $|h| + |k| \le 28\delta + 6\epsilon + 4\zeta + 2 \le B$.

It remains to consider the case where $(\vertex{b}, \vertex{c})_{\vertex{a}} \ge (\vertex{c}, \vertex{d})_{\vertex{a}}$.

Suppose that $i$ is an integer and the vertex $\vertex{p_i} := \vertex{d} \cdot k(i)$ $2$-corresponds to a vertex $\vertex{q_i} := \vertex{a} \cdot h(i')$. Notice that $i' := (\vertex{c}, \vertex{d})_{\vertex{a}} - (\vertex{a}, \vertex{c})_{\vertex{d}} + i$.

There is a vertex $\vertex{r_i} \in \Gamma$ representing an element of $K$ such that $d(\vertex{p_i}, \vertex{r_i}) \le \zeta$ and similarly there is a vertex $\vertex{s_i} \in \Gamma$ representing an element of $H$ such that $d(\vertex{q_i}, \vertex{s_i}) \le \epsilon$. Let $w_i$ label a geodesic in $\Gamma$ connecting $\vertex{s_i}$ to $\vertex{r_i}$ and observe that $|w_i| = d(\vertex{s_i}, \vertex{r_i}) \le 2\delta + \epsilon + \zeta$. See Figure \ref{figure:double_coset_h_k_long} for a complete picture.

\begin{figure}
\begin{center}
\input double_coset_h_k_long.pstex_t
\caption{Finding a shorter $h$ and $k$}
\label{figure:double_coset_h_k_long}
\end{center}
\end{figure}

Suppose that more than $P(\epsilon + \zeta)$ vertices on $\path{\vertex{d}}{\vertex{c}}$ $2$-correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ so that there exist integers $i < j - \epsilon - \zeta$ with $w_i = w_j$. Let $k_1$, $k_2$ and $k_3$ label geodesics in $\Gamma$ connecting $\vertex{a}$ to $\vertex{r_i}$, $\vertex{r_i}$ to $\vertex{r_j}$ and $\vertex{r_j}$ to $\vertex{c}$ respectively. Define $h_1$, $h_2$ and $h_3$ to label geodesics connecting $\vertex{a}$, $\vertex{s_i}$, $\vertex{s_j}$ and $\vertex{b}$ similarly.

Then $w_i =_G h_2w_jk_2^{-1} = h_2w_ik_2^{-1}$ and $w_i =_G h_3vk_3^{-1}$ so that \begin{eqnarray*}
        u
& =_G & hvk^{-1} \\
& =_G & h_1h_2h_3vk_3^{-1}k_2^{-1}k_1^{-1} \\
& =_G & h_1h_2w_ik_2^{-1}k_1^{-1} \\
& =_G & h_1w_ik_1^{-1} \\
& =_G & h_1h_3vk_3^{-1}k_1^{-1},
\end{eqnarray*} but then $|h_1h_3| + |k_1k_3| \le |h| + 2\epsilon + |k| + 2\zeta - 2(j-i) < |h| + |k|$ and $h_1h_3v =_G uk_1k_3$ which contradicts minimality of $|h| + |k|$. Thus at most $P(\epsilon + \zeta)$ vertices on $\path{\vertex{d}}{\vertex{c}}$ can correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$ and by counting corresponding vertices we have $|h| \le 19\delta + 6\epsilon + 2\zeta + P(\epsilon + \zeta) + 1$ and $|k| \le 9\delta + 2\zeta + P(\epsilon + \zeta) + 1$. But then $|h| + |k| \le 28\delta + 6\epsilon + 4\zeta + 2P(\epsilon + \zeta) + 2 = B$ as required and the claim is proved.

We thus test, for each pair of $X$-words $h$ and $k$ with $|h| + |k| \le B$ whether $h \in H$, $k \in K$ and $uk =_G hv$. If for some pair of words all three of these checks succeed, the double cosets are equal. If this does not happen then $HuK \ne HvK$. These checks can be performed in time $O(|u| + |v|)$, and the number of them is independent of $u$ and $v$, so the whole operation takes time $O(|u| + |v|)$. The theorem is proved.
\end{proof}

\section{Conclusion and Possible Further Work}

Much of the further work for Chapter \ref{chapter:conjugacy} can be generalised to the problem of testing whether a list of words can be conjugated into a quasiconvex subgroup. One might similarly wish to reduce the rather inefficient constant used in Theorem \ref{theorem:max_power}.

In the case of testing equality of double cosets, a method was outlined which would find a near-minimal coset representative. A more careful argument might show that it is possible to find the short-lex least representative for a given coset or double coset in linear time. This would of course trivially solve the problem of testing equality of double cosets.

\chapter{$X$-graphs and Hyperbolicity}

\label{chapter:qc_coset}

\section{Introduction}

This chapter is largely based on work by Foord in his PhD thesis \cite{foord2000thesis}. Foord studies some properties of coset Cayley graphs of word-hyperbolic groups with respect to quasiconvex subgroups. The work here slightly generalises this as well as providing some improved constants relating to these results. We will work with $X$-graphs, as detailed in Section \ref{section:xgraph}. The reader is invited to recap that section before continuing as some of the definitions there have been neglected until now.

A rather vague outline of this chapter is given below. The statements will be made rather more precise in the next section.

We first show that graph morphisms $f$ between $X$-graphs which preserve edge labels and directions (we call these $X$-maps), and have quasiconvex $f^{-1}(f(\vertex{e}))$ for some vertex $\vertex{e}$, preserve hyperbolicity. We define a concept of ``eventually isomorphic $k$-balls,'' IB($k$), and show that if the $X$-graphs are hyperbolic then IB($k$) is preserved by these $X$-maps, too.

It turns out that if the domain has IB($k$) for every $k \ge 0$ (we use IB($\infty$) as a shorthand) and the target has IB($k$) for ``large enough'' $k$ then the target also has IB($\infty$). This fact is used to offer an alternative proof that coset Cayley graphs of word-hyperbolic groups relative to torsion-free quasiconvex subgroups satisfy a slightly stronger condition than IB($\infty$).

Finally, a simple implication of IB($\infty$) upon the set of words labelling geodesics distant from base point of an $X$-graph is demonstrated.

\section{Definitions}

In this section, we define the constructions that we will be working with later.

\begin{definition}
\label{def:connected}
Given a set of vertices $\Gamma'$ in a graph $\Gamma$, the \textbf{subgraph of $\Gamma$ induced by $\Gamma'$} is $\Gamma'$ together with every edge in $\Gamma$ which connects two vertices in $\Gamma'$.

A set $\Gamma'$ of vertices in an $X$-graph $\Gamma$ is a \textbf{connected vertex subset} or \textbf{CVS} if the subgraph of $\Gamma$ induced by $\Gamma'$ is connected. Where we are not concerned with the full $X$-graph $\Gamma$, we will simply say that $\Gamma'$ is an $X$-CVS.

If $\Gamma'$ is an $X$-CVS, $\vertex{p} \in \Gamma'$ and $w$ is an $X$-word, $w$ is a \textbf{$\Gamma'$-word} at $p$ if $p \cdot w(i) \in \Gamma'$ for each $i \in \{ 1, \ldots, |w| \}$.
\end{definition}

That is, a $\Gamma'$-word at $\vertex{p}$ is a word labelling a path starting at $\vertex{p}$ whose vertices are all inside $\Gamma'$, and a CVS is a set of vertices which are pairwise connected by $\Gamma'$-words. Notice that a finite ball is in particular a CVS.

Much of this section concerns the similarity of CVSs, which we define in terms of graph morphisms.

\begin{definition}
\label{def:isomorphic}
Let $\Gamma_1$ and $\Gamma_2$ be $X$-CVSs. A map $f : \Gamma_1 \to \Gamma_2$ is an \textbf{$X$-map} if it can be extended to a graph morphism of the subgraphs induced by $\Gamma_1$ and $\Gamma_2$ which preserves edge labels and directions.
\end{definition}

The existence of an extension to the induced graph is enough to prove that an $X$-map $f$ is defined completely once $f(\vertex{p})$ is known for any single vertex $\vertex{p}$. We prove this now.

\begin{proposition}
\label{proposition:xmap_defined_by_point}
Suppose that both $\Gamma_1$ and $\Gamma_2$ are $X$-CVSs and let $f : \Gamma_1 \to \Gamma_2$ be any function which sends edges to edges and vertices to vertices. Then $f$ is an $X$-map if and only if $f(\vertex{p} \cdot w) = f(\vertex{p}) \cdot w$ for all $\Gamma_1$-words $w$ at vertices $\vertex{p}$ in $\Gamma_1$.

In particular, if $f : \Gamma_1 \to \Gamma_2$ and $g : \Gamma_1 \to \Gamma_2$ are $X$-maps and $\vertex{q}$ is a vertex in $\Gamma_1$, then $f = g$ if and only $f(\vertex{q}) = g(\vertex{q})$.
\end{proposition}

\begin{proof}
Suppose $f$ is an $X$-map and let $\tilde{f}$ be the extension of $f$ to the subgraphs induced by $\Gamma_1$ and $\Gamma_2$.

Since $\tilde{f}$ preserves edge labels and directions, given a vertex $\vertex{p}$ in $\Gamma_1$ and element $x \in X$, if there is an edge $e$ which is labelled $x$ and starts at $\vertex{p}$, then $\tilde{f}(e)$ is labelled $x$, starts at $f(\vertex{p})$ and ends at $f(\vertex{p}) \cdot x$. This implies that $f(\vertex{p} \cdot x) = f(\vertex{p}) \cdot x$. The same is true for edges labelled $x$ which end at $\vertex{p}$, so $f(\vertex{p} \cdot u) = f(\vertex{p}) \cdot u$ for any $\Gamma_1$-word $u$ at $\vertex{p}$ of length $1$. Now for any $\Gamma_1$-word $w$ at $\vertex{p}$, \begin{eqnarray*}
      f(\vertex{p} \cdot w)
& = & f((\ldots((\vertex{p} \cdot w[1]) \cdot w[2]) \ldots ) \cdot w[|w|] ) \\
& = & (\ldots((f(\vertex{p}) \cdot w[1]) \cdot w[2]) \ldots ) \cdot w[|w|] \\
& = & f(\vertex{p}) \cdot w,
\end{eqnarray*} as required.

We now prove the converse. Suppose that for all $\Gamma_1$-words $w$ and vertices $\vertex{p}$ in $\Gamma_1$ we have $f(\vertex{p} \cdot w) = f(\vertex{p}) \cdot w$. Notice that for any $x \in X$, since $x$ and $x^{-1}$ are $X$-words, the endpoints and directions of any edges pointing into and out of $\vertex{p}$ with label $x$ are preserved, thus $f$ can be extended to a graph morphism and is therefore an $X$-map.

For the last part, it is clear that $f \ne g$ if $f(\vertex{q}) \ne g(\vertex{q})$. Suppose that $f(\vertex{q}) = g(\vertex{q})$. For any vertex $\vertex{r} \in \Gamma_1$ there is a $\Gamma_1$ word, say $w$, with $\vertex{q} \cdot w = \vertex{r}$. But then \begin{eqnarray*}
      f(\vertex{r})
& = & f(\vertex{q} \cdot w) \\
& = & f(\vertex{q}) \cdot w \\
& = & g(\vertex{q}) \cdot w \\
& = & g(\vertex{r})
\end{eqnarray*} and $f = g$ as required.
\end{proof}

The first part of Proposition \ref{proposition:xmap_defined_by_point} will be used frequently without reference.

Another simple fact to note is that $X$-maps, being restrictions of graph morphisms, define contractions of metric spaces.

\begin{proposition}
\label{proposition:contraction}
Suppose that $\Gamma_1$ and $\Gamma_2$ are graphs in which all edges have length 1, that $f : \Gamma_1 \to \Gamma_2$ is a morphism of graphs and that $\vertex{a}$ and $\vertex{b}$ are vertices in $\Gamma$. Then $d(f(\vertex{a}), f(\vertex{b})) \le d(\vertex{a}, \vertex{b})$.
\end{proposition}

\begin{proof}
Note that any geodesic path connecting $\vertex{a}$ to $\vertex{b}$ must be mapped to a path connecting $f(\vertex{a})$ to $f(\vertex{b})$.  Since edges are sent to edges and vertices are sent to vertices, there is a path in $\Gamma_2$ connecting $f(\vertex{a})$ to $f(\vertex{b})$ of length $d(\vertex{a}, \vertex{b})$, so $d(f(\vertex{a}), f(\vertex{b})) \le d(\vertex{a}, \vertex{b})$.
\end{proof}

Again, we will use this proposition often without reference.

When determining whether two balls are the ``same,'' it is convenient to ensure that not only is there a bijective $X$-map between them, but that this map preserves the centres.

\begin{definition}
If $\Gamma_1$ and $\Gamma_2$ are $X$-graphs then an $X$-map $f : B^{\Gamma_1}_k(\vertex{p_1}) \to B^{\Gamma_2}_k(\vertex{p_2})$ is a \textbf{morphism of balls} if $f(\vertex{p_1}) = \vertex{p_2}$. We say $f$ is an \textbf{isomorphism of balls} if $f$ is bijective, and in this case we say $B^{\Gamma_1}_k(\vertex{p_1})$ and $B^{\Gamma_2}_k(\vertex{p_2})$ are \textbf{ball isomorphic}.
\end{definition}

We can show that if an $X$-map either maps from an $X$-graph or is a morphism of balls then it is surjective. In particular, injective morphisms of balls are isomorphisms of balls.

\begin{proposition}
\label{proposition:xmap_surjective}
Suppose that both $\Gamma_1$ and $\Gamma_2$ are connected vertex sets of $X$-graphs and $f : \Gamma_1 \to \Gamma_2$ is an $X$-map. \begin{enumerate}
\item If $\Gamma_1$ is an $X$-graph then $f$ is surjective.
\item If both $\Gamma_1$ and $\Gamma_2$ are balls of the same radius and $f$ is a ball morphism then $f$ is surjective.
\end{enumerate}
\end{proposition}

\begin{proof}
Suppose that $\Gamma_1$ is an $X$-graph. Pick any vertex $\vertex{q}$ in $\Gamma_1$. Since $X$-CVSs have connected induced subgraphs, given any vertex $\vertex{r}$ in $\Gamma_2$ there is a $\Gamma_2$-word at $f(\vertex{q})$, say $w$, with $f(\vertex{q}) \cdot w = \vertex{r}$. Then $w$ is a $\Gamma_1$-word at $\vertex{q}$ (as any $X$-word is), so $f(\vertex{q}) \cdot w = f(\vertex{q} \cdot w)$ and $\vertex{q} \cdot w$ is a vertex in $\Gamma_1$ which maps to $\Gamma_2$. Thus $f$ is surjective.

Similarly, suppose that $\Gamma_1$ and $\Gamma_2$ are balls of the same radius, $R$ say, that $f$ is a ball morphism, that $\vertex{q}$ is the centre of $\Gamma_1$ and that $\vertex{r} \in \Gamma_2$. Then since $f$ is a ball morphism, $f(\vertex{q})$ is the centre of $\Gamma_2$ so there is a $\Gamma_2$-word at $f(\vertex{q})$, say $w$, of length at most $R$ which satisfies $f(\vertex{q}) \cdot w = \vertex{r}$. But then $w$ is a $\Gamma_1$-word (as any $X$-word of length at most $R$ is), so once again $f(\vertex{q}) \cdot w = f(\vertex{q} \cdot w)$ and $f$ is surjective.
\end{proof}

\begin{figure}
\begin{center}
\input ball_not_iso.pstex_t
\caption{The $1$-balls around $H$ and $Ha$ are equal but not isomorphic}
\label{figure:ball_not_iso}
\end{center}
\end{figure}

The restriction that the centre of the ball is preserved is justified since one can produce an example of an $X$-graph where two equal radius balls around different points are equal as sets but not isomorphic as balls, illustrated below.

\begin{example}
Let $G$ be the free group on the set $\{a, b\}$. Let $H$ be the subgroup of $G$ generated by $ba^{-1}$, $b^2a$, $b^{-2}a$ and $b^{-1}a^2$, and let $\Gamma$ be its coset Cayley graph with respect to $X$, which is illustrated in Figure \ref{figure:ball_not_iso}. The tree structures on the left and right of the illustration represent subgraphs of the Cayley graph of $G$ with respect to $\{a, b\}$.

Notice that if $\vertex{x}$ is a vertex in $\Gamma$ which is neither $H$ nor $Ha$ then $d(H, \vertex{x}) = d(Ha, \vertex{x})$, so if $k > 0$ then $B_k(H) = B_k(Ha)$ as sets. However, $ab^{-1}$ labels a loop at $H$ but not $Ha$, so there is no $X$-map from $B_k(H)$ to $B_k(Ha)$ which sends $H$ to $Ha$. In particular, these balls are not ball isomorphic.
\end{example}

We now define a concept of ``mostly homogeneous''. The GIB property and IB property for a single graph correspond to the definitions by Foord.

\begin{definition}
Suppose that $\Gamma$ is an $X$-graph with base vertex $\vertex{b}$. Then for non-negative $k \in \mathbb{Z}$ we say:

$\Gamma$ has \textbf{IB($k$)} if there exists some $K$ such that $B_k(\vertex{p})$ and $B_k(\vertex{q})$ are ball isomorphic for any vertices $\vertex{p}, \vertex{q} \in \Gamma$ with $d(\vertex{b}, \vertex{p}) \ge K$ and $d(\vertex{b}, \vertex{q}) \ge K$. Thus there is a canonical $k$-ball of $\Gamma$ which balls of radius $k$ which are sufficiently far from $\vertex{b}$ are ball isomorphic to. We label this ball \textbf{$\canonicalball{k}{\Gamma}$}.

Suppose $S$ is a collection of $X$-graphs which all satisfy $IB(k)$. Then we say $S$ satisfies $IB(k)$ if $\canonicalball{k}{\Gamma_1}$ and $\canonicalball{k}{\Gamma_2}$ are ball isomorphic for any two elements $\Gamma_1$ and $\Gamma_2$ in $S$.

Suppose $G$ is some group generated by $X$ with Cayley graph $\Gamma_G$. Then $\Gamma$ has \textbf{GIB($k$)} with respect to $G$ if $\{\Gamma, \Gamma_G\}$ has $IB(k)$.

Where the presentation is understood, we will refer to a subgroup of a group as having IB($k$) or GIB($k$) if its associated coset Cayley graph does.

Denote by \textbf{IB($\infty$)} the property of having IB($k$) for any $k \ge 0$ and define \textbf{GIB($\infty$)} similarly.
\end{definition}

In other words, these properties imply that provided you can't see more than a given finite distance and are sufficiently far from the base point it is impossible to tell where you are in the graph, or which graph you are in.

The concept of quasiconvexity of subgroups (Definition \ref{def:quasiconvex_sg}) is a special case of a similar condition for subsets of a graph. We state this condition in terms of $X$-graphs.

\begin{definition}
Suppose $\Gamma$ is an $X$-graph. Then a set $S$ of vertices in $\Gamma$ is $\epsilon$-quasiconvex if whenever $w$ is a word labelling a geodesic between two vertices $\vertex{s}$ and $\vertex{t}$ in $S$ and $i \le |w|$ there is a vertex $\vertex{u} \in S$ with $d(\vertex{s} \cdot w(i), \vertex{u}) \le \epsilon$.
\end{definition}

We will be studying the case of an $X$-map $f$ where $f^{-1}(\vertex{b})$ is quasiconvex for the base point $\vertex{b}$ of the target $X$-graph.

In \cite{foord2000thesis}, Foord proves that for a quasiconvex subgroup $H$ of a word-hyperbolic group $G$, the coset Cayley graph with respect to any finite generating set of $G$ is hyperbolic. He also shows that it has GIB($\infty$) if and only if the index $|C_G(h) : C_G(h) \cap H|$ is finite for any $h \in H$. In particular, this is true of any torsion free quasiconvex subgroup. However, the hyperbolicity constant given there is rather large, and no bounds on the constants involved in the GIB result are given.

It is the aim of this chapter to generalise this work somewhat by dropping some of the restrictions that one graph be a Cayley graph, and to provide some rather lower constants.

\section{A Tighter Bound on the Thinness of Triangles}

\label{section:qc_thin}

The aim of this section is to demonstrate that hyperbolicity carries over through $X$-maps whose inverse of a single vertex is quasiconvex, and in particular that coset Cayley graphs of quasiconvex subgroups of word-hyperbolic groups are themselves hyperbolic. This result is a generalisation of Theorem 4.1.3.3 from \cite{foord2000thesis}, with a rather smaller constant (the constant given there was exponential in $\delta$ and $\epsilon$). A similar statement to Foord's with a similarly exponential constant is given by Ilya Kapovich in \cite{kapovich2002geometry}.

We begin by giving a simple condition which implies that a triangle is thin.

\begin{definition}
\label{defn:nearly_thin}
A triangle in an $X$-graph is \textbf{$(\delta, \epsilon)$-nearly thin relative to $\vertex{a}$} if $\vertex{a}$ is a vertex and given any pair $\vertex{p}$ and $\vertex{q}$ of corresponding points on the triangle, one of the following is true:
\begin{enumerate}
\item \label{item:corr} $\vertex{p}$ is within $6\delta$ of $\vertex{q}$,
\item \label{item:close} $\vertex{p}$ is within $5\delta+\epsilon$ of $\vertex{a}$, or
\item \label{item:feh} there are corresponding vertices $\vertex{p'}$ and $\vertex{q'}$ on the same sides of the triangle as $\vertex{p}$ and $\vertex{q}$ such that $d(\vertex{p}, \vertex{p'}) \le 3\delta + 1$ and either property 1 or property 2 holds for $\vertex{p'}$ and its corresponding vertex $\vertex{q'}$.
\end{enumerate}
\end{definition}

\begin{lemma}
\label{lemma:qc_tri}
Suppose $\Gamma$ is a $\delta$-vertex-hyperbolic $X$-graph with base point $\vertex{e}$, that $\Gamma'$ is an $X$-graph and that $f : \Gamma \to \Gamma'$ is an $X$-map such that $f^{-1}(f(\vertex{e}))$ is $\epsilon$-quasiconvex. If a geodesic triangle is $(\delta, \epsilon)$-nearly thin relative to $f(\vertex{e})$ then it is $16\delta+2\epsilon+2$-vertex-thin.

If all vertices on all sides of the triangle are further than $5\delta + \epsilon$ from $f(\vertex{e})$ then it is $12\delta+2$-vertex-thin.
\end{lemma}

\begin{proof}
Suppose that the geodesic triangle has corners $\vertex{A}$, $\vertex{B}$ and $\vertex{C}$ and that $\vertex{P}$ is on $\path{\vertex{A}}{\vertex{B}}$ and correponds to $\vertex{Q}$ on $\path{\vertex{A}}{\vertex{C}}$. If $\vertex{P}$ satisfies property \ref{item:feh} then let $\vertex{P'}$ be a vertex on $\path{\vertex{A}}{\vertex{B}}$ which is within $3\delta+1$ of $\vertex{P}$ and satisfies property \ref{item:corr} or property \ref{item:close}; if not then simply let $\vertex{P'} := \vertex{P}$.

Suppose that $\vertex{P'}$ satisfies property \ref{item:close}. Since $d(\vertex{P'}, f(\vertex{e})) \le 5\delta + \epsilon$ we need only prove that $d(\vertex{P}, \vertex{Q}) \le 16\delta + 2\epsilon + 2$. By swapping $\vertex{B}$ and $\vertex{C}$, we see that $\vertex{Q}$ must also satisfy one of the three properties in Definition \ref{defn:nearly_thin}. Pick the vertex $\vertex{Q'}$ in the same manner as $\vertex{P'}$ so that $d(\vertex{Q}, \vertex{Q'}) \le 3\delta + 1$.

If $\vertex{Q'}$ also satisfies property \ref{item:close} then \begin{eqnarray*}
        d(\vertex{P}, \vertex{Q})
& \le & d(\vertex{P}, \vertex{P'}) + d(\vertex{P'}, f(\vertex{e})) + d(f(\vertex{e}), \vertex{Q'}) + d(\vertex{Q'}, \vertex{Q}) \\
& \le & 3\delta + 1 + 5\delta + \epsilon + 5\delta + \epsilon + 3\delta + 1 \\
&  =  & 16\delta + 2\epsilon + 2,
\end{eqnarray*} as required. If not, $\vertex{Q'}$ satisfies property \ref{item:corr}; in this case swap $\vertex{P}$ and $\vertex{Q}$ so that the only case left to deal with is the case where $\vertex{P'}$ satisfies property \ref{item:corr}.

To finish off, then, suppose that $\vertex{P'}$ satisfies property \ref{item:corr} so that $\vertex{P'}$ is within $6\delta$ of its corresponding point $\vertex{R}$ on $\path{\vertex{A}}{\vertex{C}}$. Notice that $d(\vertex{R}, \vertex{Q}) = d(\vertex{P'}, \vertex{P}) \le 3\delta + 1$, so \begin{eqnarray*}
        d(\vertex{P}, \vertex{Q})
& \le & d(\vertex{P}, \vertex{P'}) + d(\vertex{P'}, \vertex{R}) + d(\vertex{R}, \vertex{Q}) \\
& \le & 3\delta + 1 + 6\delta + 3\delta + 1 \\
&  =  & 12\delta + 2,
\end{eqnarray*} which completes the proof.
\end{proof}

We now prove the main result for this section.

\begin{theorem}
\label{theorem:xg_h_qc_implies_h}
Suppose $\Gamma$ is a $\delta$-vertex-hyperbolic $X$-graph with base point $\vertex{e}$, that $\Gamma'$ is an $X$-graph and that $f : \Gamma \to \Gamma'$ is an $X$-map such that $f^{-1}(f(\vertex{e}))$ is $\epsilon$-quasiconvex. Then $\Gamma'$ is $16\delta+2\epsilon+2$-vertex-hyperbolic and geodesic triangles, with corners on vertices, in which all vertices on all sides are further than $5\delta + \epsilon$ from $f(\vertex{e})$ are $12\delta+2$-vertex-thin.
\end{theorem}

\begin{proof}
Suppose we are given a geodesic triangle in $\Gamma'$ with corners $\vertex{A}$, $\vertex{B}$ and $\vertex{C}$. Suppose $f(\vertex{e}) \cdot w = \vertex{A}$, $\vertex{a} \cdot u = \vertex{B}$ and $\vertex{A} \cdot v = \vertex{B} \cdot x = \vertex{C}$, where $w$ labels a geodesic starting at $f(\vertex{e})$, and $u$, $v$ and $x$ label the sides of the triangle. The situation in $\Gamma'$ is illustrated in Figure \ref{figure:coset_thin_tri_in_ccay}.

\begin{figure}
\begin{center}
\input coset_thin_tri_in_ccay.pstex_t
\caption{A general triangle in $\Gamma'$}
\label{figure:coset_thin_tri_in_ccay}
\end{center}
\end{figure}

\begin{figure}
\begin{center}
\input coset_thin_tri_in_cay.pstex_t
\caption{A hexagon in $\Gamma$ which maps to the triangle in $\Gamma'$}
\label{figure:coset_thin_tri_in_cay}
\end{center}
\end{figure}

We aim to translate the construction into $\Gamma$ in order to use hyperbolicity of $\Gamma$ to show that the triangle is $(\delta,\epsilon)$-nearly thin relative to $f(\vertex{e})$ in order to use Lemma \ref{lemma:qc_tri}.

Let $\vertex{a} := \vertex{e} \cdot w$, $\vertex{b} := \vertex{a} \cdot u$, $\vertex{c} := \vertex{b} \cdot x$, $\vertex{a'} := \vertex{c} \cdot v^{-1}$ and $\vertex{e'} := \vertex{a'} \cdot w^{-1}$. Let $h$ label a geodesic in $\Gamma$ connecting $\vertex{e}$ to $\vertex{e'}$. See Figure \ref{figure:coset_thin_tri_in_cay} for an illustration of this construction.

We know that $\vertex{A} \cdot uxv^{-1} = \vertex{A}$, so $f(\vertex{a'}) = \vertex{A}$ and then $f(\vertex{e'}) = f(\vertex{e})$. Because $f$ is $\epsilon$-quasiconvex, each vertex $f(\vertex{e} \cdot h(j))$ must be within within $\epsilon$ of $f(\vertex{e})$.

Including $\vertex{e}$, these six points then form a geodesic hexagon in $\Gamma$ with sides labelled in turn $w$, $u$, $x$, $v^{-1}$, $w^{-1}$ and $h^{-1}$. Let $g$ label a geodesic connecting $\vertex{a}$ to $\vertex{a'}$, and let $w'$ and $u'$ label geodesics connecting $\vertex{e'}$ to $\vertex{a}$ and $\vertex{a'}$ to $\vertex{b}$ respectively.

Since $f(\vertex{e}) \cdot w = f(\vertex{e} \cdot hw') = f(\vertex{e}) \cdot w'$ and $w$ labels a geodesic starting at $f(\vertex{e})$, we must have \begin{equation} \label{eqn:w'_long}
|w'| \ge |w|.
\end{equation} Similarly $\vertex{A} \cdot u' = \vertex{A} \cdot u$ and $u$ labels a geodesic starting at $\vertex{A}$, so \begin{equation} \label{eqn:u'_long}
|u'| \ge |u|.
\end{equation}

\begin{figure}
\begin{center}
\input coset_thin_no_corr.pstex_t
\caption{No point on $\path{\vertex{a}}{\vertex{b}}$ can chain-correspond only to a point on $\path{\vertex{a'}}{\vertex{e'}}$}
\label{figure:coset_thin_no_corr}
\end{center}
\end{figure}

Now (\ref{eqn:w'_long}) implies that $(\vertex{a}, \vertex{e'})_{\vertex{a'}} = \frac{|g|+ |w| - |w'|}{2} \le \frac{|g|}{2}$ and (\ref{eqn:u'_long}) implies that $(\vertex{a}, \vertex{b})_{\vertex{a'}} = \frac{|g| + |u'| - |u|}{2} \ge \frac{|g|}{2}$. Putting these together, we find that
\begin{equation} \label{eqn:no_corr}
(\vertex{a}, \vertex{b})_{\vertex{a'}} \ge (\vertex{a}, \vertex{e'})_{\vertex{a'}},
\end{equation} and no point on $\path{\vertex{a}}{\vertex{b}}$ can chain-correspond only to a point on $\path{\vertex{a'}}{\vertex{e'}}$ (and vice versa), as illustrated in Figure \ref{figure:coset_thin_no_corr}. Looking at distances from $\vertex{a}$, this is equivalent to \begin{equation} \label{eqn:no_corr2}
(\vertex{a'}, \vertex{b})_{\vertex{a}} \le (\vertex{a'}, \vertex{e'})_{\vertex{a}}.
\end{equation}

Also, observe that (\ref{eqn:u'_long}) implies that $\frac{|u| + |v| - |x|}{2} \le \frac{|u'| + |v| - |x|}{2}$, or in other words
\begin{equation} \label{eqn:no_far_side}
(\vertex{B}, \vertex{C})_{\vertex{A}} \le (\vertex{b}, \vertex{c})_{\vertex{a'}}.
\end{equation}

Suppose now that $\vertex{P} = \vertex{A} \cdot u(i)$ is a vertex on $\path{\vertex{A}}{\vertex{B}}$ which corresponds to a vertex $\vertex{Q} = \vertex{A} \cdot v(i)$ on $\path{\vertex{A}}{\vertex{C}}$. Let $\vertex{p} := \vertex{a} \cdot u(i)$ and let $\vertex{q} := \vertex{a'} \cdot v(i)$ so that $\vertex{P} = f(\vertex{p})$ and $\vertex{Q} = f(\vertex{q})$. By relabelling, any pair of corresponding vertices can be made to fit this construction.

We can now observe some cases which will be treated in order of increasing distance from $\vertex{p}$ to $\vertex{a}$.

\begin{figure}
\begin{center}
\input coset_thin_swap_sides.pstex_t
\caption{Vertices on $\path{\vertex{a}}{\vertex{e}}$ are equal to vertices on $\path{\vertex{a'}}{\vertex{e'}}$ after applying $f$}
\label{figure:coset_thin_swap_sides}
\end{center}
\end{figure}

\textbf{Case 1}: Suppose that $i \le \min\{(\vertex{a'}, \vertex{b})_{\vertex{a}}, (\vertex{e}, \vertex{e'})_{\vertex{a}}\}$. Notice that (\ref{eqn:no_corr2}) implies that $(\vertex{a'}, \vertex{e'})_{\vertex{a}} \ge (\vertex{a'}, \vertex{b})_{\vertex{a}}$ so that $i \le (\vertex{a'}, \vertex{e'})_{\vertex{a}}$ as well. Then this case applies if and only if $\vertex{p}$ $3$-corresponds to a vertex $\vertex{r} = \vertex{a} \cdot w^{-1}(i)$ on $\path{\vertex{e}}{\vertex{a}}$ as illustrated in Figure \ref{figure:coset_thin_swap_sides}.

Now let $\vertex{s} := \vertex{a'} \cdot w^{-1}(i)$; that is, the point ``opposite'' $\vertex{r}$. Using Propostion \ref{proposition:contraction}, observe that \begin{equation}
\label{eqn:s_P_close}
d(\vertex{P}, f(\vertex{s})) = d(\vertex{P}, f(\vertex{r})) \le d(\vertex{p}, \vertex{r}) \le 3\delta.
\end{equation} This case has a number of sub-cases, depending on which side of the hexagon $\vertex{s}$ chain-corresponds to. Again, we will treat them with smallest $i$ first.

\textbf{Case 1a}: Suppose that $i \le (\vertex{e'}, \vertex{a})_{\vertex{a'}}$ so that $\vertex{s}$ corresponds to a vertex on $\path{\vertex{a'}}{\vertex{a}}$. By (\ref{eqn:no_corr}) we know that $(\vertex{e'}, \vertex{a})_{\vertex{a'}} \le (\vertex{a}, \vertex{b})_{\vertex{a'}}$ so that vertex in turn corresponds to a vertex on $\path{\vertex{a'}}{\vertex{b}}$. Finally, by (\ref{eqn:no_far_side}) we have $i \le (\vertex{b}, \vertex{c})_{\vertex{a'}}$, so $\vertex{s}$ $3$-corresponds to a vertex on $\path{\vertex{a'}}{\vertex{c}}$. Since $d(\vertex{a'}, \vertex{s}) = i = d(\vertex{a'}, \vertex{q})$, this vertex must be $\vertex{q}$, and $d(f(\vertex{s}), \vertex{Q}) \le d(\vertex{s}, \vertex{q}) \le 3\delta$ so (\ref{eqn:s_P_close}) implies that $d(\vertex{P}, \vertex{Q}) \le 6\delta$ as required for property \ref{item:corr} of Definition \ref{defn:nearly_thin}.

For Cases 1b and 1c, we may therefore assume that $i > (\vertex{e'}, \vertex{a})_{\vertex{a'}}$ so that $\vertex{s}$ corresponds to a vertex on $\path{\vertex{e'}}{\vertex{a}}$.

\textbf{Case 1b}: Suppose that $\vertex{s}$ $2$-corresponds to a vertex $\vertex{t}$ on $\path{\vertex{e}}{\vertex{a}}$ as in Figure \ref{figure:coset_thin_self_corr}. Notice that \begin{eqnarray*}
        d(\vertex{a}, \vertex{t})
&  =  & d(f(\vertex{a}), f(\vertex{t})) \\
&  =  & d(f(\vertex{a'}), f(\vertex{t})) \\
& \le & d(f(\vertex{a'}), f(\vertex{s})) + d(f(\vertex{s}), f(\vertex{t}))\\
& \le & d(\vertex{a'}, \vertex{s}) + d(\vertex{s}, \vertex{t}) \\
& \le & i + 2\delta.
\end{eqnarray*}
and $i \le (\vertex{e'}, \vertex{a'})_{\vertex{a}}$ as noted in Case 1, so
\begin{eqnarray*}
        i
&  =  & d(\vertex{a'},\vertex{s}) \\
&  =  & d(\vertex{a},\vertex{t}) - (\vertex{a'},\vertex{e'})_{\vertex{a}}+(\vertex{a},\vertex{e'})_{\vertex{a'}} \\
& \le & i + 2\delta - (\vertex{a'},\vertex{e'})_{\vertex{a}}+(\vertex{a},\vertex{e'})_{\vertex{a'}} \\
& \le & (\vertex{e'},\vertex{a})_{\vertex{a'}} + 2\delta.
\end{eqnarray*} Let $\vertex{p'} := \vertex{a} \cdot u(j)$ where $j = \max\{i-2\delta, 0\}$. Then $j \le (\vertex{e'},\vertex{a})_{\vertex{a'}}$, so $f(\vertex{p'})$ is in Case 1a. Since $j-i \le 2\delta$, we have shown that $\vertex{P}$ satisfies property \ref{item:feh} of Definition \ref{defn:nearly_thin}. In Case 4, we will use the fact that every vertex within $\delta + 1$ of $\vertex{P}$ also satisfies this property.

\begin{figure}
\begin{center}
\input coset_thin_self_corr.pstex_t
\caption{In this situation, the dashed path must be longer than $d(\vertex{a'}, \vertex{s})$}
\label{figure:coset_thin_self_corr}
\end{center}
\end{figure}

\textbf{Case 1c}: The final subcase has $\vertex{s}$ $2$-corresponding to a vertex $\vertex{t}$ on $\path{\vertex{e}}{\vertex{e'}}$. Since $f$ is quasiconvex, $d(f(\vertex{t}), f(\vertex{e})) \le \epsilon$, so $d(\vertex{P}, f(\vertex{e})) \le d(\vertex{p}, \vertex{r}) + d(\vertex{r}, \vertex{t}) + \epsilon \le 5 \delta + \epsilon$ and $\vertex{P}$ satisfies property \ref{item:close} of Definition \ref{defn:nearly_thin}.

All cases where $i \le \min\{(\vertex{a'}, \vertex{b})_{\vertex{a}}, (\vertex{e}, \vertex{e'})_{\vertex{a}}\}$ have now been covered, so we may assume that either $i > (\vertex{a'}, \vertex{b})_{\vertex{a}}$ or $i > (\vertex{e}, \vertex{e'})_{\vertex{a}}$.

\textbf{Case 2}: Suppose that $i \le (\vertex{a'}, \vertex{b})_{\vertex{a}}$ so that $i > (\vertex{e}, \vertex{e'})_{\vertex{a}}$. 
By (\ref{eqn:no_corr2}) we have $i \le (\vertex{a'}, \vertex{e'})_{\vertex{a}}$, so $\vertex{p}$ must $3$-correspond to a vertex $\vertex{r}$ on $\path{\vertex{e}}{\vertex{e'}}$. Notice that $d(f(\vertex{r}), f(\vertex{e})) \le \epsilon$ and so $d(\vertex{P}, f(\vertex{e})) \le d(\vertex{p}, \vertex{r}) + \epsilon \le 3\delta + \epsilon$ and $\vertex{P}$ satisfies property \ref{item:close} of Definition \ref{defn:nearly_thin}.

We have now dealt with all possibilities where $i\le(\vertex{a'},\vertex{b})_{\vertex{a}}$ and may thus assume that $i > (\vertex{a'}, \vertex{b})_{\vertex{a}}$.

\begin{figure}
\begin{center}
\input coset_thin_near_corr.pstex_t
\caption{Again, the dashed paths cannot be too short}
\label{figure:coset_thin_near_corr}
\end{center}
\end{figure}

\textbf{Case 3}: Suppose that $|u| - i \ge (\vertex{a'}, \vertex{c})_{\vertex{b}}$ so that $\vertex{p}$ $2$-corresponds to a vertex $\vertex{r} = \vertex{a'} \cdot v(j)$ on $\path{\vertex{a'}}{\vertex{c}}$, as illustrated in Figure \ref{figure:coset_thin_near_corr}. Similar to Case 1b, we have \begin{eqnarray*}
        j
&  =  & d(\vertex{a'}, \vertex{r}) \\
&  =  & d(\vertex{A}, f(\vertex{r})) \\
& \le & d(\vertex{A}, \vertex{P}) + d(\vertex{P}, f(\vertex{r})) \\
& \le & i + d(\vertex{p}, \vertex{r}) \\
& \le & i + 2\delta,
\end{eqnarray*} and by reversing the roles of $i$ and $j$ we find that $i \le j + 2\delta$ and so $|j - i| \le 2\delta$. Now \begin{eqnarray*}
        d(\vertex{P}, \vertex{Q})
& \le & d(\vertex{p}, \vertex{q}) \\
& \le & d(\vertex{p}, \vertex{r}) + d(\vertex{r}, \vertex{q}) \\
&  =  & d(\vertex{p}, \vertex{r}) + |i - j| \\
& \le & 4\delta,
\end{eqnarray*} and we have shown that $\vertex{P}$ satisfies property \ref{item:corr} of Definition \ref{defn:nearly_thin}.

\begin{figure}
\begin{center}
\input bad_corr.pstex_t
\caption{The construction used in Case 4}
\label{figure:bad_corr}
\end{center}
\end{figure}

\textbf{Case 4}: The remaining case has $|u| - i < (\vertex{a'}, \vertex{c})_{\vertex{b}}$ so that $\vertex{p}$ $2$-corresponds to some vertex $\vertex{r}$ on $\path{\vertex{b}}{\vertex{c}}$. Observe that \begin{eqnarray*}
        |v|
&  =  & d(\vertex{C}, \vertex{A}) \\
& \le & d(\vertex{c}, \vertex{a}) \\
& \le & d(\vertex{c}, \vertex{r}) + d(\vertex{r}, \vertex{p}) + d(\vertex{p}, \vertex{a}) \\
& \le & |x| - d(\vertex{b}, \vertex{r}) + d(\vertex{r}, \vertex{p}) + d(\vertex{p}, \vertex{a}) \\
& \le & |x| - (|u| - i) + 2\delta + i \\
&  =  & |x| - |u| + 2i + 2\delta,
\end{eqnarray*} but then by re-arranging, we see \begin{eqnarray*}
        i
& \le & (\vertex{B}, \vertex{C})_{\vertex{A}} \\
&  =  & \frac{|u| + |v| - |x|}{2} \\
& \le & i + \delta
\end{eqnarray*} Now let $\vertex{p'} = \vertex{a} \cdot u(j)$ where $j = \max\{i - \delta - 1, 0\}$. Then either $j=0$ so that $f(\vertex{p'})$ is in Case 1a or $j > 0$ and $j + \delta < (\vertex{B}, \vertex{C})_{\vertex{A}}$, so in either case $f(\vertex{p'})$ is not in Case 4. If $f(\vertex{p'})$ is in Case 1b then there is a vertex $\vertex{p''}$ with $d(f(\vertex{p''}), \vertex{P}) \le 3\delta + 1$ and $f(\vertex{p''})$ satisfies property \ref{item:corr} of Definition \ref{defn:nearly_thin}. Otherwise, $d(\vertex{P}, f(\vertex{p'})) \le \delta + 1$ and $f(\vertex{p'})$ satisfies property \ref{item:corr} or property \ref{item:close} of Definition \ref{defn:nearly_thin}. In either case, $\vertex{P}$ satisfies property \ref{item:feh} of Definition \ref{defn:nearly_thin}.

Combining this with Case 1b we see that $\vertex{P}$ is within $3\delta+1$ of a vertex $\vertex{P'}$ which satisfies one of the first two properties in the claim.

Since all vertices $\vertex{P}$ have been shown to satisfy a property in Definition \ref{defn:nearly_thin}, the triangle is $(\delta, \epsilon)$-nearly thin relative to $f(\vertex{e})$. Lemma \ref{lemma:qc_tri} completes the proof.
\end{proof}

It seems likely that the proof above should adapt to some classes of general (unlabelled) hyperbolic graphs and spaces, though restricting to $X$-graphs simplifies the situation as given a connected structure in the target, one need only read off the path labels to find a connected structure in the domain which maps onto it.

The result is for example not true when mapping between general graphs: let $\Gamma$ be the Cayley graph of $\mathbb{Z}$ under a cyclic generator, and let $f$ identify $2^k+1$ to $2^{k+1}-1$ for $k \ge 2$. Then $\Gamma$ is $0$-vertex-hyperbolic and $f^{-1}(f(0))$ contains only one vertex (so is $0$-quasiconvex) but the resulting graph, a part of which is illustrated in Figure \ref{figure:not_hyp}, is not hyperbolic at all: for $k \ge 3$, $\vertex{x} = \vertex{y} = f(2^k+1)$ and $\vertex{z} = f(2^k+2^{k-1})$ are the corners of a geodesic triangle which is not $2^{k-1}-3$-vertex-thin.

In any case, the result \textit{does} apply to coset Cayley graphs of quasiconvex subgroups.

\begin{figure}
\begin{center}
\input not_hyp.pstex_t
\caption{A segment of a non-hyperbolic graph}
\label{figure:not_hyp}
\end{center}
\end{figure}

\begin{corollary}
If $G = <\!X\!>$ is a $\delta$-hyperbolic group and $H$ is a $\epsilon$-quasiconvex subgroup then the coset Cayley graph of $H$ is $16\delta + 2\epsilon + 2$-vertex-hyperbolic, and geodesic triangles in the coset Cayley graph with corners on vertices in which all vertices on all sides are further than $5\delta + \epsilon$ from $H$ are $12\delta+2$-vertex-thin.
\end{corollary}

\begin{proof}
If the Cayley and coset Cayley graphs are $\Gamma$ and $\Gamma'$ respectively, the map $f : \Gamma \to \Gamma' : 1 \cdot w \mapsto Hw$ has $f^{-1}(f(\vertex{e})) = H$ when $\vertex{e}$ represents the identity element of $G$, so Theorem \ref{theorem:xg_h_qc_implies_h} finishes the proof.
\end{proof}

Notice that the second part of the result above is a hint that there is some ball about the base point, outside of which the contraction behaves much like the original graph.

\section{Ball Morphisms and Loops}

In this section, we provide some means to recognise when two balls are isomorphic, which we use later to prove some results about IB and GIB. The following result is a slightly more powerful version of Lemma 4.1.1.3 from \cite{foord2000thesis} (the statement there only finds a loop of length $2k+1$, although the observation that it can be taken to label a geodesic is made inside a later proof). The $1$ in $2k+1$ can be eliminated by considering metric balls in the graphs rather than subgraphs induced by balls of vertices.

\begin{proposition}
\label{prop:loop_in_ball}
Suppose $\Gamma_1$ and $\Gamma_2$ are $X$-graphs.

If $\vertex{x_1} \in \Gamma_1$ and $\vertex{x_2} \in \Gamma_2$ are vertices and for some non-negative integer $k$ the balls $B_k(\vertex{x_1})$ and $B_k(\vertex{x_2})$ are not isomorphic, then there is some $X$-word $w$ of length at most $2k+1$ which labels a loop at $\vertex{x_2}$ but does not label a loop at $\vertex{x_1}$ or vice versa.

If there is an $X$-ball morphism from $B_k(\vertex{x_1})$ to $B_k(\vertex{x_2})$ then $w$ labels a loop at $\vertex{x_2}$.

Suppose additionally that $\Gamma$ is an $X$-graph with IB($2k+1$) and that the centre of $\canonicalball{2k+1}{\Gamma}$ is $\vertex{p}$. If for $i \in \{1, 2\}$ there is an $X$-ball morphism from $\canonicalball{2k+1}{\Gamma}$ to $B_{2k+1}^{\Gamma_i}(\vertex{x_i})$ then $w$ can be taken to label a geodesic in $\Gamma$ which starts at $\vertex{p}$.
\end{proposition}

\begin{proof}
We assume there is no word $w$ as in the hypothesis and demonstrate that there is an isomorphism of balls.

Proposition \ref{proposition:xmap_defined_by_point} implies that if an $X$-map $f:B_k(\vertex{x_1})\to B_k(\vertex{x_2})$ exists sending $\vertex{x_1}$ to $\vertex{x_2}$, it must map $\vertex{x_1} \cdot w$ to $\vertex{x_2} \cdot w$ for all $B_k(\vertex{x_1})$-words $w$, and if this describes a well-defined function then that function is an $X$-map. Let us aim for a contradiction and assume, then, that this map is not well defined, so there exist $X$-words $u$ and $v$ such that $u$ and $v$ are both $B_k(\vertex{x_1})$-words at $\vertex{x_1}$ and $B_k(\vertex{x_2})$-words at $\vertex{x_2}$, and that $\vertex{x_1} \cdot u = \vertex{x_1} \cdot v$ but $\vertex{x_2} \cdot u \ne \vertex{x_2} \cdot v$.

For each $0 \le j \le |u|$, let $z_j$ be the label of a geodesic which connects $\vertex{x_1}$ to $\vertex{x_1} \cdot \nolinebreak u(j)$. Notice that $|z_j| \le k$ so $z_j$ is a $B_k(\vertex{x_2})$-word at $\vertex{x_2}$ for all $j$. Suppose that for some $0 \le l < |u|$ we have $\vertex{x_2} \cdot z_l = \vertex{x_2} \cdot u(l)$, but $\vertex{x_2} \cdot z_{l+1} \ne \vertex{x_2} \cdot u(l+1)$. Let $w := z_lu[l+1]z_{l+1}^{-1}$. Then $|w| \le |z_l| + 1 + |z_{l+1}| \le 2k+1$, and $w$ labels a loop at $\vertex{x_1}$ but not $\vertex{x_2}$, a contradiction. If there is no such $l$, we may replace $u$ with $z_{|u|}$, which labels a geodesic which starts at $\vertex{x_1}$, and in particular we then have $|u| \le k$.

These arguments can also be applied to $v$, so we can also assume that $|v| \le k$. Now if $\vertex{x_1} \cdot u = \vertex{x_1} \cdot v$ but $\vertex{x_2} \cdot u \ne \vertex{x_2} \cdot v$ then let $w := uv^{-1}$. Since $|w| \le |u| + |v| \le 2k$ and $w$ labels a loop at $\vertex{x_1}$ but not $\vertex{x_2}$, we again have a contradiction.

Thus $\vertex{x_1} \cdot u = \vertex{x_1} \cdot v$ implies that $\vertex{x_2} \cdot u = \vertex{x_2} \cdot v$ and there is an $X$-map from $B_k(\vertex{x_1})$ to $B_k(\vertex{x_2})$ which sends $\vertex{x_1}$ to $\vertex{x_2}$, ie.\ a ball morphism. Swapping $\Gamma_1$ and $\Gamma_2$ shows a ball morphism exists in the other direction. Since ball morphisms are surjective by Proposition \ref{proposition:xmap_surjective}, this implies these balls contain the same number of vertices and so the morphism must also be injective, ie. an isomorphism.

To prove the second statement, let $f$ be the $X$-ball morphism. Note that if $w$ labels a loop at $\vertex{x_1}$ then \begin{eqnarray*}
      \vertex{x_2} \cdot w
& = & f(\vertex{x_1}) \cdot w \\
& = & f(\vertex{x_1} \cdot w) \\
& = & f(\vertex{x_1}) = \vertex{x_2},
\end{eqnarray*} so $w$ must also label a loop at $\vertex{x_2}$. Thus any loop present at the centre of only one ball must be a loop at $\vertex{x_2}$ and not at $\vertex{x_1}$.

For the final statement, let $f_i$ ($i = 1, 2$) be the given $X$-ball morphisms. Notice that if $w'$ labels a geodesic in $\canonicalball{2k+1}{\Gamma}$-word connecting $\vertex{p}$ to $\vertex{p} \cdot w$, then for each $i$ we have \begin{eqnarray*}
      \vertex{x_i} \cdot w'
& = & f_i(\vertex{p}) \cdot w' \\
& = & f_i(\vertex{p} \cdot w') \\
& = & f_i(\vertex{p} \cdot w) \\
& = & f_i(\vertex{p}) \cdot w \\
& = & \vertex{x_i} \cdot w,
\end{eqnarray*} so $w'$ labels a loop at $\vertex{x_i}$ if and only if $w$ does. We may therefore replace $w$ with $w'$ and the result is proved.
\end{proof}

The simple identifying property given above allows us to much more easily determine whether or not two balls are isomorphic. We now give a characterisation of loops in certain $X$-graphs.

\begin{lemma}
\label{lemma:conj_quadrilateral}
Suppose that $\Gamma$ and $\Gamma'$ are $X$-graphs, that $\Gamma$ is $\delta$-vertex-hyperbolic and has base point $\vertex{a}$ and that $f : \Gamma \to \Gamma'$ is an $X$-map where $f^{-1}(f(\vertex{a}))$ is $\epsilon$-quasiconvex.

Suppose further that $w$ labels a geodesic in $\Gamma'$ which starts at $f(\vertex{a})$, that $u$ labels a geodesic in $\Gamma$ which starts at $\vertex{a} \cdot w$ and that $f(\vertex{a} \cdot w) = f(\vertex{a} \cdot wu)$. Then for any $X$-word which labels a geodesic in $\Gamma$ which starts at $\vertex{a}$ with $\vertex{a} \cdot v = \vertex{a} \cdot wuw^{-1}$, we have either

\begin{enumerate}
\item $|v| \le |u| - 2|w| + 6\delta + 4\epsilon + 2$, $|v| \le |u| + 3\delta + 2\epsilon + 2$, and $2|w| \le |u| + 3\delta + 2\epsilon + 1$, or
\item $|v| \le 3\delta + 2\epsilon + 1$ and $\frac{|u|}{2} \ge (\vertex{a}, \vertex{a} \cdot wu)_{\vertex{a} \cdot w} \ge \frac{|u|}{2} - \delta$.
\end{enumerate}

In the second case, if $|u| > 2\delta$, let $i := \floor{\frac{|u|}{2}} - \delta$ and there is a word $u'$ with $|u'| \le 5\delta + 1$ such that $\vertex{a} \cdot wu = \vertex{a} \cdot w(|w|-i)u'w(|w|-i:|w|)$.
\end{lemma}

\begin{proof}
Let $v$ be such an $X$-word. Then $f(\vertex{a} \cdot v) = f(\vertex{a})$, so $f(\vertex{a} \cdot v(i))$ is within $\epsilon$ of $f(\vertex{e})$ for all integers $i$. Form a geodesic quadrilateral in $\Gamma$ with corners $\vertex{a}$, $\vertex{b} := \vertex{a} \cdot v$, $\vertex{c} := \vertex{b} \cdot w$ and $\vertex{d} := \vertex{c} \cdot u^{-1} = \vertex{a} \cdot w$, picking $\path{\vertex{b}}{\vertex{c}}$ and $\path{\vertex{a}}{\vertex{d}}$ so that they are both labelled $w$. Split the quadrilateral into two triangles using some geodesic $\path{\vertex{a}}{\vertex{c}}$.

Let $m$ be the number of vertices on $\path{\vertex{b}}{\vertex{c}}$, excluding $\vertex{b}$ itself, which correspond to vertices on $\path{\vertex{a}}{\vertex{b}}$, in other words $\floor{(\vertex{a}, \vertex{c})_{\vertex{b}}}$. Let $\vertex{x}$ be the vertex on $\path{\vertex{b}}{\vertex{c}}$ with $d(\vertex{x}, \vertex{b}) = m$, so that $\vertex{x}$ corresponds to a vertex $\vertex{y}$ on $\path{\vertex{a}}{\vertex{b}}$. Since $\path{\vertex{a}}{\vertex{b}}$ is a geodesic and $f^{-1}(f(\vertex{a}))$ is $\epsilon$-quasiconvex, there exists some $\vertex{g} \in \Gamma$ such that $f(\vertex{g}) = f(\vertex{a})$ and $d(\vertex{g}, \vertex{y}) \le \epsilon$. Then $d(f(\vertex{x}), f(\vertex{b})) = d(f(\vertex{x}), f(\vertex{g})) \le d(\vertex{x}, \vertex{g}) \le \delta + \epsilon$. Since $w$ labels a geodesic in $\Gamma'$ which starts at $f(\vertex{a}) = f(\vertex{b})$, we therefore have $m = d(\vertex{x}, \vertex{b}) = d(f(\vertex{x}), f(\vertex{b})) \le \delta + \epsilon$.

Let $n$ be the number of vertices on $\path{\vertex{a}}{\vertex{d}}$, excluding $\vertex{a}$ itself, which $2$-correspond to a vertex on $\path{\vertex{a}}{\vertex{b}}$. Then a similar construction to that in the previous paragraph shows that $n \le 2\delta + \epsilon$.

\begin{figure}
\begin{center}
\input quad_case_1.pstex_t
\caption{A loop $u$ close to $H$}
\label{figure:conj_quad_close}
\end{center}
\end{figure}

Suppose that no vertex on $\path{\vertex{b}}{\vertex{c}}$ $2$-corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$, as in Figure \ref{figure:conj_quad_close}. Let $l$ be the number of vertices on $\path{\vertex{a}}{\vertex{b}}$ which chain-correspond only to vertices on $\path{\vertex{d}}{\vertex{c}}$. By counting corresponding vertices we find that \begin{equation} \label{eqn:v_length}
|v| + 1 = l + (m+1) + (n+1).
\end{equation}

Note that there are $|w|-m$ or $|w|-m+1$ vertices on $\path{\vertex{b}}{\vertex{c}}$ which $2$-correspond to vertices on $\path{\vertex{c}}{\vertex{d}}$. Similarly, there are $|w|-n$ or $|w|-n+1$ vertices on $\path{\vertex{a}}{\vertex{d}}$ which correspond to vertices on $\path{\vertex{c}}{\vertex{d}}$. Counting vertices again, we see that $|u|$ is within $1$ of $l + (|w|-m) + (|w|-n)$. Combining this with (\ref{eqn:v_length}), we find that $|v| - m - n - 1 =^1 |u| - 2|w| + m + n$, so $|v| =^1 |u| + 2(m + n - |w|) + 1$.

We know that $m + n \le 3\delta + 2\epsilon$, so we can derive $|v| \le |u| - 2|w| + 6\delta + 4\epsilon + 2$. Also, $2|w| \ge m + n$ so $|v| \le |u| + m + n + 2 \le |u| + 3\delta + 2\epsilon + 2$. Finally, $|v| \ge n + m + 1$ so we obtain \begin{eqnarray*}
        2|w|
& \le & |u| - |v| + 2n + 2m + 2 \\
&  =  & |u| - n + m + 1 \\
& \le & |u| + 3\delta + 2\epsilon + 1.
\end{eqnarray*}

\begin{figure}
\begin{center}
\input quad_case_2.pstex_t
\caption{A loop $u$ distant from $H$}
\label{figure:conj_quad_distant}
\end{center}
\end{figure}

All inequalities for the first case of the hypothesis have now been shown to be satisfied. It remains to cover the case where at least one vertex on $\path{\vertex{b}}{\vertex{c}}$ $2$-corresponds to a vertex on $\path{\vertex{a}}{\vertex{d}}$, as in Figure \ref{figure:conj_quad_distant}.

All points on $\path{\vertex{a}}{\vertex{b}}$ must now chain-correspond to points on $\path{\vertex{b}}{\vertex{c}}$ or $\path{\vertex{a}}{\vertex{d}}$ so we have $|v| + 1 \le m + 1 + n + 1$ and in particular $|v| \le 2\epsilon + 3\delta + 1$ as required by the second case.

Note that there is at least one $i$ such that the vertex $\vertex{p} = \vertex{b} \cdot w(i)$ on $\path{\vertex{b}}{\vertex{c}}$ corresponds to a vertex $\vertex{p'}$ on $\path{\vertex{a}}{\vertex{c}}$ which in turn corresponds to a vertex $\vertex{q} = \vertex{a} \cdot w(j)$ on $\path{\vertex{a}}{\vertex{d}}$ for some $j$. For any such points, note that $\vertex{r} := \vertex{a} \cdot w(i)$ has $f(\vertex{r}) = f(\vertex{a} \cdot w(i)) = f(\vertex{b} \cdot w(i))$, so \begin{eqnarray*}
        |i -j|
&  =  & d(\vertex{r}, \vertex{q}) \\
&  =  & d(f(\vertex{r}), f(\vertex{q})) \\
&  =  & d(f(\vertex{p}), f(\vertex{q})) \\
& \le & d(\vertex{p}, \vertex{q}) \\
& \le & 2\delta.
\end{eqnarray*}

This implies that \begin{eqnarray*}
        d(\vertex{a}, \vertex{c})
&  =  & d(\vertex{a}, \vertex{q}) + d(\vertex{a}, \vertex{c}) - d(\vertex{a}, \vertex{q}) \\
&  =  & d(\vertex{a}, \vertex{q}) + d(\vertex{c}, \vertex{p'}) \\
&  =  & d(\vertex{a}, \vertex{q}) + d(\vertex{c}, \vertex{p}) \\
&  =  & d(\vertex{a}, \vertex{q}) + d(\vertex{c}, \vertex{b}) - d(\vertex{b}, \vertex{p}) \\
&  =  & j + |w| - i \\
& \le & |w| + 2\delta.
\end{eqnarray*} Also, since $w$ labels a geodesic which starts at $f(\vertex{b})$ we have \begin{eqnarray*}
        |w|
&  =  & d(f(\vertex{b}), f(\vertex{c})) \\
&  =  & d(f(\vertex{a}), f(\vertex{c})) \\
& \le & d(\vertex{a}, \vertex{c}),
\end{eqnarray*} so \begin{eqnarray*}
&     & \frac{|u|}{2} \\
& \ge & \frac{|u| + |w| - d(\vertex{a}, \vertex{c})}{2}
   =    (\vertex{c}, \vertex{a})_{\vertex{d}} \\
& \ge & \frac{|u|}{2} - \delta.
\end{eqnarray*} Since $(\vertex{a}, \vertex{a} \cdot wu)_{\vertex{a} \cdot w} = (\vertex{c},\vertex{a})_{\vertex{d}}$, we have now shown that the second case applies.

For the last part, let $\vertex{s}$ on $\path{\vertex{b}}{\vertex{c}}$ and $\vertex{t}$ on $\path{\vertex{a}}{\vertex{d}}$ be the vertices at distance $i = \floor{\frac{|u|}{2}} - \delta$ from $\vertex{c}$ and $\vertex{d}$ respectively, so that they chain-correspond to vertices $\vertex{s'}$ and $\vertex{t'}$ on $\path{\vertex{d}}{\vertex{c}}$ at most $2\delta + 1$ apart. We can see now that $d(\vertex{s}, \vertex{t}) \le d(\vertex{s}, \vertex{s'}) + d(\vertex{s'}, \vertex{t'}) + d(\vertex{t'}, \vertex{t}) \le 5\delta + 1$ and letting $u'$ be a word labelling a geodesic path between $\vertex{s}$ and $\vertex{t}$, we have $\vertex{a} \cdot wu = \vertex{a} \cdot w(|w|-i)u'w(|w|-i:|w|)$ as required.
\end{proof}

In particular, we can show that long loops which are far from the base point in the target graph of a quasiconvex $X$-map can be ``pulled'' to shorter loops which are closer to the base point.

\section{IB($\frac{5}{2}\delta$) implies IB($\infty$)}

For torsion free subgroups, Foord demonstrates the GIB($\infty$) property for a specific class of subgroups of word-hyperbolic groups (those subgroups $H$ where $|H : H \cap C_G(h)|$ is finite for all elements $h$ in $H$) by finding a bound on the distance of large loops from the base point of the coset Cayley graph.

We will take a slightly different approach to this problem by first showing that one only needs to bound the distance of \textit{sufficiently large} loops, and in the next section we will provide such a bound.

\begin{proposition}
\label{prop:small_ib_implies_ib}
Suppose that $\Gamma$ and $\Gamma'$ are $X$-graphs, that $\Gamma$ has IB($2k+3\delta+1$) with constant $M$ for some $k \ge \frac{5}{2}\delta$, is $\delta$-vertex-hyperbolic and has base point $\vertex{a}$, that $f : \Gamma \to \Gamma'$ is an $X$-map and that $f^{-1}(f(\vertex{a}))$ is $\epsilon$-quasiconvex.

If $\Gamma'$ has IB($\frac{5}{2}\delta$) with constant $K$ then it has IB($k$) with constant $K' := \max\{M + k - \delta, K + k - \delta, \epsilon + \frac{k + 3\delta}{2} + 2\}$.

If additionally $\{\Gamma, \Gamma'\}$ has IB($\frac{5}{2}\delta$), then it has IB($k$).
\end{proposition}

\begin{proof}
We start by making the observation that since $\Gamma$ has IB($2k + 3\delta + 1$) with constant $M$, it must also have IB($2k+1$) with constant $M$.

Suppose for a contradicton that $\Gamma'$ does not have IB($k$) with constant $K'$. Then there exist vertices $\vertex{x}$ and $\vertex{y}$ which are of distance at least $K'$ from $\vertex{z}$ and such that $B_k(\vertex{x})$ is not isomorphic to $B_k(\vertex{y})$. Let $w$ label a geodesic in $\Gamma'$ connecting $\vertex{z}$ to $\vertex{x}$ and let $\vertex{b} := \vertex{a} \cdot w$ so that $f(\vertex{b}) = \vertex{x}$. Pick $\vertex{c}$ so that $f(\vertex{c}) = \vertex{y}$ in a similar way.

Notice that $d(\vertex{a}, \vertex{b}) = d(\vertex{z}, \vertex{x}) \ge K' \ge M$ and similarly $d(\vertex{a}, \vertex{c}) \ge M$. Since $\Gamma$ has IB($2k+1$) with constant $M$, the $2k+1$-balls around $\vertex{b}$ and $\vertex{c}$ are ball isomorphic to $\canonicalball{2k+1}{\Gamma}$. Then $f$ restricts to ball morphisms from $\canonicalball{2k+1}{\Gamma}$ to both $B_{2k+1}(\vertex{x})$ and $B_{2k+1}(\vertex{y})$.

By Proposition \ref{prop:loop_in_ball}, there is a word $u$ of length at most $2k+1$ which labels a loop at the centre of one ball and not the other, and that loop can be assumed to label a geodesic which starts at the centre of $\canonicalball{2k+1}{\Gamma}$.

Now, Lemma \ref{lemma:conj_quadrilateral} applies. Since $2|w| \ge 2K' > |u| + 2\epsilon + 3\delta + 1$, we must be in the second case of that lemma. In the case where $|u| \le 2\delta$, let $i := 0$ and $u' := u$. Otherwise $|u| > 2\delta$ and let $u'$ be the word given by the final part of Lemma \ref{lemma:conj_quadrilateral}; in this case let $i := \floor{\frac{|u|}{2}} - \delta$. In either case $u'$ satisfies $|u'| \le 5\delta + 1$ and $\vertex{a} \cdot wu = \vertex{a} \cdot w(|w|-i)u'w(|w|-i:|w|)$, and $i$ satisfies $i \le k - \delta$.

Now $d(\vertex{z}, \vertex{y'}) \ge d(\vertex{z}, \vertex{y}) - i \ge K' - k + \delta \ge K$ where $\vertex{y'} = \vertex{y} \cdot w(|w|-i:|w|)^{-1}$, so $B_{\frac{5}{2}\delta}(\vertex{y'})$ is $X$-ball isomorphic to $\canonicalball{\frac{5}{2}\delta}{\Gamma'}$ and $u'$ also labels a loop at $\vertex{y'}$. Now \begin{eqnarray*}
      \vertex{y} \cdot w(|w|-i:|w|)^{-1}u'w(|w|-i:|w|)
& = & \vertex{y'} \cdot u'w(|w|-i:|w|) \\
& = & \vertex{y'} \cdot w(|w|-i:|w|) \\
& = & \vertex{y},
\end{eqnarray*} so $v := w(|w|-i:|w|)^{-1}u'w(|w|-i:|w|)$ labels a loop at $\vertex{y}$.

Notice that $|v| \le 2i + 5\delta + 1 \le 2k + 3\delta + 1$ so $\wordpath{\vertex{b}}{v}$ is contained inside the $2k+3\delta+1$-ball around $\vertex{b}$ and $\wordpath{\vertex{c}}{v}$ is contained inside the $2k+3\delta+1$-ball around $\vertex{c}$. As $\Gamma$ has IB($2k+3\delta+1$) and $\vertex{b}$ and $\vertex{c}$ are sufficiently far from $\vertex{a}$, these balls are ball isomorphic. Since $\vertex{b} \cdot u = \vertex{b} \cdot v$, this implies that $\vertex{c} \cdot u = \vertex{c} \cdot v$ and so \begin{eqnarray*}
      \vertex{y} \cdot u
& = & f(\vertex{c} \cdot u) \\
& = & f(\vertex{c} \cdot v) \\
& = & \vertex{y} \cdot v \\
& = & \vertex{y},
\end{eqnarray*} which contradicts our assumption that $u$ did not label a loop at $\vertex{y}$. In other words, $B_k(\vertex{x})$ is isomorphic to $B_k(\vertex{y})$ and $\Gamma'$ has IB($k$) with constant $K'$, as required.

It remains to prove the last part. If $\{\Gamma, \Gamma'\}$ does not have IB($k$) then $\canonicalball{k}{\Gamma}$ is not isomorphic to $\canonicalball{k}{\Gamma}$. Pick a vertex $\vertex{x} \in \Gamma'$ with $d(\vertex{x}, \vertex{z}) \ge K'$, let $w$ label a geodesic path in $\Gamma'$ which connects $\vertex{z}$ to $\vertex{x}$ and let $\vertex{b} := \vertex{a} \cdot w$. Then the $k$-balls around $\vertex{b}$ and $\vertex{x}$ are ball isomorphic to the canonical balls in their graphs and $B_k(\vertex{x})$ is not ball isomorphic to $B_k(\vertex{b})$.

Since $\Gamma$ has IB($2k+1$) with constant $M$, the $2k+1$-ball around $\vertex{b}$ is ball isomorphic to $\canonicalball{2k+1}{\Gamma}$. Then $f$ restricts to a ball morphism from $\canonicalball{2k+1}{\Gamma}$ to $B_{2k+1}(\vertex{x})$.

Proposition \ref{prop:loop_in_ball} provides us with a non-empty $X$-word $u$ of length at most $2k+1$ which labels a geodesic starting at $\vertex{b}$ and a loop at $\vertex{x}$. As before, $2|w| \ge |u| + 2\epsilon + 3\delta + 1$, so the second case of Lemma \ref{lemma:conj_quadrilateral} applies. Once again, if $|u| \le 2\delta$, let $i := 0$ and $u' := u$. Otherwise $|u| > 2\delta$ and let $u'$ be the word given by the final part of Lemma \ref{lemma:conj_quadrilateral}; in this case let $i := \floor{\frac{|u|}{2}} - \delta$. In either case $u'$ satisfies $|u'| \le 5\delta + 1$ and $\vertex{a} \cdot wu = \vertex{a} \cdot w(|w|-i)u'w(|w|-i:|w|)$, and $i$ satisfies $i \le k - \delta$.

Notice that $d(\vertex{a}, \vertex{b'}) \ge K' - i \ge M$ where $\vertex{b'} := \vertex{a} \cdot w(|w|-i)$, and $d(\vertex{z}, \vertex{x'}) \ge K' - i \ge K$ where $\vertex{x'} := \vertex{z} \cdot w(|w| - i)$. In particular, the $\frac{5}{2}\delta$-balls around $\vertex{b'}$ and $\vertex{x'}$ are ball isomorphic, and so $u'$ labels a loop at $\vertex{b'}$. But then \begin{eqnarray*}
      \vertex{b} \cdot u
& = & \vertex{a} \cdot wu \\
& = & \vertex{a} \cdot w(|w| - i)u'w(|w|-i:|w|) \\
& = & \vertex{b'} \cdot u'w(|w|-i:|w|) \\
& = & \vertex{b'} \cdot w(|w|-i:|w|) \\
& = & \vertex{b},
\end{eqnarray*} so $u$ labels a loop at $\vertex{b}$. This is a contradiction, so $B_k(\vertex{x})$ is ball isomorphic to $B_k(\vertex{b})$ and $\{\Gamma, \Gamma'\}$ has IB($k$) as required to prove the second statement.
\end{proof}

\section{Torsion-free Subgroups have GIB($\infty$)}

Foord proved in Theorem 4.3.1.1 of \cite{foord2000thesis} that torsion free subgroups of word-hyperbolic groups have GIB($k$) for any $k > 0$ but gave no bound on the constant. It is the aim of this section to demonstrate that said bound is in $O(k + \epsilon)$ using some of the work in Chapter \ref{chapter:conjugacy}.

In order to find a bound on the constant for GIB($k$), we only need to exhibit a constant for GIB($\frac{5}{2}\delta$) by Proposition \ref{prop:small_ib_implies_ib}. We do this below, after stating a result which will be used to do so. The reader should recap the constants from Section \ref{section:conj_const}.

The following is a reasonably well known general result; the particular statement here is a restatement of Proposition 2.3 of \cite{bridson2005conjugacy}.

\begin{proposition}
\label{prop:bound_on_conjugator}
Let $G = <\!X\!>$ be a $\delta$-hyperbolic group. If $u$ and $v$ are words which are conjugate in $G$ then there exists a word $x$ such that $x^{-1}ux =_G v$, and \[ |x| \le |u| + |v| + Q^2 + 4\delta. \]
\end{proposition}

The statement in \cite{bridson2005conjugacy} uses a slightly different expression for the constant, but the proof is sufficient to prove the statement here. Now we can move onto our result.

\begin{proposition}
\label{prop:torsion_free_gib}
Suppose that $G$ is $\delta$-hyperbolic with respect to a generating set $X$, and that $H$ is any $\epsilon$-quasiconvex torsion-free subgroup of $G$. Then $H$ has GIB($\frac{5}{2}\delta$) with constant $K = 100MQ^2\delta + 2\epsilon$.
\end{proposition}

\begin{proof}
Let $\Gamma$ be the Cayley graph of $G$ with respect to $X$ and let $\Gamma'$ be the coset Cayley graph of $H$ with respect to $G$. Let $\vertex{a}$ be the vertex representing $H$ in $\Gamma'$ and suppose that some word $w$ labels a geodesic in $\Gamma'$ connecting $\vertex{a}$ to some vertex $\vertex{x}$ and that $B_{\frac{5}{2}\delta}(\vertex{x})$ is not isomorphic to $\canonicalball{\frac{5}{2}\delta}{\Gamma}$.

Proposition \ref{prop:loop_in_ball} gives us a word $u$ labelling a geodesic in $\Gamma$ of length at most $5\delta + 1$ which labels a loop at $\vertex{x}$ but not at the centre of $\canonicalball{\frac{5}{2}\delta}{\Gamma}$, so $u \ne_G 1$. Applying Lemma \ref{lemma:conj_quadrilateral} we see that either $d(\vertex{a}, \vertex{x}) \le \frac{|u| + 3\delta + 2\epsilon}{2} \le K$, in which case we are done, or $|wuw^{-1}|_G \le 3\delta + 2\epsilon$.

By Proposition \ref{prop:bound_on_conjugator}, there is a word $w'$ such that $w'uw'^{-1} =_G wuw^{-1}$ and \begin{eqnarray*}
|w'| & \le & |u| + |wuw^{-1}|_G + Q^2 + 4\delta \\
     & \le & 12\delta + 2\epsilon + Q^2 + 1.
\end{eqnarray*}

Let $z =_G w'^{-1}w$ be the label of a geodesic in $\Gamma$, and note that $z \in C_G(u)$. By Corollary \ref{cor:find_sls_and_conj_form} (with $v = u$), we know that $z =_G u^it$ for some $i$ and some $X$-word $t$ of length at most $8MQ^2|u| + 16\delta \le 64MQ^2\delta$. Then \begin{eqnarray*}
      Hw
& = & Hw'z \\
& = & Hw'u^it \\
& = & Hw't,
\end{eqnarray*} so \begin{eqnarray*}
        d(H, Hw)
& \le & |w'| + |t| \\
& \le & 12\delta + 2\epsilon + Q^2 + 1 + 64MQ^2\delta \\
& \le & 100MQ^2\delta + 2\epsilon,
\end{eqnarray*} as required.
\end{proof}

It is interesting to note that the factor of $\epsilon$ above does not depend on $\delta$ (although the leading constant does rather heavily).

\section{Geodesic Path Labels Under IB}

In this section, we will give some results which show that not just balls but geodesics in an $X$-graph behave in a homogeneous way when they are relatively distant from the base point, assuming IB($\frac{5}{2}\delta$).

\begin{proposition}
Suppose $\Gamma$ is an $X$-graph with base point $\vertex{b}$ which is $\Delta$-vertex-hyperbolic. Suppose that $\Gamma$ has IB($\Delta+1$) with constant $K$, that $w$ labels a geodesic that lies entirely outside of $B_K(\vertex{b})$, and that $\gamma$ is any other path labelled by $w$ and lying entirely outside of $B_K(\vertex{b})$. Then $\gamma$ is a geodesic.
\end{proposition}

\begin{proof}
Suppose the conclusion is false, and suppose the geodesic that $w$ labels starts from $\vertex{p}$ and $\gamma$ starts from $\vertex{q}$. Let $w = w_1aw_2$, where $w_1$ is the longest subword which does label a geodesic starting at $\vertex{q}$, and $a$ is a word of length 1. Let $w_1'$ be a the label of a geodesic such that $\vertex{q} \cdot w_1' = \vertex{q} \cdot w_1a$, so that we must have $|w_1'| \le |w_1|$.

Then we have a geodesic triangle with corners $\vertex{q}$, $\vertex{q} \cdot w_1$ and $\vertex{q} \cdot w_1'$ and the obvious sides connecting them. Let $n := |w_1|$, and for $0 \le i < n$, let $\vertex{p_i} := \vertex{q} \cdot w(i)$ and $\vertex{q_i} := \vertex{q} \cdot w_1'(i)$. Let $\vertex{p_n} := \vertex{q} \cdot w_1$ and $\vertex{q_n} := \vertex{q} \cdot w_1'$. This is illustrated in Figure \ref{figure:geodesic_outside_GIB}.

\begin{figure}
\begin{center}
\input geodesic_outside_GIB.pstex_t
\caption{Geodesic triangle constructed outside of $B_{K-1}(\vertex{b})$}
\label{figure:geodesic_outside_GIB}
\end{center}
\end{figure}

Now, since the triangle above is $\Delta$-thin, we can pick, for each $i$, a word $h_i$ labelling a path from $\vertex{p_i}$ and $\vertex{q_i}$ with $|h_i| \le \Delta$. Now we find that for $0 \le i < n$, each quadrilateral with corners $\vertex{p_i}$, $\vertex{p_{i+1}}$, $\vertex{q_i}$, $\vertex{q_{i+1}}$ lies within $\Delta+1$ of $\vertex{p_i}$, hence it is contained inside the $\Delta+1$-ball around $\vertex{q} \cdot w(i)$, which is isomorphic to the $\Delta+1$-ball around $\vertex{p} \cdot w(i)$ (since this vertex is at a distance of at least $K$ from $H$).

Using a simple induction, we have $\vertex{p} \cdot w_1a = \vertex{p} \cdot w_1'$. But this is a clear contradiction, since $|w_1a| > |w_1'|$, and $w_1a$ labels a geodesic path starting at $\vertex{p}$. Hence no such $w_1'$ existed, and $w$ labels a geodesic starting at $\vertex{q}$.
\end{proof}

By substituting the point $1$ in the group Cayley graph for $\vertex{p}$ in the above argument, we derive the following similar result:

\begin{proposition}
\label{prop:geodesic_outside}
Suppose that $G$ is a finitely generated group, that $H$ is a subgroup with coset Cayley graph $\Gamma'$ which is $\Delta$-vertex-hyperbolic and has GIB($\Delta+1$) with constant $K$. If $w$ is a shortest word representing some group element then any path in $\Gamma'$ labelled by $w$ which lies outside of $B_K(H)$ is a geodesic.
\end{proposition}

It's a well-known result that in hyperbolic spaces, quasigeodesic paths lie close to geodesic paths, so that if geodesic-labelling words in the Cayley graph label geodesics in the coset Cayley graph when they lie outside a certain radius, the same must be true of quasigeodesics (although the radius in question might be larger).

We see the emergence of one ``bad'' ball, centred at $H$ in the coset Cayley graph.

\section{Conclusion and Possible Further Work}

This chapter has demonstrated that in the setting of $X$-graphs, an $X$-map with quasiconvex $f^{-1}(f(\vertex{a}))$ preserves a variety of properties.

In Section \ref{section:qc_thin} it was pointed out that at least some of these facts are not true for general graphs, but it may be that they generalise to more specific classes, like regular graphs (ie.\ those graphs in which every vertex has the same valency). One expects that a $2k$-regular graph ought to admit edge labels and directions to make it into an $X$-graph, and that labelling ought to lift through a graph morphism so that hyperbolicity would be preserved in the case of $2k$-regular graphs. It would seem more difficult to do this in a way which would preserve (labelled) isomorphisms of balls, however.

Similarly, one might ask whether some of the results can be expanded somehow to general hyperbolic spaces. If the spaces embed $X$-graphs in a nice way, this would indeed seem to be the case. What about more general spaces?

\chapter{Hyperbolic Groups are $14$-hyperbolic}

\label{chapter:minimal}

The constant of hyperbolicity of a word-hyperbolic group is dependent on its generating set. For example, a free group, say $F = <a>$ on a free generating set has a vertex hyperbolicity constant of $0$. However introducing a redundant generator will increase this constant, for example $F=<a,b|a^2=b>$ has vertex hyperbolicity constant of $1$. The purpose of this chapter is to investigate the lower bound $\min_\delta(G)$ of this constant for a given group $G$. 

It turns out that there is a single small such bound that applies to all word-hyperbolic groups. Thus, the value of $\min_\delta(G)$ partitions word-hyperbolic groups into a small number of classes. The bounds given here are likely not to be the smallest due to the naive way in which they are derived, however it is the existence of such a bound that is interesting.

\section{Thinness of Quasigeodesic Triangles}

We first show that if we are working in a geodesic metric space in which all geodesic triangles are $\delta$-vertex-thin and we are given a triangle whose sides are all $(1, k)$-quasigeodesics, then the triangle is $\Delta$-vertex-thin for some $\Delta$ depending only on $k$ and $\delta$.

It is well known that in hyperbolic spaces, quasigeodesic paths lie close to geodesic paths; let us briefly investigate the case of $(1, k)$-quasigeodesics in particular.

\begin{lemma}
\label{lemma:qgeo}
Suppose that $\Gamma$ is a $\delta$-vertex-hyperbolic graph, that $\gamma$ is a $(1,k)$-quasigeodesic in $\Gamma$ joining the vertices $\vertex{x}$ and $\vertex{y}$, and that $\alpha$ is a geodesic joining $\vertex{x}$ and $\vertex{y}$.

Then for every vertex $\vertex{p}$ on $\gamma$, there exists a vertex $\vertex{q}$ on $\alpha$ such that $d(\vertex{p}, \vertex{q}) \le \frac{k+1}{2} + \delta$ and $d(\vertex{x}, \vertex{q}) \le d_\gamma(\vertex{x}, \vertex{p}) \le d(\vertex{x}, \vertex{q}) + \frac{3k+1}{2}$.
\end{lemma}

\begin{figure}
\begin{center}
\input 1k_close_geo.pstex_t
\caption{$(1,k)$-quasigeodesics lie close to geodesics}
\label{figure:1,k_close}
\end{center}
\end{figure}

\begin{proof}
Pick geodesics $\path{\vertex{p}}{\vertex{x}}$ and $\path{\vertex{p}}{\vertex{y}}$, and define a geodesic triangle using these and $\alpha$, as in Figure \ref{figure:1,k_close}. Let $m$ be the meeting point on $\path{\vertex{p}}{\vertex{x}}$. Then $m$ must be of distance at most $\frac{k}{2}$ from $\vertex{p}$, since \begin{eqnarray*}
d(\vertex{p}, m) &  =  & \frac{d(\vertex{p}, \vertex{x}) + d(\vertex{p}, \vertex{y}) - d(\vertex{x}, \vertex{y})}{2} \\
        & \le & \frac{d_\gamma(\vertex{p}, \vertex{x}) + d_\gamma(\vertex{p}, \vertex{y}) - d(\vertex{x}, \vertex{y})}{2} \\
        &  =  & \frac{d_\gamma(\vertex{x}, \vertex{y}) - d(\vertex{x}, \vertex{y})}{2} \\
        & \le & \frac{k}{2}.
\end{eqnarray*}

If $m$ lies on a vertex, let $\vertex{q'} = m$, and if not, let $e$ be the edge containing $m$ and let $\vertex{q}'$ be the vertex on $e$ that is closest to $\vertex{x}$. Either way, $d(\vertex{q'}, m) \le \frac{1}{2}$.

Let $\vertex{q}$ be the vertex on $\alpha$ which corresponds to $\vertex{q'}$. Then \begin{eqnarray*}
        d(\vertex{p}, \vertex{q})
& \le & d(\vertex{p}, m) + d(m, \vertex{q'}) + d(\vertex{q'}, \vertex{q}) \\
& \le & \frac{k}{2} + \frac{1}{2} + \delta,
\end{eqnarray*} and \begin{eqnarray*}
        d(\vertex{x}, \vertex{q})
& \le & d(\vertex{x}, \vertex{p}) \\
& \le & d_\gamma(\vertex{x}, \vertex{p}) \\
& \le & d(\vertex{x}, \vertex{p}) + k \\
& \le & d(\vertex{x}, \vertex{q'}) + d(\vertex{q'}, \vertex{p}) + k \\
& \le & d(\vertex{x}, \vertex{q}) + \frac{3k+1}{2}
\end{eqnarray*} as required.
\end{proof}

When the paths $\gamma$ and $\alpha$ are understood, we will refer to $\vertex{q}$ in Lemma \ref{lemma:qgeo} as the \textbf{partner} of $\vertex{p}$.

\begin{lemma}
\label{lemma:qtri}
Suppose $\Gamma$ is a $\delta$-vertex-hyperbolic graph. Let $k$ be a positive integer, let $\vertex{x}$, $\vertex{y}$ and $\vertex{z}$ be vertices in $\Gamma$ and let $\alpha_{xy}$, $\alpha_{yz}$ and $\alpha_{xz}$ be $(1, k)$-quasigeodesics joining $\vertex{x}$ to $\vertex{y}$, $\vertex{y}$ to $\vertex{z}$ and $\vertex{x}$ to $\vertex{z}$ respectively to form a triangle $\alpha$.

Then $\alpha$ is  $3k + 3\delta + 2$-vertex-thin.
\end{lemma}

\begin{figure}
\begin{center}
\input 1k_tri2.pstex_t
\caption{$(1,k)$-quasigeodesic triangles are thin}
\label{figure:1k_tri}
\end{center}
\end{figure}

\begin{proof}
Pick geodesics $\path{\vertex{x}}{\vertex{y}}$, $\path{\vertex{y}}{\vertex{z}}$ and $\path{\vertex{x}}{\vertex{z}}$ connecting $\vertex{x}$, $\vertex{y}$ and $\vertex{z}$, to form a geodesic triangle $\beta$. Let $a_{xy}$, $a_{yz}$ and $a_{xz}$ be the meeting points on $\alpha$ and let $b_{xz}$, $b_{yz}$ and $b_{xz}$ be the meeting points on $\beta$. See Figure \ref{figure:1k_tri}.

Let $\vertex{p} \in \alpha_{xy}$ be a vertex corresponding to $\vertex{q} \in \alpha_{xz}$, so $d_{\alpha_{xz}}(\vertex{x}, \vertex{q}) = d_{\alpha_{xy}}(\vertex{x}, \vertex{p})$. Let $\vertex{p'} \in \path{\vertex{x}}{\vertex{y}}$ and $\vertex{q'} \in \path{\vertex{x}}{\vertex{z}}$ be their respective partners, as in Lemma \ref{lemma:qgeo}. By Lemma \ref{lemma:qgeo}, the distances $d(\vertex{p}, \vertex{p'})$ and $d(\vertex{q}, \vertex{q'})$ are less than or equal to $\delta + \frac{k+1}{2}$.

By relabelling the corners of the triangle, any pair of corresponding vertices $\vertex{p}$ and $\vertex{q}$ can be made to fit the above construction. If $d(\vertex{x}, \vertex{p'}) > d(\vertex{x}, \vertex{q'})$ then swapping $\vertex{y}$ and $\vertex{z}$, and $\vertex{p}$ and $\vertex{q}$ reverses the inquality, so it may be assumed that $d(\vertex{x}, \vertex{p'}) \le d(\vertex{x}, \vertex{q'})$.

Suppose $d(\vertex{x}, \vertex{p'}) \le d(\vertex{x}, b_{xy})$, and let $\vertex{p''}$ be the point on $\path{\vertex{x}}{\vertex{z}}$ corresponding to $\vertex{p'}$, so $d(\vertex{p'}, \vertex{p''}) \le \delta$. Using the second part of Lemma \ref{lemma:qgeo}, we have \begin{eqnarray*}
d(\vertex{q'}, \vertex{p''}) &  =  & |d(\vertex{x}, \vertex{q'}) - d(\vertex{x}, \vertex{p''})| \\
           &  =  & |d(\vertex{x}, \vertex{q'}) - d(\vertex{x}, \vertex{p'})| \\
		   & \le & \frac{3k+1}{2},
\end{eqnarray*} as $d_{\alpha_{xz}}(\vertex{x}, \vertex{q}) = d_{\alpha_{xy}}(\vertex{x}, \vertex{p})$. Application of the triangle inequality gives \begin{eqnarray*}
d(\vertex{p}, \vertex{q}) & \le & d(\vertex{p}, \vertex{p'}) + d(\vertex{p'}, \vertex{p''}) + d(\vertex{p''}, \vertex{q'}) + d(\vertex{q'}, \vertex{q}) \\
        & \le & \left(\frac{k+1}{2} + \delta\right) + \delta + \frac{3k+1}{2} + \left(\frac{k+1}{2} + \delta\right) \\
        &  =  & \frac{5k+3}{2} + 3\delta \le 3k + 3\delta + 2,
\end{eqnarray*} as required.

It remains to consider the case where both $d(\vertex{x}, \vertex{p'})$ and $d(\vertex{x}, \vertex{q'})$ are strictly larger than $d(\vertex{x}, b_{xy})$. Note that $d_{\alpha_{xy}}(\vertex{x}, \vertex{p}) = d_{\alpha_{xz}}(\vertex{x}, \vertex{q}) \le d_{\alpha_{xy}}(\vertex{x}, a_{xz})$. Then \begin{eqnarray*}
d(\vertex{x}, b_{xy}) &  <  & d(\vertex{x}, \vertex{p'}) \\
             & \le & d_{\alpha_{xy}}(\vertex{x}, \vertex{p}) \\
             & \le & d_{\alpha_{xy}}(\vertex{x}, a_{xy}) \\
             &  =  & \frac{d_{\alpha_{xy}}(\vertex{x}, \vertex{y}) + d_{\alpha_{xz}}(\vertex{x}, \vertex{z}) - d_{\alpha_{yz}}(\vertex{y}, \vertex{z})}{2} \\
             & \le & \frac{d(\vertex{x}, \vertex{y}) + d(\vertex{x}, \vertex{z}) + 2k - d(\vertex{y}, \vertex{z})}{2} \\
             &  =  & d(\vertex{x}, b_{xy}) + k,
\end{eqnarray*} so $d(\vertex{p'}, b_{xy}) = d(\vertex{x}, \vertex{p'}) - d(\vertex{x}, b_{xy}) \le k$ and $d(\vertex{p}, b_{xy}) \le d(\vertex{p}, \vertex{p'}) + d(\vertex{p'}, b_{xy}) \le \frac{k+1}{2} + \delta + k = \frac{3k+1}{2} + \delta$. By symmetry, $d(\vertex{q}, b_{xz}) \le \frac{3k+1}{2} + \delta$ also, so we have \begin{eqnarray*}
d(\vertex{p}, \vertex{q}) & \le & d(\vertex{p}, b_{xy}) + d(b_{xy}, b_{xz}) + d(b_{xz}, \vertex{q}) \\
        & \le & \left(\frac{3k+1}{2} + \delta\right) + (\delta + 1) + \left(\frac{3k+1}{2} + \delta\right) \\
        &  =  & 3k + 3\delta + 2.
\end{eqnarray*}
\end{proof}

\section{The Effect of Corners not on Vertices}

\label{section:graph_hyp_implies_space_hyp}

We will now investigate the result of allowing corners of a geodesic triangle to reside on an edge rather than a vertex. If the reader has no trouble believing that a result like the following holds, they are advised to simply skip this section; it is provided only for completeness.

That vertex-hyperbolicity implies hyperbolicity is not a new result; Section 4.2 of \cite{epstein2001computation} gives a similar result relating the thinness of short-lex geodesic triangles and the bigon constant (simply stated, the thinness of geodesic triangles with corners on vertices for which one side has length at most $1$) to the hyperbolicity of the space. Applying that result directly here would give us the value $5\delta+3$. The value $2\delta + 6$ given here is not claimed to be minimal, but the use of two correspondances (which results in the $2\delta$) does appear to be necessary.

\begin{proposition}
\label{prop:corner_straight}
Suppose that $x$, $y$ and $z$ are points in a Cayley graph and that $\path{x}{y}$, $\path{y}{z}$ and $\path{x}{z}$ are geodesics forming a geodesic triangle $\alpha$. If the vertex thinness constant of the space is $\delta$ then $\alpha$ is $2\delta+6$-thin.
\end{proposition}

\begin{figure}
\begin{center}
\input resolve_nonvertex_1.pstex_t
\caption{Removing loops from corners (left), and the first case of Proposition \ref{prop:corner_straight} (right)}
\label{figure:resolve_nonvertex_1}
\end{center}
\end{figure}

\begin{proof}
It is sufficient to prove any two corresponding points lie at most $2\delta + 6$ apart. Assume the labels are picked so that a point $p$ on $\path{x}{y}$ corresponds to a point $q$ on $\path{x}{z}$. Let $a_{xy}$, $a_{xz}$ and $a_{yz}$ be the meeting points on $\path{x}{y}$, $\path{x}{z}$ and $\path{y}{z}$ respectively.

If $x$ is a vertex, let $\vertex{x_y} = \vertex{x_z} = x$; if it lies on an edge $e$ then let $\vertex{x_y}$ be the vertex on $e$ which lies on $\path{x}{y}$ and $\vertex{x_z}$ be the vertex on $e$ which lies on $\path{x}{z}$ (these are uniquely defined since $x$ does not lie on a vertex). Define $\vertex{y_x}$ etc. in a similar way. By swapping $z$ and $y$ as necessary, it can be assumed that $d(\vertex{x_y}, x) \le \frac{1}{2}$.

Suppose that $\vertex{x_y} = \vertex{x_z} \ne x$, so $x$ lies on a loop of length $1$, as in the left hand side of Figure \ref{figure:resolve_nonvertex_1}. Notice that $d(x, \vertex{x_y}) = d(x, \vertex{x_z}) = \frac{1}{2}$ or one of the sides of the triangle was not geodesic. If $p$ lies between $x$ and $\vertex{x_y}$ then $d(p, q) \le 1 \le 2\delta + 6$ as required. If not, define a new triangle with corners $\vertex{x_y}$, $y$, and $z$ and edges $\path{\vertex{x_y}}{y}$, $\path{\vertex{x_y}}{z}$, and $\path{y}{z}$. Since $d(x, p) - d(x, q) = d(\vertex{x_y}, p) - d(\vertex{x_y}, q)$, the points $p$ and  $q$  also correspond in the new triangle, so $\alpha$ can be replaced by this new triangle without affecting the arguments below. Thus, it may be assumed that if $x \ne \vertex{x_y}$ then $\vertex{x_z} \ne \vertex{x_y}$.

Note that if $d(p, x) \le 1$ then $d(p, q) \le 2 \le 2\delta + 6$, so we can assume \begin{equation} \label{eqn:p_x_big}
d(p, x) > 1.
\end{equation} Our aim is to produce a second geodesic triangle $\beta$ which lies close to $\alpha$ and whose corners lie on vertices, and then use correspondances in $\beta$ to bound the distance between $p$ and $q$.

First, suppose that $d(\vertex{x_y}, \vertex{z_x}) = d(\vertex{x_y}, \vertex{x_z}) + d(\vertex{x_z}, \vertex{z_x})$, so that $\beta_{xz} = \path{\vertex{x_y}}{\vertex{x_z}}\path{\vertex{x_z}}{\vertex{z_x}}$ is a geodesic, as in the right hand side of Figure \ref{figure:resolve_nonvertex_1}. Let $\vertex{x'} = \vertex{x_y}$, let $\vertex{y'} = \vertex{y_x}$, and let $\vertex{z'} = \vertex{z_x}$. Form a geodesic triangle $\beta$ with corners $\vertex{x'}$, $\vertex{y'}$ and $\vertex{z'}$ using geodesic paths $\beta_{xy} = \path{\vertex{x_y}}{\vertex{y_x}}$, $\beta_{xz}$ and $\beta_{yz} = \path{\vertex{y_x}}{\vertex{z_x}}$ (pick any geodesic for the latter). Let $b_{xy}$ and $b_{xz}$ be the meeting points on $\beta_{xy}$ and $\beta_{xz}$ respectively.

Note that \begin{eqnarray*}
        d(\vertex{x_y}, b_{xy})
&  =  & \frac{d(\vertex{x_y}, \vertex{z_x}) + d(\vertex{x_y}, \vertex{y_x}) - d(\vertex{z_x}, \vertex{y_x})}{2} \\
&  =  & \frac{(d(x, \vertex{z_x}) + d(x, \vertex{x_y})) + (d(x, \vertex{y_x}) - d(x, \vertex{x_y})) - d(\vertex{z_x}, \vertex{y_x})}{2} \\
&  =  & \frac{d(x, \vertex{z_x}) + d(x, \vertex{y_x}) - d(\vertex{z_x}, \vertex{y_x})}{2} \\
& \ge & \frac{(d(x, z) - d(z, \vertex{z_x})) + (d(x, y) - d(y, \vertex{y_x}))}{2} \\
&     & - \frac{d(y, z) + d(z, \vertex{z_x}) + d(y, \vertex{y_x})}{2} \\
&  =  & d(x, a_{xy}) - d(z, \vertex{z_x}) - d(y, \vertex{y_x}) \\
& \ge & d(x, a_{xy}) - 2.
\end{eqnarray*}

Let $\hat{p}$ be a closest vertex to $p$ on $\path{\vertex{x_y}}{\vertex{y_x}}$ with $d(\vertex{x_y}, b_{xy}) \ge d(\vertex{x_y}, \hat{p})$ and let $\hat{q}$ be a closest vertex to $q$ on $\path{\vertex{x_z}}{\vertex{y_z}}$ with $d(\vertex{x_y}, b_{xz}) \ge d(\vertex{x_y}, \hat{q})$.

Suppose that $d(\vertex{x_y}, p) > d(\vertex{x_y}, b_{xy})$, so that $p$ does not correspond to any point on $\beta_{xz}$ in $\beta$. The same must be true of $q$ as $d(\vertex{x_y}, q) = d(\vertex{x_y}, p) + 2d(x, \vertex{x_y}) \ge d(\vertex{x_y}, p)$. If the meeting points $b_{xy}$ and $b_{xz}$ lie on vertices, $\hat{p}$ and $\hat{q}$ must now be equal to $b_{xy}$ and $b_{xz}$ respectively. If not, $d(\vertex{x_y}, \hat{p}) = d(\vertex{x_y}, b_{xy}) - \frac{1}{2}$ and $d(\vertex{x_y}, \hat{q}) = d(\vertex{x_y}, b_{xz}) - \frac{1}{2}$.

Now $d(\vertex{x_y}, \hat{p})=d(\vertex{x_y}, \hat{q})$, so  $\hat{p}$ corresponds to $\hat{q}$ in $\beta$. But then \begin{eqnarray*}
        d(p, q)
& \le & d(p, \hat{p}) + d(\hat{p}, \hat{q}) + d(\hat{q}, q) \\
& \le & d(\vertex{x_y}, p) - d(\vertex{x_y}, \hat{p}) + \delta + d(\vertex{x_y}, q) - d(\vertex{x_y}, \hat{q}) \\
& \le & d(x, a_{xy}) - d(\vertex{x_y}, b_{xy}) + \frac{1}{2} + \delta + d(x, a_{xy}) - d(\vertex{x_y}, b_{xy}) + \frac{1}{2} \\
& \le & 2 + \frac{1}{2} + \delta + 2 + \frac{1}{2} \\ 
& \le & \delta + 5.
\end{eqnarray*}

The remaining case in this construction is that $d(\vertex{x_y}, p) \le d(\vertex{x_y}, b_{xy})$. If so, let $\vertex{q'}$ be the vertex on $\beta_{xz}$ corresponding to $\hat{p}$. If $\vertex{q'} = \hat{q}$ then \begin{eqnarray*}
        d(p, q)
& \le & d(p, \hat{p}) + d(\hat{p}, \hat{q}) + d(\hat{q}, q) \\
& \le & \delta + 1.
\end{eqnarray*}

If not, $d(\vertex{x_y}, p) - 1 \le d(\vertex{x_y}, p) - 2d(x, \vertex{x_y}) = d(\vertex{x_y}, q)$ implies that $d(\vertex{x_y}, \hat{q}) + 1 = d(\vertex{x_y}, q')$, so \begin{eqnarray*}
        d(p, q)
& \le & d(p, \hat{p}) + d(\hat{p}, \vertex{q'}) + d(\vertex{q'}, \hat{q}) + d(\hat{q}, q) \\
& \le & \delta + 2.
\end{eqnarray*}

Therefore if $\path{\vertex{x_y}}{\vertex{x_z}}\path{\vertex{x_z}}{\vertex{z_x}}$ is a geodesic then $d(p, q) \le \delta + 5 \le 2\delta + 6$ as required.

If $d(x, \vertex{x_y}) < \frac{1}{2}$ then $d(\vertex{x_y}, \vertex{z_x}) = d(\vertex{x_z}, \vertex{z_x}) + 1$, so  $\path{\vertex{x_y}}{\vertex{x_z}}\path{\vertex{x_z}}{\vertex{z_x}}$ must be a geodesic, as if not we can find a path $\path{\vertex{z_x}}{\vertex{x_y}}\path{\vertex{x_y}}{x}$ which is shorter than the path following the geodesic $\path{x}{z}$. If $d(x, \vertex{x_y}) = \frac{1}{2}$ and $\path{\vertex{x_z}}{\vertex{x_y}}\path{\vertex{x_y}}{\vertex{y_x}}$ is a geodesic, swap $y$ and $z$ and we can once again use the above reasoning.

Thus it remains to consider the case where neither $\path{\vertex{x_y}}{\vertex{x_z}}\path{\vertex{x_z}}{\vertex{z_x}}$ nor $\path{\vertex{x_z}}{\vertex{x_y}}\path{\vertex{x_y}}{\vertex{y_x}}$ are geodesics. In particular, $d(\vertex{y_x}, \vertex{x_y}) = d(\vertex{y_x}, \vertex{x_z})$ and $d(x, \vertex{x_y}) = \frac{1}{2}$.

First construct a geodesic triangle $\gamma$ with sides $\gamma_{wx} := \path{\vertex{x_y}}{\vertex{x_z}}$ and $\gamma_{wy} := \path{\vertex{x_y}}{\vertex{y_x}}$ and $\gamma_{xy} := \path{\vertex{x_z}}{\vertex{y_x}}$, where for the latter path we take any geodesic. Construct a second geodesic triangle $\beta$ with sides $\beta_{xy} := \gamma_{xy}$, $\beta_{xz} := \path{\vertex{x_z}}{\vertex{z_x}}$ and $\beta_{yz} := \path{\vertex{y_x}}{\vertex{z_x}}$, again picking any geodesic for the latter path. See Figure \ref{figure:resolve_nonvertex_2}. Let $b_{xy}$, $b_{xz}$ and $b_{yz}$ be the meeting points on the sides of $\beta$.

\begin{figure}
\begin{center}
\input resolve_nonvertex_2.pstex_t
\caption{The second case of Proposition \ref{prop:corner_straight}}
\label{figure:resolve_nonvertex_2}
\end{center}
\end{figure}


Now \begin{eqnarray*}
        d(\vertex{x_z}, b_{xz})
&  =  & \frac{d(\vertex{x_z}, \vertex{y_x}) + d(\vertex{x_z}, \vertex{z_x}) - d(\vertex{y_x}, \vertex{z_x})}{2} \\
&  =  & \frac{(d(x, \vertex{y_x}) - \frac{1}{2}) + (d(x, \vertex{z_x}) - \frac{1}{2}) - d(\vertex{y_x}, \vertex{z_x})}{2} \\
& \ge & \frac{(d(x, y) - d(y, \vertex{y_x})) + (d(x, z) - d(z, \vertex{z_x}))}{2} \\
&     & - \frac{d(y, z) + d(y, \vertex{y_x}) + d(z, \vertex{z_x})}{2} - 1 \\
& \ge & d(x, a_{xy}) - 3 \\
&  =  & d(\vertex{x_z}, a_{xy}) - \frac{5}{2}.
\end{eqnarray*}

Let $\hat{p}$ be the closest vertex to $p$ on $\path{\vertex{x_y}}{\vertex{y_x}}$ such that $d(\vertex{x_z}, b_{xz}) \ge d(\vertex{x_y}, \hat{p})$ and let $\hat{q}$ be the closest vertex to $q$ on $\path{\vertex{x_z}}{\vertex{z_x}}$ such that $d(\vertex{x_z}, b_{xz}) \ge d(\vertex{x_y}, \hat{q})$ (picking the closest to $x$ if there are two).

We have assumed in equation (\ref{eqn:p_x_big}) that $d(p, x) > 1$. Then $\hat{p}$ corresponds in $\gamma$ to a vertex $\vertex{p'}$ on $\path{\vertex{x_z}}{\vertex{y_x}}$ with $d(\vertex{x_y}, \hat{p}) = d(\vertex{x_z}, \vertex{p'}) = d(\vertex{x_z}, \hat{q})$, so $\hat{p}$ must $2$-correspond to $\hat{q}$ in the triangles $\gamma$ and $\beta$. Our aim is to bound $d(p, \hat{p}) = d(q, \hat{q})$.

If $d(\vertex{x_y}, p) > d(\vertex{x_z}, b_{xy})$ then \begin{eqnarray*}
        d(p, \hat{p})
&  =  & d(\vertex{x_y}, p) - d(\vertex{x_y}, \hat{p}) \\
& \le & d(\vertex{x_y}, a_{xy}) - (d(\vertex{x_y}, b_{xz}) - \frac{1}{2}) \\
& \le & 3,
\end{eqnarray*} and otherwise $d(p, \hat{p}) \le \frac{1}{2}$. Thus $d(p, q) \le d(p, \hat{p}) + d(\hat{p}, \hat{q}) + d(\hat{q}, q) \le 2\delta + 6$ and we are done.
\end{proof}

\section{A Change of Generating Set}

In this section, we will suppose we are given some presentation $G = <\!\!X'|R\!\!>$, and that the Cayley graph of this presentation has vertex thinness constant $\delta \ge 1$.

Let $X = X' \cup\{\$\}$ where $\$ =_G 1$, and  let $\Gamma$ be the Cayley graph of $G$ with respect to $X$. Any shortest path label in $\Gamma$ between two elements of $G$ cannot involve $\$$, so is also a shortest path label in the original Cayley graph between the same two elements of $G$, and vice versa. Thus, $<\!\!X|R,\$\!\!>$ is another presentation for $G$ with vertex thinness constant $\delta$. 

Pick some $k \in \mathbb{N}$, and let $Y = \{ g\in G : 1 \le |g|_X \le k \}$. Our aim will be to find a bound on the thinness of triangles in the Cayley graph $\Gamma'$ under the new generating set $Y$.

For each element $a \in Y$, pick any $X$-word of length $k$ such that $w$ and $a$ represent the same element of $G$. The existence of such a word is guaranteed by the presence of the generator $\$$: if the shortest word does not have a length of $k$, pad it by adding $\$$ anywhere in the word until it does. Extend this to a map of words $f : Y^* \to (X^{\pm 1})^*$ (ignoring any cancellation).

If $w$ is a word in either generating set, let $|w|$ be its length, and for a group element $g$ (perhaps represented by an $X$-word or a $Y$-word), let $|g|_X = d_\Gamma(1, g)$ and $|g|_Y = d_{\Gamma'}(1, g)$.

\begin{lemma}
\label{lemma:qiso}
If $w \in Y^*$ labels a geodesic in $\Gamma'$ then $|f(w)| \le |f(w)|_X + k - 1$. In particular, $f(w)$ labels a $(1, k - 1)$-quasigeodesic in $\Gamma$.
\end{lemma}

\begin{proof}
If $|f(w)|_X \le k(|w| - 1)$ then $f(w)$ can be represented by $n = |w| - 1$ words $w_i'$ of length at most $k$, each of which correspond to some $y_i \in Y$, hence $w =_G y_1 \ldots y_n$. But then $w$ does not label a geodesic since $n < |w|$.

Thus $|f(w)|_X > k(|w| - 1)$, or since this is an integer equation, we can rearrange it to $|f(w)| = k|w| \le |f(w)|_X + k - 1$. Suppose now that $f(w)$ labels a path $\gamma$ in $\Gamma$ starting at $\vertex{a}$ and ending at $\vertex{b}$ so that $|f(w)| = d_\gamma(\vertex{a}, \vertex{b}) \ge d(\vertex{a}, \vertex{b}) = |f(w)|_X$. Given any two points $c, d \in \gamma$ we find (possibly by swapping $c$ and $d$) that \begin{eqnarray*}
        d_\gamma(c, d)
&  =  & d_\gamma(\vertex{a}, \vertex{b}) - d_\gamma(\vertex{a}, c) - d_\gamma(d, \vertex{b}) \\
& \le & d(\vertex{a}, \vertex{b}) + k - 1 - d(\vertex{a}, c) - d(d, \vertex{b}) \\
& \le & d(c, d) + k - 1,
\end{eqnarray*}

where the last line is due to the triangle inequality. But now, by definition $\gamma$ is a $(1, k-1)$-quasigeodesic and we are done.
\end{proof}

\begin{proposition}
\label{prop:newgen}
With the hypothesis given at the start of this section, $\Gamma'$ is $\ceil{\frac{3k - 2 + 3\delta}{k}}$-vertex-thin.
\end{proposition}

\begin{figure}
\begin{center}
\input triangle_beta_const.pstex_t
\caption{A triangle in $\Gamma'$ mapped into $\Gamma$}
\label{figure:triangle_beta_const}
\end{center}
\end{figure}

\begin{proof}
Let $\vertex{x'}$, $\vertex{y'}$ and $\vertex{z'}$ be vertices in $\Gamma'$, and let $\vertex{x}$, $\vertex{y}$ and $\vertex{z}$ be the vertices in $\Gamma$ which represent to the same group elements. Pick geodesics connecting $\vertex{x'}$, $\vertex{y'}$ and $\vertex{z'}$ in $\Gamma'$ to form a geodesic triangle $\alpha$, and note that any vertex along these geodesics corresponds to a vertex in $\Gamma$. If $w'$ was the label on a side of $\alpha$, then $f(w')$ labels a path which passes through each of these points, and is a $(1, k-1)$-quasigeodesic by Lemma \ref{lemma:qiso}. Let $\beta$ be the triangle in $\Gamma$ labelled by these paths.

By Lemma \ref{lemma:qtri}, $\beta$ is $3k - 2 + 3\delta$-thin. Since corresponding vertices on $\alpha$ are guaranteed to map to corresponding vertices on $\beta$ (this is ensured by the introduction of $\$$: if $d_\alpha(\vertex{x}, \vertex{p}) = n$ then $d_\beta(\vertex{x}, \vertex{p}) = kn$), corresponding vertices on $\alpha$ are within $\ceil{\frac{3k - 2 + 3\delta}{k}}$ of each other and we are done.
\end{proof}

\begin{theorem} 
All word-hyperbolic groups have a presentation with respect to which their Cayley graph is $4$-vertex-hyperbolic, and $14$-hyperbolic.
\end{theorem}

\begin{proof}
Using the construction in Proposition \ref{prop:newgen} with $k = 3\delta + 1$, we get a presentation whose vertex thinness is constant is $4$, and by Proposition \ref{prop:corner_straight}, all geodesic triangles in the Cayley graph for this presentation must be $14$-thin.
\end{proof}

\section{Conclusion and Possible Further Work}

In this chapter we have seen that all word-hyperbolic groups admit a presentation with respect to which their Cayley graph is $4$-vertex-hyperbolic. It is well known that a graph is $0$-hyperbolic if and only if it is a tree; in other words if and only if the group is free.

It is reasonable to ask, then, which groups admit a $1$-vertex-hyperbolic Cayley graph? It may be that this is any word-hyperbolic group, but if not, is there any other identifying property?

\bibliography{bibitems}
\bibliographystyle{plain}

\end{document}
